{"version":3,"sources":["webpack:///./src/views/file-slice-and-merge/file-slice-and-merge.vue?2b06","webpack:///./src/views/file-slice-and-merge/config.js","webpack:///./src/views/file-slice-and-merge/file-slice-and-merge.vue?ab9f","webpack:///./src/utils/file-slice-and-merge.js","webpack:///src/views/file-slice-and-merge/file-slice-and-merge.vue","webpack:///./src/views/file-slice-and-merge/file-slice-and-merge.vue?9246","webpack:///./src/views/file-slice-and-merge/file-slice-and-merge.vue"],"names":["code1","code2","render","_vm","this","_h","$createElement","_c","_self","newIndex","_e","attrs","staticClass","_v","ref","on","changeFile1","changeFile2","_m","staticRenderFns","fileSliceAndMerge","arg","options","fileId","file","refs","_this","type","fileSize","fileName","isSort","success","result","fail","error","code","msg","files","$refs","document","querySelector","fileSlice","fileMerge","fileList","i","size","index","parseInt","fileSort","sort","slice","file_name","name","push","length","file_name_arr","forEach","v","map","replace","File","props","default","data","mounted","methods","res","downFile","a","component"],"mappings":"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","file":"static/js/chunk-96de7664.2142e80a.js","sourcesContent":["export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!./file-slice-and-merge.vue?vue&type=style&index=0&id=7511a45f&prod&lang=less&scoped=true&\"","/*\r\n * @Author: zs.duan\r\n * @Date: 2022-11-25 18:27:44\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-11-25 19:29:14\r\n * @FilePath: \\vue2+elui+template\\src\\views\\file-slice-and-merge\\config.js\r\n */\r\nexport const code1 = `\r\n/*\r\n * @name 文件切片与还原 合并文件要和切片的文件相同\r\n * @parame fileId 读取文件的 id 可选 fileId/file/refs 任选其一\r\n * @parame file 文件本身 可选 fileId/file/refs 任选其一\r\n * @parame refs vue的ref 可选 fileId/file/refs 任选其一\r\n * @parame _this 全局的this指向 refs不为空可选\r\n * @parame type Slice 分片 Merge 合并 \r\n * @parame fileSize 切片大小 默认 5M\r\n * @parame fileName 合并的文件名称\r\n * @parame isSort 合并进行排序\r\n * @method fail 错误返回\r\n * @method success 成功返回 返回数据为下面的数据\r\n * @return { 分片返回\r\n     code : 200,\r\n     fileList : [\r\n        {\r\n            sort : number, //排序\r\n            file : file, //文件bold\r\n            file_name : string ,//文件名称\r\n        }\r\n     ], //文件分片的list数据\r\n     file_name : files.name //文件名称\r\n * }\r\n * @return { 合并返回\r\n     code : 200,\r\n     file : file, //文件 blod数据\r\n     file_name : string //文件名称\r\n * }\r\n*/ \r\n//使用\r\nimport {fileSliceAndMerge} from \"@/utils/file-slice-and-merge\"\r\n// 切片\r\nchangeFile1(){\r\n    fileSliceAndMerge({\r\n        refs : \"myfile\",\r\n        _this : this,\r\n        fileSize :1024 * 1024 * 5,\r\n        success : (res)=>{\r\n            res.fileList.forEach((v ,index) =>{\r\n                \r\n            })\r\n        }\r\n    })\r\n},\r\n`\r\n\r\nexport const code2 = `\r\n// 合并\r\nchangeFile2(){\r\n    fileSliceAndMerge({\r\n        refs : \"myfile1\",\r\n        _this : this,\r\n        type : \"merge\",\r\n        success : (res)=>{\r\n            \r\n        }\r\n    })\r\n},\r\n`","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.newIndex)?_c('dzs-header',{attrs:{\"title\":\"vue动态路由\"}}):_vm._e(),_c('div',{staticClass:\"page\"},[_c('div',{staticClass:\"tips-box\"},[_vm._v(\"大文件的切片和分割\")]),_c('h2',[_vm._v(\"切片\")]),_c('div',{staticClass:\"item\"},[_c('input',{ref:\"myfile\",attrs:{\"type\":\"file\"},on:{\"change\":_vm.changeFile1}}),_c('dzs-code',{attrs:{\"title\":\"源代码\",\"value\":_vm.code1}})],1),_c('h2',[_vm._v(\"合并\")]),_c('div',{staticClass:\"item\"},[_c('input',{ref:\"myfile1\",attrs:{\"type\":\"file\",\"multiple\":\"\"},on:{\"change\":_vm.changeFile2}}),_c('dzs-code',{attrs:{\"title\":\"源代码\",\"value\":_vm.code2}})],1),_c('h2',[_vm._v(\"源代码下载/查看\")]),_vm._m(0)]),(!_vm.newIndex)?_c('el-backtop',{attrs:{\"visibility-height\":20}}):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"item\"},[_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/zsduan/zsduan-summary/blob/master/src/utils/file-slice-and-merge.js\"}},[_vm._v(\"下载/查看地址\")])])}]\n\nexport { render, staticRenderFns }","/*\r\n * @Author: zs.duan\r\n * @Date: 2022-11-25 17:13:14\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-12-15 10:38:48\r\n * @FilePath: \\vue2+js+eui+template\\src\\utils\\file-slice-and-merge.js\r\n */\r\n\r\n/*\r\n * @name 文件切片与还原 合并文件要和切片的文件相同\r\n * @parame fileId 读取文件的 id 可选 fileId/file/refs 任选其一\r\n * @parame file 文件本身 可选 fileId/file/refs 任选其一\r\n * @parame refs vue的ref 可选 fileId/file/refs 任选其一\r\n * @parame _this 全局的this指向 refs不为空可选\r\n * @parame type Slice 分片 Merge 合并 \r\n * @parame fileSize 切片大小 默认 5M\r\n * @parame fileName 合并的文件名称\r\n * @parame isSort 合并进行排序\r\n * @method fail 错误返回\r\n * @method success 成功返回 返回数据为下面的数据\r\n * @return { 分片返回\r\n     code : 200,\r\n     fileList : [\r\n        {\r\n            sort : number, //排序\r\n            file : file, //文件bold\r\n            file_name : string ,//文件名称\r\n        }\r\n     ], //文件分片的list数据\r\n     file_name : files.name //文件名称\r\n * }\r\n * @return { 合并返回\r\n     code : 200,\r\n     file : file, //文件 blod数据\r\n     file_name : string //文件名称\r\n * }\r\n*/ \r\n\r\nexport const fileSliceAndMerge = (...arg) =>{\r\n    let options = {\r\n        fileId : \"\",  //读取文件的id\r\n        file : \"\" , //文件\r\n        refs : \"\" ,\r\n        _this : null  , //全局this 指向 指向 Vue\r\n        type : \"slice\", //Slice 分片 Merge 合并\r\n        fileSize : 1024 * 1024 * 5 ,// 切片大小 5M\r\n        fileName : \"\" , //合并文件名称\r\n        isSort : true , //合并是否进行自动排序\r\n        success : (result)=>{} , //读取成功返回\r\n        fail : (error) => {} , //读取失败返回\r\n    }\r\n    options = {\r\n        ...options,\r\n        ...arg[0]\r\n    }\r\n    if(!options.fileId && !options.file && !options.refs){\r\n        options.fail({\r\n            code : -1,\r\n            msg : \"fileId or file or refs must be not null\"\r\n        })\r\n        return ;\r\n    }\r\n    if(options.refs && !options._this){\r\n        options.fail({\r\n            code : -1,\r\n            msg : \"_this must be not null\"\r\n        })\r\n        return ;\r\n    }\r\n    if(!options.type){\r\n        options.fail({\r\n            code : -1,\r\n            msg : \"type must be not null\"\r\n        })\r\n        return ;\r\n    }\r\n    let files = null;\r\n    if(options.refs){\r\n        files = options._this.$refs[options.refs].files\r\n    }\r\n    if(options.fileId){\r\n        files = document.querySelector(`#${options.fileId}`).files;\r\n    }\r\n    if(options.file){\r\n        files = options.file;\r\n    }\r\n    if(options.type == \"slice\"){\r\n        fileSlice(files[0] , options);\r\n    }\r\n    if(options.type == 'merge'){\r\n        fileMerge(files , options)\r\n    }\r\n}\r\n\r\n// 切片\r\nexport const fileSlice = (files , options) =>{\r\n    let fileList = [];\r\n    for(let i = 0 ; i < files.size ; i += options.fileSize){\r\n        let index = parseInt(i / options.fileSize) + 1;\r\n        let fileSort = {\r\n            sort : index,\r\n            file : files.slice(i , options.fileSize * index),\r\n            file_name : `${files.name}-index` \r\n        }\r\n        fileList.push(fileSort);\r\n    }\r\n    options.success({\r\n        code : 200,\r\n        fileList : fileList,\r\n        file_name : files.name\r\n    })\r\n}\r\n\r\n// 合并\r\nexport const fileMerge = (files , options , fileName) =>{\r\n    let fileList = [];\r\n    if(!files.length){\r\n        options.fail({\r\n            code : -1,\r\n            msg : \"files is null\"\r\n        })\r\n        return ;\r\n    }\r\n    if(options.isSort){\r\n        let file_name_arr = []\r\n        for(let i = 0 ; i < files.length ; i ++){\r\n            file_name_arr.push(files[i].name);\r\n        }\r\n        file_name_arr = file_name_arr.sort();\r\n        file_name_arr.forEach(v =>{\r\n            for(let i = 0 ; i < files.length ; i ++){\r\n                if(files[i].name == v){\r\n                    fileList.push(files[i].slice(0 , files[i].size))\r\n                }\r\n            }\r\n        })\r\n    }else{\r\n        fileList = [...files].map((v)=>{\r\n            return v.slice(0 , v.size);\r\n        })\r\n    }\r\n    const name = fileName ? fileName : files[0].name.replace(/-\\d+$/,\"\");\r\n    const file = new File(fileList , name)\r\n    options.success({\r\n        code : 200,\r\n        file : file,\r\n        file_name : name\r\n    })\r\n}","<!--\r\n * @Author: zs.duan\r\n * @Date: 2022-11-25 17:20:17\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2023-01-11 15:32:21\r\n * @FilePath: \\vue2+js+eui+template\\src\\views\\file-slice-and-merge\\file-slice-and-merge.vue\r\n-->\r\n<template>\r\n    <div>\r\n        <dzs-header title=\"vue动态路由\" v-if=\"!newIndex\"></dzs-header>\r\n        <div class=\"page\">\r\n            <div class=\"tips-box\">大文件的切片和分割</div>\r\n            <h2>切片</h2>\r\n            <div class=\"item\">\r\n                <input type=\"file\" ref=\"myfile\" @change=\"changeFile1\"/>\r\n                <dzs-code title=\"源代码\" :value=\"code1\"></dzs-code>\r\n            </div>\r\n            <h2>合并</h2>\r\n            <div class=\"item\">\r\n                <input type=\"file\" ref=\"myfile1\" multiple @change=\"changeFile2\"/>\r\n                <dzs-code title=\"源代码\" :value=\"code2\"></dzs-code>\r\n            </div>\r\n            <h2>源代码下载/查看</h2>\r\n            <div class=\"item\">\r\n                <a target=\"_blank\" href=\"https://github.com/zsduan/zsduan-summary/blob/master/src/utils/file-slice-and-merge.js\">下载/查看地址</a>\r\n               \r\n            </div>\r\n        </div>\r\n        <el-backtop :visibility-height=\"20\" v-if=\"!newIndex\"></el-backtop>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {code1 , code2} from \"./config\";\r\nimport {fileSliceAndMerge} from \"@/utils/file-slice-and-merge\"\r\nexport default {\r\n    props:{\r\n        newIndex : {\r\n            type : Boolean,\r\n            default:()=>{\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    data(){\r\n        return {\r\n            code1 : code1,\r\n            code2 : code2\r\n        }\r\n    },\r\n    mounted(){\r\n        \r\n    },\r\n    methods:{\r\n        // 切片\r\n        changeFile1(){\r\n            fileSliceAndMerge({\r\n                refs : \"myfile\",\r\n                _this : this,\r\n                fileSize :1024 * 1024 * 5,\r\n                success : (res)=>{\r\n                    res.fileList.forEach((v ,index) =>{\r\n                        this.downFile(v.file , res.file_name + \"-\" + v.sort);\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        // 合并\r\n        changeFile2(){\r\n            fileSliceAndMerge({\r\n                refs : \"myfile1\",\r\n                _this : this,\r\n                type : \"merge\",\r\n                success : (res)=>{\r\n                    this.downFile(res.file , res.file_name);\r\n                }\r\n            })\r\n        },\r\n        // 下载文件\r\n        downFile(v , name){\r\n            const a = document.createElement(\"a\");\r\n            a.setAttribute(\"download\",name);\r\n            a.href = URL.createObjectURL(v);\r\n            a.click();\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.item{\r\n    a{\r\n        margin-left: 10px;\r\n        &:first-child{\r\n            margin-left: 0;\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!./file-slice-and-merge.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/index.js??vue-loader-options!./file-slice-and-merge.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./file-slice-and-merge.vue?vue&type=template&id=7511a45f&scoped=true&\"\nimport script from \"./file-slice-and-merge.vue?vue&type=script&lang=js&\"\nexport * from \"./file-slice-and-merge.vue?vue&type=script&lang=js&\"\nimport style0 from \"./file-slice-and-merge.vue?vue&type=style&index=0&id=7511a45f&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.10.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7511a45f\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}