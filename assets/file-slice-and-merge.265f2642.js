var e=Object.defineProperty,i=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,l=(i,t,s)=>t in i?e(i,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[t]=s,r=(e,r)=>{for(var n in r||(r={}))t.call(r,n)&&l(e,n,r[n]);if(i)for(var n of i(r))s.call(r,n)&&l(e,n,r[n]);return e};import{n}from"../static/js/index-3480c9ab.js";import"./_vue@2.6.11@vue.018c1e04.js";import"./_async-validator@1.8.5@async-validator.e65fb9e0.js";import"./_babel-runtime@6.26.0@babel-runtime.fd39bdc3.js";import"./_core-js@2.6.12@core-js.a6b1d284.js";import"./_vue-router@3.6.5@vue-router.8819c4a8.js";import"./_vuex@3.6.2@vuex.6ec484f5.js";import"./_element-ui@2.15.12@element-ui.07608cd3.js";import"./_deepmerge@1.5.2@deepmerge.fba82243.js";import"./_resize-observer-polyfill@1.5.1@resize-observer-polyfill.5c8b5044.js";import"./_throttle-debounce@1.1.0@throttle-debounce.2739eac7.js";import"./_lodash@4.17.21@lodash.90986bd2.js";import"./_babel-helper-vue-jsx-merge-props@2.0.3@babel-helper-vue-jsx-merge-props.79de6b76.js";import"./_normalize-wheel@1.0.1@normalize-wheel.6188a64d.js";import"./_mavon-editor@2.10.4@mavon-editor.3db41916.js";import"./_vue-prism-editor@1.3.0@vue-prism-editor.705c8dca.js";import"./_prismjs@1.29.0@prismjs.9fa8e4a1.js";const a=(...e)=>{let i={fileId:"",file:"",refs:"",_this:null,type:"slice",fileSize:5242880,fileName:"",isSort:!0,success:e=>{},fail:e=>{}};if(i=r(r({},i),e[0]),!i.fileId&&!i.file&&!i.refs)return void i.fail({code:-1,msg:"fileId or file or refs must be not null"});if(i.refs&&!i._this)return void i.fail({code:-1,msg:"_this must be not null"});if(!i.type)return void i.fail({code:-1,msg:"type must be not null"});let t=null;i.refs&&(t=i._this.$refs[i.refs].files),i.fileId&&(t=document.querySelector(`#${i.fileId}`).files),i.file&&(t=i.file),"slice"==i.type&&o(t[0],i),"merge"==i.type&&f(t,i)},o=(e,i)=>{let t=[];for(let s=0;s<e.size;s+=i.fileSize){let l=parseInt(s/i.fileSize)+1,r={sort:l,file:e.slice(s,i.fileSize*l),file_name:`${e.name}-index`};t.push(r)}i.success({code:200,fileList:t,file_name:e.name})},f=(e,i,t)=>{let s=[];if(!e.length)return void i.fail({code:-1,msg:"files is null"});if(i.isSort){let i=[];for(let t=0;t<e.length;t++)i.push(e[t].name);i=i.sort(),i.forEach((i=>{for(let t=0;t<e.length;t++)e[t].name==i&&s.push(e[t].slice(0,e[t].size))}))}else s=[...e].map((e=>e.slice(0,e.size)));const l=t||e[0].name.replace(/-\d+$/,""),r=new File(s,l);i.success({code:200,file:r,file_name:l})};const c={props:{newIndex:{type:Boolean,default:()=>!1}},data:()=>({code1:'\n/*\n * @name 文件切片与还原 合并文件要和切片的文件相同\n * @parame fileId 读取文件的 id 可选 fileId/file/refs 任选其一\n * @parame file 文件本身 可选 fileId/file/refs 任选其一\n * @parame refs vue的ref 可选 fileId/file/refs 任选其一\n * @parame _this 全局的this指向 refs不为空可选\n * @parame type Slice 分片 Merge 合并 \n * @parame fileSize 切片大小 默认 5M\n * @parame fileName 合并的文件名称\n * @parame isSort 合并进行排序\n * @method fail 错误返回\n * @method success 成功返回 返回数据为下面的数据\n * @return { 分片返回\n     code : 200,\n     fileList : [\n        {\n            sort : number, //排序\n            file : file, //文件bold\n            file_name : string ,//文件名称\n        }\n     ], //文件分片的list数据\n     file_name : files.name //文件名称\n * }\n * @return { 合并返回\n     code : 200,\n     file : file, //文件 blod数据\n     file_name : string //文件名称\n * }\n*/ \n//使用\nimport {fileSliceAndMerge} from "@/utils/file-slice-and-merge"\n// 切片\nchangeFile1(){\n    fileSliceAndMerge({\n        refs : "myfile",\n        _this : this,\n        fileSize :1024 * 1024 * 5,\n        success : (res)=>{\n            res.fileList.forEach((v ,index) =>{\n                \n            })\n        }\n    })\n},\n',code2:'\n// 合并\nchangeFile2(){\n    fileSliceAndMerge({\n        refs : "myfile1",\n        _this : this,\n        type : "merge",\n        success : (res)=>{\n            \n        }\n    })\n},\n'}),mounted(){},methods:{changeFile1(){a({refs:"myfile",_this:this,fileSize:5242880,success:e=>{e.fileList.forEach(((i,t)=>{this.downFile(i.file,e.file_name+"-"+i.sort)}))}})},changeFile2(){a({refs:"myfile1",_this:this,type:"merge",success:e=>{this.downFile(e.file,e.file_name)}})},downFile(e,i){const t=document.createElement("a");t.setAttribute("download",i),t.href=URL.createObjectURL(e),t.click()}}},m={};var d=n(c,(function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",[e.newIndex?e._e():t("dzs-header",{attrs:{title:"vue动态路由"}}),t("div",{staticClass:"page"},[t("div",{staticClass:"tips-box"},[e._v("大文件的切片和分割")]),t("h2",[e._v("切片")]),t("div",{staticClass:"item"},[t("input",{ref:"myfile",attrs:{type:"file"},on:{change:e.changeFile1}}),t("dzs-code",{attrs:{title:"源代码",value:e.code1}})],1),t("h2",[e._v("合并")]),t("div",{staticClass:"item"},[t("input",{ref:"myfile1",attrs:{type:"file",multiple:""},on:{change:e.changeFile2}}),t("dzs-code",{attrs:{title:"源代码",value:e.code2}})],1),t("h2",[e._v("源代码下载/查看")]),e._m(0)]),e.newIndex?e._e():t("el-backtop",{attrs:{"visibility-height":20}})],1)}),[function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{staticClass:"item"},[t("a",{attrs:{target:"_blank",href:"https://github.com/zsduan/zsduan-summary/blob/master/src/utils/file-slice-and-merge.js"}},[e._v("下载/查看地址")])])}],!1,u,"a4698d26",null,null);function u(e){for(let i in m)this[i]=m[i]}var p=function(){return d.exports}();export{p as default};
