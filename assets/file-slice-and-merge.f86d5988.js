var e=Object.defineProperty,i=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,n=(i,t,l)=>t in i?e(i,t,{enumerable:!0,configurable:!0,writable:!0,value:l}):i[t]=l,s=(e,s)=>{for(var r in s||(s={}))t.call(s,r)&&n(e,r,s[r]);if(i)for(var r of i(s))l.call(s,r)&&n(e,r,s[r]);return e};import{n as r}from"./index.530505d4.js";const f=(...e)=>{let i={fileId:"",file:"",refs:"",_this:null,type:"slice",fileSize:5242880,fileName:"",isSort:!0,success:e=>{},fail:e=>{}};if(i=s(s({},i),e[0]),!i.fileId&&!i.file&&!i.refs)return void i.fail({code:-1,msg:"fileId or file or refs must be not null"});if(i.refs&&!i._this)return void i.fail({code:-1,msg:"_this must be not null"});if(!i.type)return void i.fail({code:-1,msg:"type must be not null"});let t=null;i.refs&&(t=i._this.$refs[i.refs].files),i.fileId&&(t=document.querySelector(`#${i.fileId}`).files),i.file&&(t=i.file),"slice"==i.type&&a(t[0],i),"merge"==i.type&&c(t,i)},a=(e,i)=>{let t=[];for(let l=0;l<e.size;l+=i.fileSize){let n=parseInt(l/i.fileSize)+1,s={sort:n,file:e.slice(l,i.fileSize*n),file_name:`${e.name}-index`};t.push(s)}i.success({code:200,fileList:t,file_name:e.name})},c=(e,i,t)=>{let l=[];if(!e.length)return void i.fail({code:-1,msg:"files is null"});if(i.isSort){let i=[];for(let t=0;t<e.length;t++)i.push(e[t].name);i=i.sort(),i.forEach((i=>{for(let t=0;t<e.length;t++)e[t].name==i&&l.push(e[t].slice(0,e[t].size))}))}else l=[...e].map((e=>e.slice(0,e.size)));const n=t||e[0].name.replace(/-\d+$/,""),s=new File(l,n);i.success({code:200,file:s,file_name:n})};const o={};var m=r({data:()=>({code1:'\n/*\n * @name 文件切片与还原 合并文件要和切片的文件相同\n * @parame fileId 读取文件的 id 可选 fileId/file/refs 任选其一\n * @parame file 文件本身 可选 fileId/file/refs 任选其一\n * @parame refs vue的ref 可选 fileId/file/refs 任选其一\n * @parame _this 全局的this指向 refs不为空可选\n * @parame type Slice 分片 Merge 合并 \n * @parame fileSize 切片大小 默认 5M\n * @parame fileName 合并的文件名称\n * @parame isSort 合并进行排序\n * @method fail 错误返回\n * @method success 成功返回 返回数据为下面的数据\n * @return { 分片返回\n     code : 200,\n     fileList : [\n        {\n            sort : number, //排序\n            file : file, //文件bold\n            file_name : string ,//文件名称\n        }\n     ], //文件分片的list数据\n     file_name : files.name //文件名称\n * }\n * @return { 合并返回\n     code : 200,\n     file : file, //文件 blod数据\n     file_name : string //文件名称\n * }\n*/ \n//使用\nimport {fileSliceAndMerge} from "@/utils/file-slice-and-merge"\n// 切片\nchangeFile1(){\n    fileSliceAndMerge({\n        refs : "myfile",\n        _this : this,\n        fileSize :1024 * 1024 * 5,\n        success : (res)=>{\n            res.fileList.forEach((v ,index) =>{\n                \n            })\n        }\n    })\n},\n',code2:'\n// 合并\nchangeFile2(){\n    fileSliceAndMerge({\n        refs : "myfile1",\n        _this : this,\n        type : "merge",\n        success : (res)=>{\n            \n        }\n    })\n},\n'}),mounted(){},methods:{changeFile1(){f({refs:"myfile",_this:this,fileSize:5242880,success:e=>{e.fileList.forEach(((i,t)=>{this.downFile(i.file,e.file_name+"-"+i.sort)}))}})},changeFile2(){f({refs:"myfile1",_this:this,type:"merge",success:e=>{this.downFile(e.file,e.file_name)}})},downFile(e,i){const t=document.createElement("a");t.setAttribute("download",i),t.href=URL.createObjectURL(e),t.click()}}},(function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",[t("dzs-header",{attrs:{title:"vue动态路由"}}),t("div",{staticClass:"page"},[t("div",{staticClass:"tips-box"},[e._v("大文件的切片和分割")]),t("h2",[e._v("切片")]),t("div",{staticClass:"item"},[t("input",{ref:"myfile",attrs:{type:"file"},on:{change:e.changeFile1}}),t("dzs-code",{attrs:{title:"源代码",value:e.code1}})],1),t("h2",[e._v("合并")]),t("div",{staticClass:"item"},[t("input",{ref:"myfile1",attrs:{type:"file",multiple:""},on:{change:e.changeFile2}}),t("dzs-code",{attrs:{title:"源代码",value:e.code2}})],1),t("h2",[e._v("源代码下载/查看")]),e._m(0)]),t("el-backtop",{attrs:{"visibility-height":20}})],1)}),[function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{staticClass:"item"},[t("a",{attrs:{target:"_blank",href:"https://github.com/zsduan/zsduan-summary/blob/master/src/utils/file-slice-and-merge.js"}},[e._v("下载/查看地址")])])}],!1,d,"4ad51d32",null,null);function d(e){for(let i in o)this[i]=o[i]}var u=function(){return m.exports}();export{u as default};
