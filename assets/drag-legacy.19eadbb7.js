!function(){var e=document.createElement("style");e.innerHTML=".my-list[data-v-16f21c53]{display:flex;justify-content:space-between;flex-wrap:wrap}.my-list .list-item[data-v-16f21c53]{margin-top:15px;padding:5px;background:var(--ThemeColor);border-radius:5px;height:40px;cursor:pointer;color:#fff;line-height:30px;width:49%}.my-list .moving[data-v-16f21c53]{background:transparent;color:transparent;border:1px dashed #ccc}\n",document.head.appendChild(e),System.register(["./index-legacy.47d59fb5.js"],(function(e){"use strict";var t;return{setters:[function(e){t=e.n}],execute:function(){var n={},i=t({data:function(){return{code1:'\n// html\n<ul class="my-list" ref="myList">\n    <li\n        @dragover="Mydragover($event)"\n        @dragenter="Mydragenter($event , index)"\n        @dragstart="MyDragstart($event , index)"\n        @dragend="Mydragend"\n        draggable="true"\n        :class="item.active ? \'moving\' :\'\'"\n        class="list-item"\n        v-for="(item , index) in list"\n        :key="index"\n        >{{index + 1}} {{item.name}}</li>\n    </ul>\n// data\nlist: [\n    {\n        name: "张珊",\n        active: false,\n    },\n    {\n        name: "张三",\n        active: false,\n    },\n    {\n        name: "李四",\n        active: false,\n    },\n    {\n        name: "王五",\n        active: false,\n    },\n    {\n        name: "李二狗",\n        active: false,\n    },\n    {\n        name: "王麻子",\n        active: false,\n    },\n],\nsourceNode: null, //当前正在拖动的元素\nnewList: [],\n// js\nMyDragstart(e, index) {\n    setTimeout(() => {\n        this.list[index].active = true;\n    }, 10);\n    this.sourceNode = e.target;\n    e.dataTransfer.effectAllowed = "move";\n    if (!this.newList.length) {\n        this.newList = JSON.parse(JSON.stringify(this.list));\n    }\n},\nMydragend() {\n    this.list.forEach((v) => {\n        v.active = false;\n    });\n},\nMydragenter(e, index) {\n    e.preventDefault();\n    if (e.target == this.sourceNode) {\n        return;\n    }\n    const listNode = this.$refs.myList;\n    const children = Array.from(this.$refs.myList.children);\n    const sourceIndex = children.indexOf(this.sourceNode);\n    const targetIndex = children.indexOf(e.target);\n    const move = JSON.parse(JSON.stringify(this.list[sourceIndex]));\n    const target = JSON.parse(JSON.stringify(this.list[targetIndex]));\n    this.newList[targetIndex] = move;\n    this.newList[sourceIndex] = target;\n    if (sourceIndex < targetIndex) {\n        listNode.insertBefore(\n            this.sourceNode,\n            e.target.nextElementSibling\n        );\n    } else {\n        listNode.insertBefore(this.sourceNode, e.target);\n    }\n},\nMydragover(e) {\n    e.preventDefault();\n},\n',list:[{name:"张珊",active:!1},{name:"张三",active:!1},{name:"李四",active:!1},{name:"王五",active:!1},{name:"李二狗",active:!1},{name:"王麻子",active:!1}],sourceNode:null,newList:[]}},mounted:function(){},methods:{MyDragstart:function(e,t){var n=this;setTimeout((function(){n.list[t].active=!0}),10),this.sourceNode=e.target,e.dataTransfer.effectAllowed="move",this.newList.length||(this.newList=JSON.parse(JSON.stringify(this.list)))},Mydragend:function(){this.list.forEach((function(e){e.active=!1}))},Mydragenter:function(e,t){if(e.preventDefault(),e.target!=this.sourceNode){var n=this.$refs.myList,i=Array.from(this.$refs.myList.children),s=i.indexOf(this.sourceNode),r=i.indexOf(e.target),a=JSON.parse(JSON.stringify(this.list[s])),d=JSON.parse(JSON.stringify(this.list[r]));this.newList[r]=a,this.newList[s]=d,s<r?n.insertBefore(this.sourceNode,e.target.nextElementSibling):n.insertBefore(this.sourceNode,e.target)}},Mydragover:function(e){e.preventDefault()}}},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("dzs-header",{attrs:{title:"拖动效果"}}),n("div",{staticClass:"page"},[n("h2",[e._v("效果展示")]),n("div",{staticClass:"item"},[n("div",{staticClass:"tips-box"},[e._v("仅支持电脑端 手机端 请使用 vue-draggable")]),n("ul",{ref:"myList",staticClass:"my-list"},e._l(e.list,(function(t,i){return n("li",{key:i,staticClass:"list-item",class:t.active?"moving":"",attrs:{draggable:"true"},on:{dragover:function(t){return e.Mydragover(t)},dragenter:function(t){return e.Mydragenter(t,i)},dragstart:function(t){return e.MyDragstart(t,i)},dragend:e.Mydragend}},[e._v(e._s(i+1)+" "+e._s(t.name))])})),0),n("dzs-code",{attrs:{title:"代码",value:e.code1}})],1),n("h2",[e._v("源代码下载/查看")]),e._m(0)]),n("el-backtop",{attrs:{"visibility-height":20}})],1)}),[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"item"},[n("a",{attrs:{target:"_blank",href:"https://github.com/zsduan/zsduan-summary/blob/master/src/views/drag.vue"}},[e._v("下载/查看地址")])])}],!1,s,"16f21c53",null,null);function s(e){for(var t in n)this[t]=n[t]}e("default",function(){return i.exports}())}}}))}();
