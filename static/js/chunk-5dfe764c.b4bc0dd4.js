(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5dfe764c","chunk-2d0e906f"],{"0df0":function(e,t,n){"use strict";n("d9a4")},"650d":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e._self._c;return t("div",[e.newIndex?e._e():t("dzs-header",{attrs:{title:"分组排序"}}),t("div",{staticClass:"page"},[t("h2",[e._v("基础用法-排序")]),t("div",{staticClass:"item"},[t("div",[e._v(e._s(e.value1))]),t("dzs-code",{attrs:{title:"使用方法",value:e.code1}})],1),t("h2",[e._v("基础用法-排序-降序")]),t("div",{staticClass:"item"},[t("div",[e._v(e._s(e.value2))]),t("dzs-code",{attrs:{title:"使用方法",value:e.code2}})],1),t("h2",[e._v("基础用法-分组")]),t("div",{staticClass:"item"},[t("div",[e._v(e._s(e.value3))]),t("dzs-code",{attrs:{title:"使用方法",value:e.code3}})],1),t("h2",[e._v("源代码下载/查看")]),e._m(0)]),e.newIndex?e._e():t("el-backtop",{attrs:{"visibility-height":20}})],1)},r=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"item"},[t("a",{attrs:{target:"_blank",href:"https://github.com/zsduan/zsduan-summary/blob/master/src/utils/group-sorting.js"}},[e._v("下载/查看地址")])])}];n("d9e2"),n("14d9");function s(e){let t={list:[],key:"",func:null,type:"sort",order:"asc",success:function(e){},fail:function(e){}};if("object"!==typeof e)throw t.fail("option is not a object"),new Error("option is not a object");if(Object.assign(t,e),!Array.isArray(t.list))throw t.fail("list is not a array"),new Error("list is not a array");let n=[];return"group"===t.type?n=o(t.list,t.key):"sort"===t.type&&(n=i(t.list,t.key,t.func),"desc"===t.order&&n.reverse()),t.success(n),n}const o=(e,t)=>{let n={};return e.forEach(e=>{let a=e[t];n[a]||(n[a]=[]),n[a].push(e)}),n},i=(e,t,n,a)=>{if(n)e.sort(n);else if("desc"===a){if(e[0]&&"object"!==typeof e[0])return e.sort((e,t)=>t-e),e;e.sort((e,n)=>n[t]-e[t])}else e[0]&&"object"!==typeof e[0]&&e.sort((e,t)=>e-t),e.sort((e,n)=>e[t]-n[t]);return e};var c=s,u=n("8c7e"),l={props:{newIndex:{type:Boolean,default:()=>!1}},data(){return{code1:u["code1"],code2:u["code2"],code3:u["code3"],value1:"",value2:"",value3:""}},mounted(){let e=[{age:18,name:"张三"},{age:18,name:"李四"},{age:17,name:"王五"},{age:17,name:"王麻子"},{age:20,name:"赵六"},{age:24,name:"赵六器"},{age:20,name:"赵六器"}];this.value1=c({list:e,key:"age"}),this.value2=c({list:e,key:"age",order:"desc"}),this.value3=c({list:e,key:"name",type:"group"})},methods:{}},d=l,p=(n("0df0"),n("2877")),f=Object(p["a"])(d,a,r,!1,null,"fe09e2a0",null);t["default"]=f.exports},"8c7e":function(e,t,n){"use strict";n.r(t),n.d(t,"code1",(function(){return a})),n.d(t,"code2",(function(){return r})),n.d(t,"code3",(function(){return s}));const a='\n/**\n * 分组/排序\n * @param {Object} option\n * @param {Array} option.list 需要处理的数据 必填\n * @param {String} [option.key] 需要处理的数据的key 排序/分组\n * @param {Function} [option.func] 处理函数 优先级高于key 仅在type为sort时有效\n * @param {String} [option.type] 处理类型 group/sort group分组 sort排序 默认sort\n * @param {String} [option.order] 排序方式 asc/desc 仅在type为sort时有效 默认asc\n * @param {Function} [option.success] 成功回调\n * @param {Function} [option.fail] 失败回调\n * @returns {Array} 处理后的数据\n * */ \n\nimport groupOrSort from "@/utils/group-sorting";\n\nlet list = [\n    {\n        age: 18,\n        name: "张三"\n    },\n    {\n        age: 18,\n        name: "李四"\n    },\n    {\n        age: 17,\n        name: "王五"\n    },\n    {\n        age: 17,\n        name: "王麻子"\n    },\n    {\n        age: 20,\n        name: "赵六"\n    },\n    {\n        age : 24 ,\n        name : "赵六器"\n    },\n    {\n        age: 20,\n        name: "赵六器"\n    }\n];\n\nthis.value1 = groupOrSort({\n    list,\n    key: "age",\n});\n',r='\nthis.value2 = groupOrSort({\n    list,\n    key: "age",\n    order: "desc"\n});\n',s='\nthis.value3 = groupOrSort({\n    list,\n    key: "name",\n    type : "group"\n});\n'},d9a4:function(e,t,n){}}]);
//# sourceMappingURL=chunk-5dfe764c.b4bc0dd4.js.map