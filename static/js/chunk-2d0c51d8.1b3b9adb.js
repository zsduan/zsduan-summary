(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c51d8"],{"3e5e":function(n,t,e){"use strict";e.r(t),e.d(t,"code1",(function(){return s})),e.d(t,"code2",(function(){return a}));const s="\n/**\n * 获取格式化时间\n * @param {Object} option 配置对象\n * @param {String} option.Format 格式化字符串 yyyy-MM-dd HH:mm:ss\n * @param {Date | string} [option.date] 日期对象\n * @param {Function} [option.success] 成功返回\n * @param {Function} [option.fail] 失败返回\n * @returns {String} 格式化后的时间\n * @example\n * getTime({\n * Format : 'yyyy-MM-dd HH:mm:ss',\n * date : new Date(),\n * success : (reslut)=>{},\n * }) // 2021-04-05 15:54:28\n * */\n\nsetTime({\n    date : Time,\n    success : (res)=>{\n        this.time = res\n    }\n})\n",a="\n/**\n * 获取格式化时间\n * @param {Object} option 配置对象\n * @param {String} option.Format 格式化字符串 yyyy-MM-dd HH:mm:ss\n * @param {Date | string} [option.date] 日期对象\n * @param {Function} [option.success] 成功返回\n * @param {Function} [option.fail] 失败返回\n * @returns {String} 格式化后的时间\n * @example\n * getTime({\n * Format : 'yyyy-MM-dd HH:mm:ss',\n * date : new Date(),\n * success : (reslut)=>{},\n * }) // 2021-04-05 15:54:28\n * */\n\nsetTime({\n    date : e.Time,\n    Format : \"yyyy-MM-dd\",\n    success : (res)=>{\n        this.time1 = res\n    }\n})\n"}}]);
//# sourceMappingURL=chunk-2d0c51d8.1b3b9adb.js.map