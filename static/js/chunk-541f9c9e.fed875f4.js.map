{"version":3,"sources":["webpack:///./src/views/JS-article/format-time/index.vue","webpack:///src/views/JS-article/format-time/index.vue","webpack:///./src/views/JS-article/format-time/index.vue?feb6","webpack:///./src/views/JS-article/format-time/index.vue?965e","webpack:///./src/views/JS-article/format-time/config.js","webpack:///./src/views/JS-article/format-time/desc.js","webpack:///./src/tool/format-time.js","webpack:///(webpack)/buildin/harmony-module.js"],"names":["render","_vm","this","_c","_self","attrs","code1","_v","_s","time1","formatTimeTableData","code2","time2","diffTableData","code3","time3","lastTableData","code4","time4","weekTableData","code5","time5","dayTableData","code6","time6","leapYearTableData","links","staticRenderFns","data","title","code","lang","formatTime","setTime","diff","startDate","endDate","Date","last","date","num","type","week","day","leapYear","href","component","key","parameterType","desc","remark","children","_formatTime","format","year","getFullYear","month","getMonth","getDate","hour","getHours","minute","getMinutes","second","getSeconds","millisecond","getMilliseconds","o","k","test","replace","RegExp","$1","substr","length","String","options","Object","prototype","toString","call","Error","option","isInternal","success","reslut","fail","error","complete","assign","msg","asyncFormatTime","Promise","resolve","reject","chainFormatTime","time","returnTime","formatStr","Time","callback","timeInfo","_format","_diff","_last","_week","_day","_leapYear","_getNowDate","minutes","seconds","getTime","dateInfo","timeDiff","sendData","allday","hours","allHours","allMinutes","allSeconds","Number","toFixed","Math","floor","previousDate","nextDate","nowDate","setDate","setHours","weekList","getDay","start","oneDay","install","Vue","$formatTime","$asyncFormatTime","$chainFormatTime","$setTime","module","exports","originalModule","webpackPolyfill","create","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/chunk-541f9c9e.fed875f4.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('public-item',{attrs:{\"title\":\"格式化时间\",\"code\":_vm.code1}},[_vm._v(_vm._s(_vm.time1))]),_c('public-item',{attrs:{\"title\":\"参数说明\",\"list\":_vm.formatTimeTableData}}),_c('public-item',{attrs:{\"title\":\"对比时间差\",\"code\":_vm.code2}},[_vm._v(_vm._s(_vm.time2))]),_c('public-item',{attrs:{\"title\":\"参数说明\",\"list\":_vm.diffTableData}}),_c('public-item',{attrs:{\"title\":\"前n天(小时/周)后n天(小时/周) 前用负数 后用正数\",\"code\":_vm.code3}},[_vm._v(\" 后2天 \"+_vm._s(_vm.time3)+\" \")]),_c('public-item',{attrs:{\"title\":\"参数说明\",\"list\":_vm.lastTableData}}),_c('public-item',{attrs:{\"title\":\"获取当前日期是星期几\",\"code\":_vm.code4}},[_vm._v(_vm._s(_vm.time4))]),_c('public-item',{attrs:{\"title\":\"参数说明\",\"list\":_vm.weekTableData}}),_c('public-item',{attrs:{\"title\":\"指定日期是当前(年、月、周)的多少天\",\"code\":_vm.code5}},[_vm._v(\" 当前日期在本年的 \"+_vm._s(_vm.time5)+\" 天 \")]),_c('public-item',{attrs:{\"title\":\"参数说明\",\"list\":_vm.dayTableData}}),_c('public-item',{attrs:{\"title\":\"是否为闰年\",\"code\":_vm.code6}},[_vm._v(\" 本年是否为闰年 \"+_vm._s(_vm.time6)+\" \")]),_c('public-item',{attrs:{\"title\":\"参数说明\",\"list\":_vm.leapYearTableData}}),_c('public-item',{attrs:{\"title\":\"源代码查看\",\"links\":_vm.links}}),_c('dzs-backtop',{attrs:{\"target\":\".el-main\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section>\r\n        <public-item title=\"格式化时间\" :code=\"code1\">{{ time1 }}</public-item>\r\n        <public-item title=\"参数说明\" :list=\"formatTimeTableData\"></public-item>\r\n        <public-item title=\"对比时间差\" :code=\"code2\">{{ time2 }}</public-item>\r\n        <public-item title=\"参数说明\" :list=\"diffTableData\"></public-item>\r\n        <public-item title=\"前n天(小时/周)后n天(小时/周) 前用负数 后用正数\" :code=\"code3\">\r\n            后2天 {{ time3 }}\r\n        </public-item>\r\n        <public-item title=\"参数说明\" :list=\"lastTableData\"></public-item>\r\n        <public-item title=\"获取当前日期是星期几\" :code=\"code4\">{{ time4 }}</public-item>\r\n        <public-item title=\"参数说明\" :list=\"weekTableData\"></public-item>\r\n        <public-item title=\"指定日期是当前(年、月、周)的多少天\" :code=\"code5\">\r\n            当前日期在本年的 {{ time5 }} 天\r\n        </public-item>\r\n        <public-item title=\"参数说明\" :list=\"dayTableData\"></public-item>\r\n        <public-item title=\"是否为闰年\" :code=\"code6\">\r\n            本年是否为闰年 {{ time6 }}\r\n        </public-item>\r\n        <public-item title=\"参数说明\" :list=\"leapYearTableData\"></public-item>\r\n        <public-item title=\"源代码查看\" :links=\"links\"></public-item>\r\n        <dzs-backtop  target=\".el-main\"></dzs-backtop>\r\n    </section>\r\n</template>\r\n<script>\r\nimport { code1, code2, code3, code4, code5, code6 } from \"./config\";\r\nimport { formatTimeTableData, weekTableData, leapYearTableData } from \"./desc\";\r\nimport { diffTableData, lastTableData, dayTableData } from \"./desc\";\r\nimport { formatTime, setTime } from \"@/tool/format-time\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            code1: {\r\n                title: \"代码示例\",\r\n                code: code1,\r\n                lang: \"js\"\r\n            },\r\n            formatTimeTableData,\r\n            time1: formatTime(),\r\n            code2: {\r\n                title: \"代码示例\",\r\n                code: code2,\r\n                lang: \"js\"\r\n            },\r\n            diffTableData,\r\n            time2: setTime.diff({\r\n                startDate: \"2024-01-01 12:00:00\",\r\n                endDate: new Date(),\r\n            }),\r\n            code3: {\r\n                title: \"代码示例\",\r\n                code: code3,\r\n                lang: \"js\"\r\n            },\r\n            lastTableData,\r\n            time3: setTime.last({\r\n                date: new Date(),\r\n                num: 2,\r\n                type: \"day\"\r\n            }),\r\n            code4: {\r\n                title: \"代码示例\",\r\n                code: code4,\r\n                lang: \"js\"\r\n            },\r\n            weekTableData,\r\n            time4: setTime.week(),\r\n            code5: {\r\n                title: \"代码示例\",\r\n                code: code5,\r\n                lang: \"js\"\r\n            },\r\n            dayTableData,\r\n            time5: setTime.day({\r\n                date: new Date(),\r\n                type: \"year\"\r\n            }),\r\n            code6: {\r\n                title: \"代码示例\",\r\n                code: code6,\r\n                lang: \"js\"\r\n            },\r\n            leapYearTableData,\r\n            time6: setTime.leapYear(),\r\n            links: {\r\n                href: \"https://github.com/zsduan/zsduan-summary/blob/master/src/tool/format-time.js\",\r\n                title: \"源码\"\r\n            },\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.3.0/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.3.0/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6d91c386&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6d91c386\",\n  null\n  \n)\n\nexport default component.exports","export const code1 = `\r\nimport {formatTime , asyncFormatTime , chainFormatTime , setTime} from \"@/tool/format-time\";\r\n\r\n/**方式一*/\r\nformatTime({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd HH:mm:ss\",\r\n    success : (res)=>{\r\n        console.log(\"格式化后的时间 ==>\" ,res)\r\n    },\r\n    fail : (err)=>{\r\n        console.log(\"格式化错误 ==>\" , err)\r\n    },\r\n})\r\n\r\n/**方式二*/ \r\nconst time = formatTime({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd\",\r\n});\r\n\r\n/**方式三*/ \r\nconst time = formatTime(new Date())\r\n\r\n/**方式四 Promise*/ \r\nasyncFormatTime({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd HH:mm:ss\",\r\n}).then((res)=>{\r\n    console.log(\"格式化后的时间 ==>\" ,res)\r\n}).catch((err)=>{\r\n    console.log(\"格式化错误 ==>\" , err)\r\n})\r\n\r\n/**方式五 链式调用*/ \r\nconst time = chainFormatTime(new Date()).format(\"yyyy-MM-dd HH:mm:ss\").time;\r\n\r\n/**方式六 统一调用 不支持Promise 但是支持回调*/ \r\nimport {setTime} from \"@/tool/format-time\";\r\nsetTime.format({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd HH:mm:ss\",\r\n    callback : (res)=>{\r\n        console.log(\"格式化后的时间 ==>\" ,res)\r\n    }\r\n})\r\n`\r\n\r\nexport const code2 = `\r\nimport {setTime} from \"@/tool/format-time\";\r\nconst diffTime = setTime.diff({\r\n    startDate : \"2024-01-01 12:00:00\",\r\n    endDate : new Date(),\r\n})\r\n`\r\n\r\nexport const code3 = `\r\nimport {setTime} from \"@/tool/format-time\";\r\nconst lastTime = setTime.last({\r\n    date : new Date(),\r\n    num : 2 ,\r\n    type : \"day\"\r\n})\r\n`\r\n\r\nexport const code4 = `\r\nimport {setTime} from \"@/tool/format-time\";\r\nconst week = setTime.week()\r\n`\r\n\r\nexport const code5 = `\r\nimport {setTime} from \"@/tool/format-time\";\r\nconst day= setTime.day({\r\n    date : new Date(),\r\n    type : \"year\"\r\n})\r\n`\r\n\r\nexport const code6 = `\r\nimport {setTime} from \"../../utils/format-time\";\r\nconst leapYear = setTime.leapYear(new Date())\r\n`","/**\r\n * @name 格式化时间 表格\r\n * */\r\nexport const formatTimeTableData = [\r\n    {\r\n        key : \"options\",\r\n        type : \"param\",\r\n        parameterType : \"object | string | Date | number\",\r\n        desc : \"配置对象 | 日期字符串 | 日期对象 | 时间戳\",\r\n        remark : \"\",\r\n        children : [\r\n            {\r\n                key : \"format\",\r\n                type : \"param\",\r\n                parameterType : \"String\",\r\n                desc : \"格式化方式\",\r\n                remark : \"完整格式 yyyy-MM-dd HH:mm:ss 链式调用.format\"\r\n            },\r\n            {\r\n                key : \"date\",\r\n                type : \"param\",\r\n                parameterType : \"Date | string | number\",\r\n                desc : \"日期对象 | 日期字符串 | 时间戳\",\r\n                remark : \"链式调用请在一个参数传\"\r\n            },\r\n            {\r\n                key : \"success\",\r\n                type : \"param\",\r\n                parameterType : \"Function\",\r\n                desc : \"成功返回\",\r\n                remark : \"\"\r\n            },\r\n            {\r\n                key : \"fail\",\r\n                type : \"param\",\r\n                parameterType : \"Function\",\r\n                desc : \"失败返回\",\r\n                remark : \"\"\r\n            },\r\n            {\r\n                key : \"complete\",\r\n                type : \"param\",\r\n                parameterType : \"Function\",\r\n                desc : \"完成时返回\",\r\n                remark : \"仅 formatTime 支持\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key : \"callback\",\r\n        type : \"param\",\r\n        parameterType : \"Function\",\r\n        desc : \"回调函数\",\r\n        remark : \"仅 setTime.format 支持\"\r\n    },\r\n    {\r\n        key : \"return\",\r\n        type : \"\",\r\n        parameterType : \"String\",\r\n        desc : \"返回数据\",\r\n        remark : \"formatTime|chainFormatTime支持 返回格式化后的数据\"\r\n    },\r\n]\r\n\r\n/**\r\n * @name 对比时间差 表格\r\n * */\r\nexport const diffTableData = [\r\n    {\r\n        key : \"options\",\r\n        type : \"param\",\r\n        parameterType : \"object | Function\",\r\n        desc : \"配置对象 | 回调函数\",\r\n        remark : \"\",\r\n        children : [\r\n            {\r\n                key : \"startDate\",\r\n                type : \"param\",\r\n                parameterType : \"string | Date | number\",\r\n                desc : \"开始时间\",\r\n                remark : \"必填\"\r\n            },\r\n            {\r\n                key : \"endDate\",\r\n                type : \"param\",\r\n                parameterType : \"Date | string | number\",\r\n                desc : \"结束时间\",\r\n                remark : \"\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key : \"callback\",\r\n        type : \"param\",\r\n        parameterType : \"Function\",\r\n        desc : \"回调函数\",\r\n        remark : \"\"\r\n    },\r\n    {\r\n        key : \"return\",\r\n        type : \"\",\r\n        parameterType : \"Object\",\r\n        desc : \"返回数据\",\r\n        remark : '{ \"allday\": -206.225, \"day\": -207, \"hours\": -6, \"allHours\": -4950, \"minutes\": -25, \"allMinutes\": -296965, \"seconds\": -16, \"allSeconds\": -17817856, \"timeDiff\": -17817855398 }'\r\n    },\r\n]\r\n\r\n\r\n/**\r\n * @name 对比时间差 表格\r\n * */\r\nexport const lastTableData = [\r\n    {\r\n        key : \"options\",\r\n        type : \"param\",\r\n        parameterType : \"object | Function\",\r\n        desc : \"配置对象 | 回调函数\",\r\n        remark : \"\",\r\n        children : [\r\n            {\r\n                key : \"date\",\r\n                type : \"param\",\r\n                parameterType : \"string | Date | number\",\r\n                desc : \"需要设置的时间\",\r\n                remark : \"默认当前时间\"\r\n            },\r\n            {\r\n                key : \"number\",\r\n                type : \"param\",\r\n                parameterType : \"number\",\r\n                desc : \"需要前后多少天(小时/周)\",\r\n                remark : \" 默认1\"\r\n            },\r\n            {\r\n                key : \"type\",\r\n                type : \"param\",\r\n                parameterType : \"string\",\r\n                desc : \"类型\",\r\n                remark : \" day hour week 默认 day\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key : \"callback\",\r\n        type : \"param\",\r\n        parameterType : \"Function\",\r\n        desc : \"回调函数\",\r\n        remark : \"\"\r\n    },\r\n    {\r\n        key : \"return\",\r\n        type : \"\",\r\n        parameterType : \"Object\",\r\n        desc : \"返回数据\",\r\n        remark : '{ \"previousDate\": \"\", \"nextDate\": \"2024-07-27\", \"nowDate\": \"2024-07-27\", \"dateInfo\": { \"year\": 2024, \"month\": 7, \"day\": 25, \"hour\": 17, \"minutes\": 24, \"seconds\": 15, \"time\": 1721899455398, \"date\": \"2024-07-25 17:24:15\" } }'\r\n    },\r\n]\r\n\r\n/**\r\n * @name 获取当前日期是星期几 表格\r\n * */\r\nexport const weekTableData = [\r\n    {\r\n        key : \"options\",\r\n        type : \"param\",\r\n        parameterType : \"object | Function\",\r\n        desc : \"配置对象 | 回调函数\",\r\n        remark : \"\",\r\n        children : [\r\n            {\r\n                key : \"date\",\r\n                type : \"param\",\r\n                parameterType : \"string | Date | number\",\r\n                desc : \"需要设置的时间\",\r\n                remark : \"默认当前时间\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key : \"callback\",\r\n        type : \"param\",\r\n        parameterType : \"Function\",\r\n        desc : \"回调函数\",\r\n        remark : \"\"\r\n    },\r\n    {\r\n        key : \"return\",\r\n        type : \"\",\r\n        parameterType : \"String\",\r\n        desc : \"返回数据\",\r\n        remark : '返回星期几'\r\n    },\r\n]\r\n\r\n\r\n/**\r\n * @name 指定日期是当前(年、月、周)的多少天 表格\r\n * */\r\nexport const dayTableData = [\r\n    {\r\n        key : \"options\",\r\n        type : \"param\",\r\n        parameterType : \"object | Function\",\r\n        desc : \"配置对象 | 回调函数\",\r\n        remark : \"\",\r\n        children : [\r\n            {\r\n                key : \"date\",\r\n                type : \"param\",\r\n                parameterType : \"string | Date | number\",\r\n                desc : \"需要设置的时间\",\r\n                remark : \"默认当前时间\"\r\n            },\r\n            {\r\n                key : \"number\",\r\n                type : \"param\",\r\n                parameterType : \"number\",\r\n                desc : \"需要前后多少天(小时/周)\",\r\n                remark : \" 默认1\"\r\n            },\r\n            {\r\n                key : \"type\",\r\n                type : \"param\",\r\n                parameterType : \"string\",\r\n                desc : \"类型\",\r\n                remark : \"year month week 默认 year\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key : \"callback\",\r\n        type : \"param\",\r\n        parameterType : \"Function\",\r\n        desc : \"回调函数\",\r\n        remark : \"\"\r\n    },\r\n    {\r\n        key : \"return\",\r\n        type : \"\",\r\n        parameterType : \"Number\",\r\n        desc : \"返回数据\",\r\n        remark : '返回指定日期是当前(年、月、周)的多少天'\r\n    },\r\n]\r\n\r\n/**\r\n * @name 是否为闰年 表格\r\n * */\r\nexport const leapYearTableData = [\r\n    {\r\n        key : \"options\",\r\n        type : \"param\",\r\n        parameterType : \"object | Function\",\r\n        desc : \"配置对象|回调函数\",\r\n        remark : \"\",\r\n        children : [\r\n            {\r\n                key : \"date\",\r\n                type : \"param\",\r\n                parameterType : \"string | Date | number\",\r\n                desc : \"需要设置的时间\",\r\n                remark : \"默认当前时间\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key : \"callback\",\r\n        type : \"param\",\r\n        parameterType : \"Function\",\r\n        desc : \"回调函数\",\r\n        remark : \"\"\r\n    },\r\n    {\r\n        key : \"return\",\r\n        type : \"\",\r\n        parameterType : \"String\",\r\n        desc : \"返回数据\",\r\n        remark : '返回星期几'\r\n    },\r\n]","/**\r\n * @name 格式化时间\r\n * @author zs.duan\r\n * @eamil zs.duan@qq.com\r\n * @version 2.0.0\r\n * @description 共有两个方法 formatTime 和 asyncFormatTime 其中 asyncFormatTime 返回一个Promise对象 \r\n * @description 可以使用 Vue.use(); 挂载到Vue原型上 $formatTime $asyncFormatTime\r\n * @description chainFormatTime 链式调用\r\n * */ \r\n\r\n/**\r\n * 格式化时间 内部方法\r\n * @param {Date} date 日期对象\r\n * @param {String} format 格式化字符串\r\n * */\r\nconst _formatTime = function (date, format) {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n    let millisecond = date.getMilliseconds();\r\n    let o = {\r\n        \"M+\": month,\r\n        \"d+\": day,\r\n        \"H+\": hour,\r\n        \"m+\": minute,\r\n        \"s+\": second,\r\n        \"S+\": millisecond,\r\n    };\r\n    if (/(y+)/.test(format)) {\r\n        format = format.replace(\r\n            RegExp.$1,\r\n            (year + \"\").substr(4 - RegExp.$1.length)\r\n        );\r\n    }\r\n    for (var k in o) {\r\n        if (new RegExp(\"(\" + k + \")\").test(format)) {\r\n            format = format.replace(\r\n                RegExp.$1,\r\n                RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr(String(o[k]).length)\r\n            );\r\n        }\r\n    }\r\n    return format;\r\n}\r\n\r\n\r\n/**\r\n * @name 格式化时间 \r\n * @description options 建议使用对象传参 也可以使用字符串 | 时间戳 | 日期对象\r\n * @description 所有参数不传时 默认为当前时间\r\n * @param {object | string | Date | number} [options] 配置对象 | 日期字符串 | 日期对象 | 时间戳\r\n * @param {string} options.format 格式化字符串 yyyy-MM-dd HH:mm:ss\r\n * @param {Date | string | number} [options.date] 日期对象 | 日期字符串 | 时间戳\r\n * @param {Function} [options.success] 成功返回\r\n * @param {Function} [options.fail] 失败返回\r\n * @param {Function} [options.complete] 完成返回\r\n * @returns {String} 格式化后的时间\r\n * */\r\nexport const formatTime = function (options) {\r\n    if(!options)options = {};\r\n    if (typeof options === 'string' || typeof options === 'number' || Object.prototype.toString.call(options) === '[object Date]') {\r\n        options = {\r\n            date: options\r\n        }\r\n    }\r\n    if (typeof options !== 'object' && options) {\r\n        throw new Error('options must be an object or string or number or Date object');\r\n    }\r\n    if(typeof options.date == 'string'){\r\n        options.date = options.date.replace(/-/g , '/');\r\n        options.date = options.date.replace(/T/g , ' ');\r\n        options.date = options.date.substr(0 , 19);\r\n    }\r\n    let option = {\r\n        format: \"yyyy-MM-dd HH:mm:ss\",\r\n        isInternal : false , // 是否是内部调用\r\n        date: new Date(),\r\n        success: function (reslut) { },\r\n        fail: function (error) { },\r\n        complete: function (reslut) { }\r\n    }\r\n    options = Object.assign(option, options);\r\n    let date = options.date;\r\n    let format = options.format;\r\n    if(!format)format = \"yyyy-MM-dd HH:mm:ss\";\r\n    if(!date)date = new Date();\r\n    if (typeof format !== 'string') {\r\n        options.complete({\r\n            code: -1,\r\n            msg: \"format 必须是字符串\"\r\n        });\r\n        options.fail('format 必须是字符串');\r\n        if(options.isInternal)return {code: -1, data: 'format 必须是字符串'};\r\n        throw new Error('format 必须是字符串');\r\n    }\r\n    try {\r\n        date = new Date(date);\r\n    }catch (error) {\r\n        options.complete({\r\n            code: -1,\r\n            msg: \"时间格式错误\"\r\n        });\r\n        options.fail('时间格式错误');\r\n        if(options.isInternal) return {code : -1 , data : '时间格式错误'};\r\n        throw new Error('时间格式错误');\r\n    }\r\n\r\n    let reslut = _formatTime(date, format);\r\n    options.complete({\r\n        code: 200,\r\n        msg: \"success\",\r\n        data: reslut\r\n    });\r\n    options.success(reslut);\r\n    if(options.isInternal) return {code : 200 , data : reslut};\r\n    return reslut;\r\n}\r\n\r\n/**\r\n * @name 格式化时间 \r\n * @description options 建议使用对象传参 也可以使用字符串 | 时间戳 | 日期对象\r\n * @description 所有参数不传时 默认为当前时间\r\n * @param {object | string | Date | number} [options] 配置对象 | 日期字符串 | 日期对象 | 时间戳\r\n * @param {String} options.format 格式化字符串 yyyy-MM-dd HH:mm:ss\r\n * @param {Date | string | number} [options.date] 日期对象 | 日期字符串 | 时间戳\r\n * @param {Function} [options.success] 成功返回\r\n * @param {Function} [options.fail] 失败返回\r\n * @param {Function} [options.complete] 完成返回\r\n * @returns {Promise} 返回一个Promise对象\r\n * */\r\nexport const asyncFormatTime = function (options = {}) {\r\n    options.isInternal = true;\r\n    let data = formatTime(options);\r\n    return new Promise((resolve, reject) => {\r\n        if(data.code == -1){\r\n            return reject(data.data);\r\n        }\r\n        resolve(data.data);\r\n    })\r\n}\r\n\r\n/**\r\n * 链式调用\r\n * @param {Date | string | number} [time] 日期对象 | 日期字符串 | 时间戳\r\n * @returns {Object} 返回一个对象\r\n * */ \r\nexport function chainFormatTime(time){\r\n    let returnTime = \"\";\r\n    if(!time)time = new Date();\r\n    if(typeof time == 'string'){\r\n        time = time.replace(/-/g , '/');\r\n        time = time.replace(/T/g , ' ');\r\n        time = time.substr(0 , 19);\r\n    }\r\n    try {\r\n        time = new Date(time);\r\n    }catch (error) {\r\n        throw new Error('时间格式错误');\r\n    }\r\n    function format(formatStr){\r\n        if(typeof formatStr !== 'string')throw new Error('format 必须是字符串');\r\n        returnTime = _formatTime(time, formatStr);\r\n        return this\r\n    }\r\n    \r\n    return {\r\n        format,\r\n        get time(){\r\n            return returnTime;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @name 时间处理 只支持链式调用 \r\n * @description 所有参数不传时 默认为当前时间\r\n * @description format 格式化时间\r\n * @description diff 对比时间差\r\n * @description last 前n天(小时/周)后n天(小时/周)\r\n * @description week 获取指定日期是星期几 \r\n * @description day 指定日期是当前(年、月、周)的多少天\r\n * @description leapYear 今年是否是闰年\r\n * */\r\nclass Time {\r\n    /**\r\n     * 格式化时间\r\n     * @param {Object | string | number | Date | Function} [options] 配置参数/回调函数 可以是对象 字符串 时间戳 时间对象\r\n     * @param {string | number | Date} [options.date] 时间\r\n     * @param {string} [options.format] 格式化方式 yyyy-MM-dd HH:mm:ss\r\n     * @param {Function} [callback] 回调函数\r\n     * @returns {string} 格式化后的时间\r\n     * */ \r\n    format(options , callback){\r\n        if(typeof options == 'function'){\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        \r\n        if(!callback) callback = (timeInfo) =>{};\r\n        return _format(options , callback);\r\n    };\r\n    /**\r\n     * 对比时间差\r\n     * @param {Object} options 配置参数\r\n     * @param {Date | string | number} options.startDate 开始时间\r\n     * @param {Date | string | number} [options.endDate] 结束时间 不传默认为当前时间\r\n     * @param {Function} [callback] 回调函数\r\n     * @returns {Object} 对比后的时间差\r\n     * @description 返回的数据格式 {allday : 0 , day : 0 , hours : 0 , allHours : 0 , minutes : 0 , allMinutes : 0 , seconds : 0 , allSeconds : 0 , timeDiff : 0}\r\n     * */ \r\n    diff(options , callback){\r\n        if(!callback) callback = (timeInfo) =>{};\r\n        return _diff(options , callback)\r\n    };\r\n    /**\r\n     * 前n天(小时/周)后n天(小时/周) 前用负数 后用正数\r\n     * @param {Object | Function} [options] 配置参数/回调函数\r\n     * @param {Date | string | number} [options.date] 时间 默认为当前时间\r\n     * @param {number} [options.num] 需要前后多少天(小时/周) 默认1\r\n     * @param {string} [options.type] 类型 day hour week 默认 day\r\n     * @param {string} [options.format] 格式化方式 默认 yyyy-MM-dd\r\n     * @param {Function} [callback] 回调函数\r\n     * @returns {Object} 时间信息\r\n     * */ \r\n    last(options , callback){\r\n        if(!callback) callback = (timeInfo) =>{};\r\n        if(typeof options == 'function'){\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        return _last(options , callback)\r\n    };\r\n    /**\r\n     * 获取当前日期是星期几\r\n     * @param {Date | string | number | Function} [date] 时间/直接为回调函数 默认为当前时间 \r\n     * @param {Function} [callback] 回调函数\r\n     * @return {String} 返回星期几\r\n     * */ \r\n    week(date , callback){\r\n        if(typeof date == 'function'){\r\n            callback = date;\r\n            date = null;\r\n        }\r\n        if(!callback) callback = (timeInfo) =>{};\r\n        return _week(date , callback)\r\n    };\r\n    /**\r\n     * 指定日期是当前(年、月、周)的多少天\r\n     * @param {Object | Function} [options] 配置参数/回调函数\r\n     * @param {Date | string | number} [options.date] 时间 默认为当前时间\r\n     * @param {string} [options.type] 类型 year month week 默认 year\r\n     * @param {Function} [callback] 回调函数\r\n     * @returns {Number} 返回指定日期是当前(年、月、周)的多少天\r\n     * */ \r\n    day(options , callback){\r\n        if(!callback) callback = (timeInfo) =>{};\r\n        if(typeof options == 'function'){\r\n            callback = options;\r\n            options = {};\r\n        }\r\n        return _day(options , callback)\r\n    };\r\n    /**\r\n     * 是否为闰年\r\n     * @param {Date | string | number | Function} [date] 时间/直接为回调函数 默认为当前时间\r\n     * @param {Function} [callback] 回调函数\r\n     * @returns {Boolean} 返回是否为闰年\r\n     * */ \r\n    leapYear(date , callback){\r\n        if(!callback) callback = (timeInfo) =>{};\r\n        if(typeof date == 'function'){\r\n            callback = date;\r\n            date = null;\r\n        }\r\n        return _leapYear(date , callback);\r\n    };\r\n}\r\n\r\n/**获取当前时间的年月日 时分秒 时间戳*/\r\nfunction _getNowDate(date , format = 'yyyy-MM-dd HH:mm:ss'){\r\n    if(!date)date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hour = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    let time = date.getTime();\r\n    date = formatTime({\r\n        format : format,\r\n        date : date\r\n    })\r\n    return {year,month,day,hour,minutes,seconds ,time , date}\r\n} \r\n\r\n/**格式化时间*/ \r\nfunction _format(options , callback){\r\n    let data = formatTime(options);\r\n    if(data.code == -1) return;\r\n    let date = options.date ? new Date(options.date) : new Date();\r\n    callback({\r\n        dateInfo:_getNowDate(date),\r\n        date : data,\r\n    })\r\n    return data\r\n}\r\n\r\n/**对比时间差*/ \r\nfunction _diff(options , callback){\r\n    if(typeof options !== 'object')throw new Error('options must be an object');\r\n    if(!options.startDate)throw new Error('startDate must be null');\r\n    if(!options.endDate)options.endDate = new Date();\r\n    if(options.startDate && typeof options.startDate == 'string'){\r\n        options.startDate = options.startDate.replace(/-/g, \"/\"); \r\n        options.startDate = options.startDate.replace(/T/g , ' ');\r\n        options.startDate = options.startDate.substr(0 , 19);\r\n    }\r\n    if(options.endDate && typeof options.endDate == 'string'){\r\n        options.endDate = options.endDate.replace(/-/g, \"/\"); \r\n        options.endDate = options.endDate.replace(/T/g , ' ');\r\n        options.endDate = options.endDate.substr(0 , 19);\r\n    }\r\n    try {\r\n        options.startDate = new Date(options.startDate);\r\n        options.endDate = new Date(options.endDate);\r\n    }catch (error) {\r\n        throw new Error('时间格式错误');\r\n    }\r\n    let timeDiff = options.startDate.getTime() - options.endDate.getTime();\r\n    let sendData = {\r\n        allday : 0 , //所有差天数\r\n        day : 0 , //天数\r\n        hours : 0 , //小时\r\n        allHours : 0 , //所有小时\r\n        minutes : 0 , //分钟\r\n        allMinutes : 0 , //所有分钟\r\n        seconds : 0 , //秒\r\n        allSeconds : 0 , //所有秒\r\n        timeDiff : timeDiff,\r\n    }\r\n    sendData.allday = Number((timeDiff / (24 * 3600 * 1000)).toFixed(3));\r\n    sendData.day = Math.floor(timeDiff / (24 * 3600 * 1000));\r\n    sendData.hours = Math.floor(timeDiff % (24 * 3600 * 1000) / (3600 * 1000));\r\n    sendData.allHours = Number(Math.floor(timeDiff / (3600 * 1000)).toFixed(3));\r\n    sendData.minutes = Math.floor(timeDiff % (3600 * 1000) / (60 * 1000));\r\n    sendData.allMinutes = Number(Math.floor(timeDiff / (60 * 1000)).toFixed(3));\r\n    sendData.seconds = Math.floor(timeDiff % (60 * 1000) / 1000);\r\n    sendData.allSeconds = Number(Math.floor(timeDiff / 1000).toFixed(3));\r\n    callback(sendData);\r\n    return sendData;\r\n}\r\n\r\n/**前n天(小时/周)后n天(小时/周) 前用负数 后用正数*/\r\nfunction _last(options , callback){\r\n    if(typeof options !== 'object')throw new Error('options must be an object');\r\n    if(!options.date)options.date = new Date();\r\n    if(!options.num)options.num = 1;\r\n    if(!options.type)options.type = 'day';\r\n    if(options.date && typeof options.date == 'string'){\r\n        options.date = options.date.replace(/-/g, \"/\"); \r\n        options.date = options.date.replace(/T/g , ' ');\r\n        options.date = options.date.substr(0 , 19);\r\n    }\r\n    try {\r\n        options.date = new Date(options.date);\r\n    }catch (error) {\r\n        throw new Error('时间格式错误');\r\n    }\r\n    let sendData = {\r\n        previousDate : \"\" ,\r\n        nextDate : \"\",\r\n        nowDate : \"\" ,\r\n        dateInfo : {}\r\n    }\r\n    let nextDate = null;\r\n    if(options.type == 'day'){\r\n        nextDate = new Date(options.date.setDate(options.date.getDate() + options.num));\r\n        if(!options.format) options.format = 'yyyy-MM-dd';\r\n        if(options.num < 0){\r\n            sendData.previousDate = _formatTime(nextDate , options.format)\r\n        }else{\r\n            sendData.nextDate = _formatTime(nextDate , options.format)\r\n        }\r\n        sendData.nowDate = _formatTime(options.date , options.format)\r\n    }\r\n    if(options.type == 'hour'){\r\n        nextDate = new Date(options.date.setHours(options.date.getHours() + options.num));\r\n        if(!options.format) options.format = 'yyyy-MM-dd HH:mm';\r\n        if(options.num < 0){\r\n            sendData.previousDate = _formatTime(nextDate , options.format)\r\n        }else{\r\n            sendData.nextDate = _formatTime(nextDate , options.format)\r\n        }\r\n        sendData.nowDate = _formatTime(options.date , options.format)\r\n    }\r\n    if(options.type == 'week'){\r\n        nextDate = new Date(options.date.setDate(options.date.getDate() + options.num * 7));\r\n        if(!options.format) options.format = 'yyyy-MM-dd';\r\n        if(options.num < 0){\r\n            sendData.previousDate = _formatTime(nextDate , options.format)\r\n        }else{\r\n            sendData.nextDate = _formatTime(nextDate , options.format)\r\n        }\r\n        sendData.nowDate = _formatTime(options.date , options.format)\r\n    }\r\n    sendData.dateInfo = _getNowDate(sendData.date)\r\n    callback(sendData);\r\n    return sendData;\r\n} \r\n\r\n/**获取日期是星期几*/\r\nfunction _week(date , callback){\r\n    const weekList = ['日','一','二','三','四','五','六'];\r\n    if(typeof date == 'function'){\r\n        callback = date;\r\n        date = null;\r\n    }\r\n    if(date && typeof date == 'string'){\r\n        date = date.replace(/-/g, \"/\");\r\n        date = date.replace(/T/g , ' ');\r\n        date = date.substr(0 , 19);\r\n    }\r\n    if(!date)date = new Date();\r\n    try {\r\n        date = new Date(date);\r\n    }catch (error) {\r\n        throw new Error('时间格式错误');\r\n    }\r\n    let week = date.getDay();\r\n    let sendData = {\r\n        format : _formatTime(date , 'yyyy-MM-dd') ,\r\n        date : date,\r\n        dateInfo : _getNowDate(date),\r\n        week : weekList[week]\r\n    }\r\n    callback(sendData);\r\n    return weekList[week];\r\n} \r\n\r\n/**\r\n * 指定日期是当前(年、月、周)的多少天\r\n * */ \r\nfunction _day(options , callback){\r\n    if(typeof options !== 'object')throw new Error('options must be an object');\r\n    if(!options.date)options.date = new Date();\r\n    if(!options.type)options.type = 'year';\r\n    if(options.date && typeof options.date == 'string'){\r\n        options.date = options.date.replace(/-/g, \"/\"); \r\n        options.date = options.date.replace(/T/g , ' ');\r\n        options.date = options.date.substr(0 , 19);\r\n    }\r\n    try {\r\n        options.date = new Date(options.date);\r\n    }catch (error) {\r\n        throw new Error('时间格式错误');\r\n    }\r\n    let sendData = {\r\n        format : _formatTime(options.date , 'yyyy-MM-dd') ,\r\n        date : options.date,\r\n        dateInfo:_getNowDate(options.date),\r\n        num : 0\r\n    }\r\n    let start = null;\r\n    let diff = null;\r\n    let oneDay = 0;\r\n    switch(options.type){\r\n        case 'year':\r\n            start = new Date(options.date.getFullYear(), 0, 0);\r\n            diff = options.date - start;\r\n            oneDay = 1000 * 60 * 60 * 24;\r\n            sendData.num = Math.floor(diff / oneDay);\r\n            break;\r\n        case 'month':\r\n            start = new Date(options.date.getFullYear(), options.date.getMonth(), 0);\r\n            diff = options.date - start;\r\n            oneDay = 1000 * 60 * 60 * 24;\r\n            sendData.num = Math.floor(diff / oneDay);\r\n            break;\r\n        case 'week':\r\n            const week = options.date.getDay();\r\n            sendData.num = week;\r\n            break;\r\n        default:\r\n            throw new Error('type is not defined');\r\n    }\r\n    callback(sendData);\r\n    return sendData.num;\r\n}\r\n\r\n/**\r\n * 指定日期是否为闰年\r\n * */ \r\nfunction _leapYear(date , callback){\r\n    if(!date)date = new Date();\r\n    if(typeof date == 'string'){\r\n        date = date.replace(/-/g, \"/\");\r\n        date = date.replace(/T/g , ' ');\r\n        date = date.substr(0 , 4);\r\n        date = Number(date);\r\n    }\r\n    if(date.length == 4 || typeof date == 'number'){\r\n        date = date + '/01/01';\r\n    }\r\n    try {\r\n        date = new Date(date);\r\n    }catch (error) {\r\n        throw new Error('时间格式错误');\r\n    }\r\n    let year = date.getFullYear();\r\n    let sendData = {\r\n        format : _formatTime(date , 'yyyy-MM-dd') ,\r\n        date : date,\r\n        dateInfo:_getNowDate(date),\r\n        leapYear : false\r\n    }\r\n    if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0){\r\n        sendData.leapYear = true;\r\n    }\r\n    callback(sendData);\r\n    return sendData.leapYear;\r\n}\r\n\r\n/**\r\n * @name 时间处理 只支持链式调用 \r\n * @description 所有参数不传时 默认为当前时间\r\n * @description format 格式化时间\r\n * @description diff 对比时间差\r\n * @description last 前一天后一天\r\n * @description week 获取指定日期是星期几 \r\n * @description day 指定日期是当前(年、月、周)的多少天\r\n * @description leapYear 今年是否是闰年\r\n * */\r\nexport const setTime = new Time();\r\n\r\n/**\r\n * 挂载到Vue原型上\r\n * */ \r\nconst install = function (Vue) {\r\n    Vue.prototype.$formatTime = formatTime;\r\n    Vue.prototype.$asyncFormatTime = asyncFormatTime;\r\n    Vue.prototype.$chainFormatTime = chainFormatTime;\r\n    Vue.prototype.$setTime = setTime;\r\n}\r\n\r\n/**\r\n * 支持CommonJs规范\r\n * */ \r\nif (typeof module === 'object' && module.exports) {\r\n    module.exports = {\r\n        formatTime ,\r\n        asyncFormatTime,\r\n        chainFormatTime,\r\n        install,\r\n        setTime\r\n    };\r\n}\r\n\r\nexport default {\r\n    formatTime ,\r\n    asyncFormatTime,\r\n    chainFormatTime,\r\n    install,\r\n    setTime\r\n}","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}