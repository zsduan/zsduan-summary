{"version":3,"sources":["webpack:///./src/views/JS-article/easy-js/config.js"],"names":["code1","code2","code3","code4","code5","code6","code7","code8","code9","code10"],"mappings":"gHACA,oYAAO,MAAMA,EAAQ,oHAQRC,EAAQ,kaAsBRC,EAAQ,iOAWRC,EAAQ,qUAaRC,EAAQ,uUAaRC,EAAQ,mHAORC,EAAQ,2eAqBRC,EAAQ,4UAgBRC,EAAQ,2WAmBRC,EAAU","file":"static/js/chunk-2d237cb4.6278afb3.js","sourcesContent":["\r\nexport const code1 = `\r\n/**深拷贝*/ \r\n// 方法1\r\nconst newJson = JSON.parse(JSON.stringify(oldJson));\r\n// 方法2\r\nconst newJson = {...oldJson}\r\n`;\r\n\r\nexport const code2 = `\r\n/**\r\n * 延时函数\r\n * @param {Number} [time] 延时时间 默认500ms\r\n * @param {Function} [fn] 回调函数\r\n * */ \r\nconst sleep = (time = 500 , fn) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (fn && typeof fn === 'function') {\r\n                resolve(fn())\r\n            }else{\r\n                resolve(true)\r\n            }\r\n        }, time)\r\n    })\r\n}\r\n\r\n// 使用\r\nawait sleep(1000);\r\n`\r\n\r\nexport const code3 = `\r\nconst flatten = list => list.reduce((prev, next) => ([\r\n    ...prev,\r\n    ...(Array.isArray(next) ? flatten(next) : [next])\r\n]), []);\r\n\r\n// 使用\r\n\r\nflatten([[1, 2, [3, 4], 5, [6, [7, 8]]]]); // = [1, 2, 3, 4, 5, 6, 7, 8]\r\n`\r\n\r\nexport const code4 = `\r\nconst ascending = (fn) => (a, b) => {\r\n    const valA = fn(a);\r\n    const valB = fn(b);\r\n    return valA < valB ? -1 : valA > valB ? 1 : 0;\r\n}\r\n\r\n// 使用\r\nconst byPrice = ascending(val => val.price);\r\n[{ price: 300 }, { price: 100 }, { price: 200 }].sort(byPrice); \r\n// = [{ price: 100 }, { price: 200 }, { price: 300 }]\r\n`\r\n\r\nexport const code5 = `\r\nconst descending = (fn) => (a, b) => {\r\n    const valA = fn(b);\r\n    const valB = fn(a);\r\n    return valA < valB ? -1 : valA > valB ? 1 : 0;\r\n}\r\n\r\n// 使用\r\nconst byPrice = descending(val => val.price);\r\n[{ price: 300 }, { price: 100 }, { price: 200 }].sort(byPrice); \r\n// = [{ price: 300 }, { price: 200 }, { price: 100 }]\r\n`\r\n\r\nexport const code6 = `\r\nconst reverseString = string => [...string].reverse().join('');\r\n// 使用\r\nreverseString('Medium'); // 'muideM'\r\n`\r\n\r\n\r\nexport const code7 = `\r\n/**\r\n * 将url参数转换为对象\r\n * @param {String} [url] url地址\r\n * */ \r\nparseQueryString(url) {\r\n    url = url == null ? window.location.href : url\r\n    const search = url.substring(url.lastIndexOf('?') + 1)\r\n    const obj = {}\r\n    const reg = /([^?&=]+)=([^?&=]*)/g\r\n    search.replace(reg, (rs, $1, $2) => {\r\n        const name = decodeURIComponent($1)\r\n        let val = decodeURIComponent($2)\r\n        val = String(val)\r\n        obj[name] = val\r\n        return rs\r\n    })\r\n    return obj\r\n}\r\n`\r\n\r\nexport const code8 = `\r\n/**\r\n * 将对象转换为url参数\r\n * @param {Object} obj 对象\r\n * */ \r\nparam(json) {\r\n    if (!json) return ''\r\n    return cleanArray(\r\n        Object.keys(json).map(key => {\r\n            if (json[key] === undefined) return ''\r\n            return encodeURIComponent(key) + '=' + encodeURIComponent(json[key])\r\n        })\r\n    ).join('&')\r\n}\r\n`\r\n\r\nexport const code9 = `\r\n/**\r\n * 深拷贝\r\n * @param {Object} source 对象\r\n * */ \r\nconst deepCopy = (obj) => {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return obj;\r\n    }\r\n    let copy = Array.isArray(obj) ? [] : {};\r\n    for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            copy[key] = deepCopy(obj[key]);\r\n        }\r\n    }\r\n    return copy;\r\n}\r\n`\r\n\r\nexport const code10 =  `\r\n/**\r\n * 生成随机数\r\n * @param {Number} min 最小值\r\n * @param {Number} max 最大值\r\n * */ \r\nfunction getRandom (min , max){\r\n    let reslut = Math.random()*(max - min) + min;\r\n    return reslut;\r\n}\r\n`"],"sourceRoot":""}