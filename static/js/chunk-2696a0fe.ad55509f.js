(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2696a0fe","chunk-2d21f46e"],{"12da":function(n,e,t){"use strict";t.r(e);var r=function(){var n=this,e=n._self._c;return e("div",[n.newIndex?n._e():e("dzs-header",{attrs:{title:"好用的js片段"}}),e("div",{staticClass:"search-box"},[e("div",{staticClass:"left"}),e("div",{staticClass:"right"},[e("el-input",{staticClass:"ipt",attrs:{placeholder:"请输入你需要搜索的名称",clearable:""},on:{input:n.inputValue},model:{value:n.searchValue,callback:function(e){n.searchValue=e},expression:"searchValue"}}),e("el-button",{staticClass:"btn",attrs:{type:"primary",icon:"el-icon-search"}},[n._v("搜索")])],1)]),n.searchList.length?e("div",{staticClass:"page"},n._l(n.searchList,(function(t,r){return e("div",{key:r,staticClass:"item"},[e("h2",[n._v(n._s(t.name))]),e("dzs-code",{attrs:{title:"代码片段",value:t.code}})],1)})),0):e("div",{staticClass:"page"},n._l(n.list,(function(t,r){return e("div",{key:r,staticClass:"item"},[e("h2",[n._v(n._s(t.name))]),e("dzs-code",{attrs:{title:"代码片段",value:t.code}})],1)})),0),n.newIndex?n._e():e("el-backtop",{attrs:{"visibility-height":20}})],1)},o=[],s=t("d8ae"),a=t("4772"),i={props:{newIndex:{type:Boolean,default:()=>!1}},data(){return{list:[{name:"深拷贝",code:s["code1"]},{name:"深拷贝2",code:s["code11"]},{name:"在执行下一个操作之前等待指定的持续时间（以毫秒为单位）",code:s["code2"]},{name:"将多维数组拉平",code:s["code3"]},{name:"升序",code:s["code4"]},{name:"降序",code:s["code5"]},{name:"反转字符串",code:s["code6"]},{name:"是否为ie",code:s["code7"]},{name:"获取某个时间的前n天/后n天",code:s["code8"]},{name:"将url参数转换为对象",code:s["code9"]},{name:"将对象转换为url参数",code:s["code10"]},{name:"文件的上传和下载 可以监听进度",code:s["code12"]},{name:"随机数",code:s["code13"]}],searchList:[],searchValue:""}},mounted(){},methods:{inputValue(){Object(a["a"])({list:this.list,searValue:this.searchValue,key:"name",success:n=>{this.searchList=n}})}}},c=i,d=(t("ef85"),t("2877")),l=Object(d["a"])(c,r,o,!1,null,"470beb14",null);e["default"]=l.exports},d8ae:function(n,e,t){"use strict";t.r(e),t.d(e,"code1",(function(){return r})),t.d(e,"code2",(function(){return o})),t.d(e,"code3",(function(){return s})),t.d(e,"code4",(function(){return a})),t.d(e,"code5",(function(){return i})),t.d(e,"code6",(function(){return c})),t.d(e,"code7",(function(){return d})),t.d(e,"code8",(function(){return l})),t.d(e,"code9",(function(){return u})),t.d(e,"code10",(function(){return p})),t.d(e,"code11",(function(){return f})),t.d(e,"code12",(function(){return m})),t.d(e,"code13",(function(){return g}));const r="\n// 方法1\nconst newJson = JSON.parse(JSON.stringify(oldJson));\n// 方法2\nconst newJson = {...oldJson}\n",o="\n/**\n * 延时函数\n * @param {Number} [time] 延时时间 默认500ms\n * @param {Function} [fn] 回调函数\n * */ \nconst sleep = (time = 500 , fn) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (fn && typeof fn === 'function') {\n                resolve(fn())\n            }else{\n                resolve(true)\n            }\n        }, time)\n    })\n}\n\n// 使用\nawait sleep(1000);\n",s="\nconst flatten = list => list.reduce((prev, next) => ([\n    ...prev,\n    ...(Array.isArray(next) ? flatten(next) : [next])\n]), []);\n\n// 使用\n\nflatten([[1, 2, [3, 4], 5, [6, [7, 8]]]]); // = [1, 2, 3, 4, 5, 6, 7, 8]\n",a="\nconst ascending = (fn) => (a, b) => {\n    const valA = fn(a);\n    const valB = fn(b);\n    return valA < valB ? -1 : valA > valB ? 1 : 0;\n}\n\n// 使用\nconst byPrice = ascending(val => val.price);\n[{ price: 300 }, { price: 100 }, { price: 200 }].sort(byPrice); \n// = [{ price: 100 }, { price: 200 }, { price: 300 }]\n",i="\nconst descending = (fn) => (a, b) => {\n    const valA = fn(b);\n    const valB = fn(a);\n    return valA < valB ? -1 : valA > valB ? 1 : 0;\n}\n\n// 使用\nconst byPrice = descending(val => val.price);\n[{ price: 300 }, { price: 100 }, { price: 200 }].sort(byPrice); \n// = [{ price: 300 }, { price: 200 }, { price: 100 }]\n",c="\nconst reverseString = string => [...string].reverse().join('');\n// 使用\nreverseString('Medium'); // 'muideM'\n",d='\n// 是否已为IE浏览器\n    IEVersion() {\n        let userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n        let isIE =\n            userAgent.indexOf("compatible") > -1 &&\n            userAgent.indexOf("MSIE") > -1; //判断是否IE<11浏览器\n        let isEdge = userAgent.indexOf("Edge") > -1 && !isIE; //判断是否IE的Edge浏览器\n        let isIE11 =\n            userAgent.indexOf("Trident") > -1 &&\n            userAgent.indexOf("rv:11.0") > -1;\n        if (isIE) {\n            let reIE = new RegExp("MSIE (\\d+\\.\\d+);");\n            reIE.test(userAgent);\n            let fIEVersion = parseFloat(RegExp["$1"]);\n            if (fIEVersion == 7) {\n                return 7;\n            } else if (fIEVersion == 8) {\n                return 8;\n            } else if (fIEVersion == 9) {\n                return 9;\n            } else if (fIEVersion == 10) {\n                return 10;\n            } else {\n                return 6; //IE版本<=7\n            }\n        } else if (isEdge) {\n            return "edge"; //edge\n        } else if (isIE11) {\n            return 11; //IE11\n        } else {\n            return -1; //不是ie浏览器\n        }\n    }\n',l='\n/**\n * 获取 当前天数的指定前后天数\n * @param {Date} [date] 当前日期\n * @param {Number} [day] 前后天数 -1：前一天 1：后一天\n * */\ngetNextDate(date, day) {\n    let dd = new Date(date);\n    dd.setDate(dd.getDate() + day);\n    let y = dd.getFullYear();\n    let m = dd.getMonth() + 1 < 10 ? "0" + (dd.getMonth() + 1) : dd.getMonth() + 1;\n    let d = dd.getDate() < 10 ? "0" + dd.getDate() : dd.getDate();\n    return y + "-" + m + "-" + d;\n},\n',u="\n/**\n * 将url参数转换为对象\n * @param {String} [url] url地址\n * */ \nparseQueryString(url) {\n    url = url == null ? window.location.href : url\n    const search = url.substring(url.lastIndexOf('?') + 1)\n    const obj = {}\n    const reg = /([^?&=]+)=([^?&=]*)/g\n    search.replace(reg, (rs, $1, $2) => {\n        const name = decodeURIComponent($1)\n        let val = decodeURIComponent($2)\n        val = String(val)\n        obj[name] = val\n        return rs\n    })\n    return obj\n}\n",p="\n/**\n * 将对象转换为url参数\n * @param {Object} obj 对象\n * */ \nparam(json) {\n    if (!json) return ''\n    return cleanArray(\n        Object.keys(json).map(key => {\n            if (json[key] === undefined) return ''\n            return encodeURIComponent(key) + '=' + encodeURIComponent(json[key])\n        })\n    ).join('&')\n}\n",f="\n/**\n * 深拷贝\n * @param {Object} source 对象\n * */ \ndeepClone(source) {\n    if (!source && typeof source !== 'object') {\n        throw new Error('error arguments', 'deepClone')\n    }\n    const targetObj = source.constructor === Array ? [] : {}\n    Object.keys(source).forEach(keys => {\n        if (source[keys] && typeof source[keys] === 'object') {\n            targetObj[keys] = deepClone(source[keys])\n        } else {\n            targetObj[keys] = source[keys]\n        }\n    })\n    return targetObj\n}\n",m='\nimport axios  from "axios";\n\n/**\n * 文件上传下载\n * @param {Object} options\n * @param {String} options.url 请求地址\n * @param {String} [options.method] 请求方式 默认post\n * @param {File} [options.file] 文件 File对象 和 FormData对象必须有一个 优先级 File > FormData\n * @param {FormData} [options.FormData] FormData对象 和 File对象必须有一个\n * @param {Object} [options.header] 请求头 默认{"Content-Type" : "multipart/form-data"}\n * @param {Function} [options.onUploadProgress] 上传进度回调\n * @param {Function} [options.onDownloadProgress] 下载进度回调\n * @param {Function} [options.success] 成功回调\n * @param {Function} [options.fail] 失败回调\n * @returns {void}\n*/\nconst fileAxios = (options) => {\n    let option = {\n        url : "",\n        method : "post",\n        file : null,\n        FormData : null,\n        header : {\n            "Content-Type" : "multipart/form-data"\n        },\n        onUploadProgress : (progress) => {},\n        onDownloadProgress : (progress) => {},\n        success : (res) => {},\n        fail : (err) => {}\n    }\n    Object.assign(option, options);\n    if(option.url === ""){\n        throw new Error("url不能为空");\n    }\n    if(option.file === null && option.FormData === null){\n        throw new Error("file和FormData不能同时为空");\n    }\n    let formData = null;\n    if(option.file){\n        formData = new FormData();\n        formData.append("file", option.file);\n        option.file = formData;\n    }else{\n        formData = option.file;\n    }\n    axios({\n        url : option.url,\n        method : option.method,\n        data : formData,\n        headers : option.header,\n        onUploadProgress : (progressEvent)=>{\n            let upLoadProgress= progressEvent.loaded / progressEvent.total * 100 ;//实时获取上传进度\n            option.onUploadProgress(upLoadProgress);\n        },\n        onDownloadProgress : (progressEvent)=>{\n            let downLoadProgress= progressEvent.loaded / progressEvent.total * 100 ;//实时获取下载进度\n            option.onDownloadProgress(downLoadProgress);\n        },\n    }).then((res)=>{\n        option.success(res);\n    }).catch((err)=>{\n        option.fail(err);\n    });\n}\n\nexport default fileAxios;\n',g="\n/**\n * 生成随机数\n * @param {Number} min 最小值\n * @param {Number} max 最大值\n * */ \nfunction getRandom (min , max){\n    let reslut = Math.random()*(max - min) + min;\n    return reslut;\n}\n"},defe:function(n,e,t){},ef85:function(n,e,t){"use strict";t("defe")}}]);
//# sourceMappingURL=chunk-2696a0fe.ad55509f.js.map