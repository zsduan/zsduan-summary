(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c7ca6"],{"51b6":function(n,e,o){"use strict";o.r(e),o.d(e,"code1",(function(){return t}));const t='\n/**\n * 新版xlsx读取 支持xlsx和xls\n * @param {Object | File} option 配置信息 | 文件blod \n * @param {File | String} option.file 文件blod | 文件id | 文件ref\n * @param {any} [option.Vue] vue的this指向 当file为ref时必填\n * @param {Object} option.tableConfig 表格配置 可选\n * @param {String} option.tableConfig.boder 表格边框 是否有边框 默认1px solid #ccc\n * @param {String} option.tableConfig.padding 表格内边距 默认5px\n * @param {String} option.tableConfig.fontSize 表格字体大小 默认14px\n * @param {String} option.tableConfig.borderColor 表格边框颜色 默认#ccc\n * @param {String} option.tableConfig.backgroundColor 表格背景颜色 默认#fff\n * @param {String} option.tableConfig.color 表格字体颜色 默认#000\n * @param {Function} option.success 成功回调\n * @param {Function} option.fail 失败回调\n * @returns {\n *    code : 200,\n *    data : Object, //json数据\n *    value : Object, //value rowspan colspan 数据\n *    html : Object, //展示的html\n *    cvs : Object, // cvs\n *    formulae : Object, //生成公式列表(带有值回退)\n *    TextUtf16 : Object, // 文字\n *    xlsxname : String, //文件名称\n *    sheetname : Object, //sheet名称\n *    outCvs : Function, //导出cvs\n *    outXlsx : Function, //导出xlsx\n *    outXls : Function, //导出xls\n * }\n * */\n\nimport {readeExcel , asyncReadeExcel} from "../../utils/readeXlsx";\n// readeExcel 为同步读取\n// asyncReadeExcel 为异步读取\n// 使用方法\nreadeExcel({\n    file : "myfile",\n    Vue : this,\n    success:(res) =>{\n        \n    },\n})\n'}}]);
//# sourceMappingURL=chunk-2d0c7ca6.e1c966e2.js.map