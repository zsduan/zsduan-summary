{"version":3,"sources":["webpack:///./src/views/formWidth/formWidth.vue","webpack:///./src/components/dzs-search-form/index.vue","webpack:///./src/components/dzs-search-form/config.js","webpack:///./src/components/dzs-search-form/deepCopy.js","webpack:///src/components/dzs-search-form/index.vue","webpack:///./src/components/dzs-search-form/index.vue?5fbb","webpack:///./src/components/dzs-search-form/index.vue?286a","webpack:///src/views/formWidth/formWidth.vue","webpack:///./src/views/formWidth/formWidth.vue?23ec","webpack:///./src/views/formWidth/formWidth.vue?ad2f","webpack:///./src/views/formWidth/desc.js","webpack:///./src/components/dzs-search-form/index.vue?c6bb","webpack:///./src/views/formWidth/config.js"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","formOptions","scopedSlots","_u","key","fn","proxy","code1","descHeader","descData","descTableOptions","_m","staticRenderFns","fromId","_b","ref","class","ruleForm","formBoxWidth","fromModel","fromRules","labelPosition","formProps","gutter","_l","formItem","item","index","isHidden","_e","directives","name","rawName","value","isShow","expression","span","isSlot","_t","label","props","type","getFromModelValue","getPlaceholder","on","$event","changeVaule","slots","slot","_s","text","children","option","idx","toString","staticStyle","getTips","btnSpan","showBtn","btnIcon","stopPropagation","submit","submitText","Reset","apply","arguments","resetText","openItems","spanCount","openItem","retractItem","pickerOptions","shortcuts","onClick","picker","end","Date","start","setTime","getTime","$emit","deepCopy","obj","copy","Array","isArray","hasOwnProperty","model","prop","event","options","Object","default","String","Boolean","antiShakeTime","Number","isFormData","data","timer","toolbar","retractItems","watch","handler","newValue","oldValue","length","initModel","deep","immediate","setFormData","created","mounted","listenFormBoxWidth","methods","fisrtText","placeholder","tips","keyPath","keyList","split","i","formName","setTimeout","clearTimeout","Promise","resolve","reject","$refs","validate","valid","$message","error","code","message","sendFormData","sendList","forEach","isNull","transformKeysToNestedObject","FormData","append","join","defaultValue","multiple","rules","result","keys","currentNode","j","currentKey","clearForm","resetFields","getFormMethod","JSON","stringify","resizeObserver","ResizeObserver","entries","entry","width","contentRect","observe","document","querySelector","component","components","dzsSearchForm","computed","required","trigger","clearable","border","hasChildren","parameterType","desc","remark"],"mappings":"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","file":"static/js/chunk-ceb540f2.5d306797.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"page\"},[_c('h2',[_vm._v(\"基础用法\")]),_c('div',{staticClass:\"item\"},[_c('dzs-search-form',{attrs:{\"options\":_vm.formOptions},scopedSlots:_vm._u([{key:\"mySlot\",fn:function(){return [_c('el-form-item',{attrs:{\"label\":\"自定义组件\",\"prop\":\"mySlot\"}},[_c('el-button',[_vm._v(\"button\")])],1)]},proxy:true}])})],1),_c('h2',[_vm._v(\"手机端\")]),_c('div',{staticClass:\"item\"},[_c('div',{staticClass:\"is-phone-public\"},[_c('div',{staticClass:\"phone-box\"},[_c('dzs-search-form',{attrs:{\"options\":_vm.formOptions},scopedSlots:_vm._u([{key:\"mySlot\",fn:function(){return [_c('el-form-item',{attrs:{\"label\":\"自定义组件\",\"prop\":\"mySlot\"}},[_c('el-button',[_vm._v(\"button\")])],1)]},proxy:true}])})],1)])]),_c('h2',[_vm._v(\"代码示例\")]),_c('div',{staticClass:\"item\"},[_c('dzs-code',{attrs:{\"title\":\"代码示例\",\"value\":_vm.code1}})],1),_c('h2',[_vm._v(\"参数说明\")]),_c('div',{staticClass:\"item\"},[_c('dzs-table',{attrs:{\"tableHeader\":_vm.descHeader,\"list\":_vm.descData,\"showOperation\":false,\"tableOptions\":_vm.descTableOptions}})],1),_c('h2',[_vm._v(\"组件源代码下载\")]),_vm._m(0)]),_c('el-backtop',{attrs:{\"visibility-height\":20}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"item\"},[_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/zsduan/zsduan-summary/blob/master/src/components/dzs-search-form/index.vue\"}},[_vm._v(\"横向表单组件下载地址\")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"form-box\",attrs:{\"id\":_vm.fromId}},[_c('el-form',_vm._b({ref:\"dzsForm\",class:{ ruleForm: true, 'phone-form': _vm.formBoxWidth <= 768 },attrs:{\"model\":_vm.fromModel,\"rules\":_vm.fromRules,\"label-position\":_vm.labelPosition}},'el-form',{ ..._vm.formProps },false),[_c('el-row',{attrs:{\"gutter\":_vm.gutter}},[_vm._l((_vm.formItem),function(item,index){return [(!item.isHidden)?_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.isShow),expression:\"item.isShow\"}],key:index,attrs:{\"span\":item.span ? item.span : 6}},[(item.isSlot)?[_vm._t(item.key)]:_vm._e(),(!item.isSlot)?[_c('el-form-item',{attrs:{\"label\":item.label,\"prop\":item.key}},[(item.props && item.props.isSlot)?[_vm._t(`${item.key}`)]:_vm._e(),(item.type == 'input')?[_c('el-input',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-input',{ ...item.props },false),[(item.slots)?_c('template',{slot:item.slots.name},[_vm._v(\" \"+_vm._s(item.slots.text)+\" \")]):_vm._e()],2)]:_vm._e(),(item.type == 'number')?[_c('el-input-number',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-input-number',{ ...item.props },false))]:_vm._e(),(item.type == 'select')?[_c('el-select',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item, 'select')},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-select',{ ...item.props },false),_vm._l((item.children),function(option,idx){return _c('el-option',{key:option.value + (idx).toString(),staticStyle:{\"padding\":\"0 6px\"},attrs:{\"label\":option.label,\"value\":option.value}})}),1)]:_vm._e(),(item.type == 'date')?[_c('el-date-picker',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item, 'select')},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-date-picker',{ ...item.props },false))]:_vm._e(),(item.type == 'time')?[_c('el-time-picker',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item, 'select')},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-time-picker',{ ...item.props },false))]:_vm._e(),(item.type == 'checkbox')?[_c('el-checkbox-group',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-checkbox-group',{ ...item.props },false),_vm._l((item.children),function(option,idx){return _c('el-checkbox',_vm._b({key:option.value + idx,staticClass:\"items\",attrs:{\"label\":option.value}},'el-checkbox',{ ...option.props },false),[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),1)]:_vm._e(),(item.type == 'switch')?[_c('el-switch',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-switch',{ ...item.props },false))]:_vm._e(),(_vm.getTips(item) && item.type != 'divider')?_c('div',{staticClass:\"from-item-tips\"},[_vm._v(\" \"+_vm._s(_vm.getTips(item))+\" \")]):_vm._e()],2)]:_vm._e()],2):_vm._e()]}),[_c('el-col',{attrs:{\"span\":_vm.btnSpan}},[(_vm.showBtn)?_c('div',{class:{ 'form-sbumit-box': true, 'form-sbumit-box-phone': this.btnSpan == 24 }},[_c('el-button',{staticClass:\"btn\",attrs:{\"type\":\"primary\",\"icon\":_vm.btnIcon},on:{\"click\":function($event){$event.stopPropagation();return _vm.submit('dzsForm')}}},[_vm._v(\" \"+_vm._s(_vm.submitText)+\" \")]),_c('el-button',{staticClass:\"btn cancel\",on:{\"click\":function($event){$event.stopPropagation();return _vm.Reset.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.resetText))]),(!_vm.openItems && _vm.spanCount > 18)?_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.openItem}},[_vm._v(\"展开\"),_c('i',{staticClass:\"el-icon-arrow-down\"})]):_vm._e(),(_vm.openItems && _vm.spanCount > 18)?_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.retractItem}},[_vm._v(\"收起\"),_c('i',{staticClass:\"el-icon-arrow-up\"})]):_vm._e(),_vm._t(\"footerBtn\")],2):_vm._e()])]],2)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: zs.duan\r\n * @Date: 2022-12-26 16:41:09\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-12-26 16:41:10\r\n * @FilePath: \\vue2+js+eui+template\\src\\components\\dzs-search-form\\config.js\r\n */\r\n\r\nexport const pickerOptions = {\r\n\tshortcuts: [{\r\n\t\ttext: '最近一周',\r\n\t\tonClick(picker) {\r\n\t\t\tconst end = new Date();\r\n\t\t\tconst start = new Date();\r\n\t\t\tstart.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\t\t\tpicker.$emit('pick', [start, end]);\r\n\t\t}\r\n\t}, {\r\n\t\ttext: '最近一个月',\r\n\t\tonClick(picker) {\r\n\t\t\tconst end = new Date();\r\n\t\t\tconst start = new Date();\r\n\t\t\tstart.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n\t\t\tpicker.$emit('pick', [start, end]);\r\n\t\t}\r\n\t}, {\r\n\t\ttext: '最近三个月',\r\n\t\tonClick(picker) {\r\n\t\t\tconst end = new Date();\r\n\t\t\tconst start = new Date();\r\n\t\t\tstart.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n\t\t\tpicker.$emit('pick', [start, end]);\r\n\t\t}\r\n\t}]\r\n}\r\n","const deepCopy = (obj) => {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return obj;\r\n    }\r\n    let copy = Array.isArray(obj) ? [] : {};\r\n    for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            copy[key] = deepCopy(obj[key]);\r\n        }\r\n    }\r\n    return copy;\r\n}\r\n\r\nexport default deepCopy;","<template>\r\n    <div :id=\"fromId\" class=\"form-box\">\r\n        <el-form v-bind=\"{ ...formProps }\" :model=\"fromModel\" :rules=\"fromRules\" :label-position=\"labelPosition\"\r\n            ref=\"dzsForm\" :class=\"{ ruleForm: true, 'phone-form': formBoxWidth <= 768 }\">\r\n            <!-- 自定义头部 -->\r\n            <el-row :gutter=\"gutter\">\r\n                <template v-for=\"(item, index) in formItem\">\r\n                    <el-col v-show=\"item.isShow\" :span=\"item.span ? item.span : 6\" :key=\"index\" v-if=\"!item.isHidden\">\r\n                        <!-- 自定义组件 -->\r\n                        <template v-if=\"item.isSlot\">\r\n                            <slot :name=\"item.key\"></slot>\r\n                        </template>\r\n                        <template v-if=\"!item.isSlot\">\r\n                            <el-form-item :label=\"item.label\" :prop=\"item.key\">\r\n                                <!-- 自定义组件 -->\r\n                                <template v-if=\"item.props && item.props.isSlot\">\r\n                                    <slot :name=\"`${item.key}`\"></slot>\r\n                                </template>\r\n\r\n                                <!-- 输入框 -->\r\n                                <template v-if=\"item.type == 'input'\">\r\n                                    <el-input :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\" :placeholder=\"getPlaceholder(item)\">\r\n                                        <template v-if=\"item.slots\" :slot=\"item.slots.name\">\r\n                                            {{ item.slots.text }}\r\n                                        </template>\r\n                                    </el-input>\r\n                                </template>\r\n\r\n                                <!-- 数字输入框 -->\r\n                                <template v-if=\"item.type == 'number'\">\r\n                                    <el-input-number :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\"\r\n                                        :placeholder=\"getPlaceholder(item)\"></el-input-number>\r\n                                </template>\r\n\r\n                                <!-- 选择框 -->\r\n                                <template v-if=\"item.type == 'select'\">\r\n                                    <el-select :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\"\r\n                                        :placeholder=\"getPlaceholder(item, 'select')\">\r\n                                        <el-option style=\"padding : 0 6px;\" v-for=\"(option, idx) in item.children\"\r\n                                            :key=\"option.value + (idx).toString()\" :label=\"option.label\"\r\n                                            :value=\"option.value\"></el-option>\r\n                                    </el-select>\r\n                                </template>\r\n\r\n                                <!-- 日期选择器 -->\r\n                                <template v-if=\"item.type == 'date'\">\r\n                                    <el-date-picker :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\"\r\n                                        :placeholder=\"getPlaceholder(item, 'select')\"></el-date-picker>\r\n                                </template>\r\n\r\n                                <!-- 时间选择器 -->\r\n                                <template v-if=\"item.type == 'time'\">\r\n                                    <el-time-picker :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\"\r\n                                        :placeholder=\"getPlaceholder(item, 'select')\"></el-time-picker>\r\n                                </template>\r\n\r\n                                <!-- 多选框 -->\r\n                                <template v-if=\"item.type == 'checkbox'\">\r\n                                    <el-checkbox-group :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\">\r\n                                        <el-checkbox class=\"items\" v-for=\"(option, idx) in item.children\"\r\n                                            v-bind=\"{ ...option.props }\" :key=\"option.value + idx\"\r\n                                            :label=\"option.value\">\r\n                                            {{ option.label }}\r\n                                        </el-checkbox>\r\n                                    </el-checkbox-group>\r\n                                </template>\r\n\r\n                                <!-- 开关 -->\r\n                                <template v-if=\"item.type == 'switch'\">\r\n                                    <el-switch :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                        @input=\"changeVaule($event, item.key)\"></el-switch>\r\n                                </template>\r\n\r\n                                <div class=\"from-item-tips\" v-if=\"getTips(item) && item.type != 'divider'\">\r\n                                    {{ getTips(item) }}\r\n                                </div>\r\n                            </el-form-item>\r\n                        </template>\r\n                    </el-col>\r\n                </template>\r\n                <template>\r\n                    <el-col :span=\"btnSpan\">\r\n                        <div :class=\"{ 'form-sbumit-box': true, 'form-sbumit-box-phone': this.btnSpan == 24 }\"\r\n                            v-if=\"showBtn\">\r\n                            <el-button class=\"btn\" type=\"primary\" :icon=\"btnIcon\" @click.stop=\"submit('dzsForm')\">\r\n                                {{ submitText }}\r\n                            </el-button>\r\n                            <el-button @click.stop=\"Reset\" class=\"btn cancel\">{{ resetText }}</el-button>\r\n                            <el-button v-if=\"!openItems && spanCount > 18\" @click=\"openItem\" type=\"text\">展开<i\r\n                                    class=\"el-icon-arrow-down\"></i></el-button>\r\n                            <el-button v-if=\"openItems && spanCount > 18\" @click=\"retractItem\" type=\"text\">收起<i\r\n                                    class=\"el-icon-arrow-up\"></i></el-button>\r\n                            <slot name=\"footerBtn\"></slot>\r\n                        </div>\r\n                    </el-col>\r\n                </template>\r\n            </el-row>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n/*\r\n *@props options = {\r\n    formProps : {} , //from表单属性 和饿了吗表单属性一样\r\n    formItem : [\r\n            {\r\n                label: \"\", //输入框名称 非必填\r\n                key: \"\", //输入框key 必填\r\n                type : \"\", //类型 非必填 默认input 输入框 input select date time switch checkbox radio uploadImg edit divider uploadFile \r\n                children : [] , //列表数据 非必填\r\n                defaultValue : \"\" , //默认值 非必填\r\n                isHidden : false , //是否隐藏 非必填\r\n                span : 24 , //宽度 el-col span 非必填\r\n                props:{\r\n                    ...defalut , //内部参数 饿了吗ui相同 type == uploadImg | uploadFile 参数见组件\r\n                    tips : \"\" , //提示文字信息\r\n                    isSlot : false , //是否在 from-item里面添加新的 slot 具名插槽:key+Children\r\n                },\r\n                slots : { //插槽 非必填\r\n                    name : \"\" , //插槽名称\r\n                    text : \"\" , //插槽文字\r\n                },\r\n                rules：[] || { } ,// 规则 饿了吗ui相同 非必填\r\n                isNull : false , //是否不需要添加到提交表单中  非必填\r\n                isSlot : false , //非必填 是否为自定义组件\r\n            }\r\n        ] \r\n    }\r\n * @props submit-text 提交按钮文字 非必填\r\n * @props reset-text 取消按钮文字 非必填\r\n * @props showBtn 是否显示按钮 非必填\r\n * @props value / v-model 返回值 表单数据\r\n * @props antiShakeTime 防抖时间 非必填\r\n * @props loadingText loading文字 非必填\r\n * @props loading 是否显示loading 非必填\r\n * @props isFormData 是否为formData 非必填\r\n * \r\n * @methods onSubmit 提交事件 返回当前表单数据\r\n * @methods onReset 取消事件\r\n * @methods change 输入框改变事件 返回当前输入框的值和key\r\n * @methods getFormMethod 获取饿了吗表单的原生方法\r\n * @methods clearForm 清空表单数据\r\n * @methods setFormData 设置表单数据\r\n * \r\n*/\r\nimport { pickerOptions } from \"./config.js\";\r\nimport deepCopy from \"./deepCopy.js\";\r\nexport default {\r\n    name: \"search-form\",\r\n    model: {\r\n        prop: \"value\",\r\n        event: \"update:value\",\r\n    },\r\n    props: {\r\n        options: {\r\n            type: Object,\r\n            default: () => {\r\n                return {};\r\n            },\r\n        },\r\n        submitText: {\r\n            type: String,\r\n            default: () => {\r\n                return \"搜索\";\r\n            },\r\n        },\r\n        resetText: {\r\n            type: String,\r\n            default: () => {\r\n                return \"重置\";\r\n            },\r\n        },\r\n        showBtn: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return true;\r\n            },\r\n        },\r\n        value: {\r\n            type: Object,\r\n            default: () => {\r\n                return {};\r\n            },\r\n        },\r\n        /**防抖时间*/\r\n        antiShakeTime: {\r\n            type: Number,\r\n            default: () => {\r\n                return 1000\r\n            }\r\n        },\r\n        /**是否为formData*/\r\n        isFormData: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return false\r\n            }\r\n        },\r\n        /**el-row 配置*/\r\n        gutter: {\r\n            type: Number,\r\n            default: () => {\r\n                return 10\r\n            }\r\n        },\r\n        btnIcon: {\r\n            type: String,\r\n            default: () => {\r\n                return \"\"\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            fromModel: {},\r\n            fromRules: {},\r\n            formItem: [], //表单初始数据\r\n            formProps: {}, //表单配置\r\n            pickerOptions: pickerOptions,\r\n            formBoxWidth: 0, //form-box宽度\r\n            labelPosition: \"left\", //对其方式\r\n            timer: null, //定时器 防止重复提交\r\n            toolbar: [],\r\n            fromId: `dzsForm${new Date().getTime()}`,\r\n            btnSpan: 6,\r\n            openItems: false,\r\n            retractItems: false,\r\n            spanCount : 0 ,\r\n        };\r\n    },\r\n    watch: {\r\n        options: {\r\n            handler(newValue, oldValue) {\r\n                if (!newValue.formItem || !newValue.formItem.length) return;\r\n                this.initModel(newValue);\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        value: {\r\n            handler(newValue, oldValue) {\r\n                if (!newValue) return;\r\n                this.setFormData(newValue);\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n        this.listenFormBoxWidth();\r\n    },\r\n    methods: {\r\n        /**\r\n         * 设置 placeholder\r\n         * @param {Object} item 需要处理的对象\r\n         * @param {String} [type] 什么类型  默认input 支持 input select\r\n         * */\r\n        getPlaceholder(item, type = 'input') {\r\n            let fisrtText = type == 'select' ? '请选择' : '请输入';\r\n            let placeholder = item.props ? item.props.placeholder ? item.props.placeholder : fisrtText + item.label : fisrtText + item.label\r\n            return placeholder\r\n        },\r\n        /**设置提示信息*/\r\n        getTips(item) {\r\n            if (item.props && item.props.tips) {\r\n                return item.props.tips\r\n            };\r\n            return \"\"\r\n        },\r\n        /**改变输入的值*/\r\n        changeVaule(value, keyPath) {\r\n            let keyList = keyPath.split('.');\r\n            let obj = this.fromModel;\r\n            for (let i = 0; i < keyList.length - 1; i++) {\r\n                obj = obj[keyList[i]];\r\n            }\r\n            obj[keyList[keyList.length - 1]] = value;\r\n            this.$emit(\"update:value\", this.fromModel);\r\n            this.$emit(\"change\", {\r\n                value: value,\r\n                key: keyPath,\r\n            });\r\n        },\r\n\r\n        /**获取FromModel的参数*/\r\n        getFromModelValue(keyPath) {\r\n            let keyList = keyPath.split('.');\r\n            let value = this.fromModel;\r\n            for (let i = 0; i < keyList.length; i++) {\r\n                value = value[keyList[i]];\r\n            }\r\n            return value;\r\n        },\r\n\r\n        /**提交*/\r\n        submit(formName = \"dzsForm\") {\r\n            if (this.timer) {\r\n                this.$message({\r\n                    message: `请勿重复提交,${this.antiShakeTime / 1000} 秒后再试`,\r\n                    type: \"warning\",\r\n                });\r\n                return;\r\n            }\r\n            this.timer = setTimeout(() => {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n            }, this.antiShakeTime);\r\n            return new Promise((resolve, reject) => {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (!valid) {\r\n                        this.$message.error(\"请填写完整信息\");\r\n                        reject({ code: -200, message: \"请填写完整的信息\" });\r\n                        return;\r\n                    }\r\n                    if (this.isFormData) {\r\n                        this.sendFormData(resolve);\r\n                        return;\r\n                    }\r\n                    let sendList = {};\r\n                    this.formItem.forEach(item => {\r\n                        let keyPath = item.key.split('.');\r\n                        let value = this.fromModel;\r\n                        for (let i = 0; i < keyPath.length; i++) {\r\n                            value = value[keyPath[i]];\r\n                        }\r\n                        switch (item.type) {\r\n                            case \"switch\":\r\n                                sendList[item.key] = value || false;\r\n                                break;\r\n                            default:\r\n                                sendList[item.key] = value;\r\n                                break;\r\n                        }\r\n                        if (item.isNull) delete sendList[item.key];\r\n                        sendList = this.transformKeysToNestedObject(sendList);\r\n                    })\r\n                    this.$emit(\"onSeach\", sendList);\r\n                    this.$emit(\"update:value\", sendList);\r\n                    resolve(sendList);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**formData 发送数据*/\r\n        sendFormData(resolve, reject) {\r\n            let sendList = new FormData();\r\n            this.formItem.forEach((item) => {\r\n                if (item.isNull) return;\r\n                let keyPath = item.key.split('.');\r\n                let value = this.fromModel;\r\n                for (let i = 0; i < keyPath.length; i++) {\r\n                    value = value[keyPath[i]];\r\n                }\r\n                switch (item.type) {\r\n                    case \"switch\":\r\n                        sendList.append(item.key, value ? 'true' : 'false');\r\n                        break;\r\n                    case \"checkbox\":\r\n                        sendList.append(item.key, value.join(','));\r\n                        break;\r\n                    default:\r\n                        sendList.append(item.key, value);\r\n                        break;\r\n                }\r\n            });\r\n            this.$emit(\"onSeach\", sendList);\r\n            resolve(sendList);\r\n        },\r\n\r\n        initModel(data) {\r\n            this.formProps = data.formProps || {};\r\n            this.formItem = deepCopy(data.formItem);\r\n            let fromModel = {};\r\n            this.formItem.forEach((item) => {\r\n                // 兼容手机端\r\n                item.span = this.formBoxWidth <= 768 ? 24 : item.span;\r\n                if (this.value[item.key]) item.defaultValue = this.value[item.key];\r\n                // 初始化选项框 和上传图片框\r\n                if ( item.type === \"checkbox\" && !item.defaultValue ) {\r\n                    item.defaultValue = [];\r\n                }\r\n                // 初始化 开关\r\n                if (item.type == \"switch\" && !item.defaultValue) {\r\n                    item.defaultValue = false;\r\n                }\r\n                // input框 在饿了吗ui 中需要是 string类型\r\n                if (item.type == \"input\" && item.defaultValue) {\r\n                    item.defaultValue = item.defaultValue.toString();\r\n                }\r\n                if (!item.props) item.props = {};\r\n                // 当下拉框为多选时，需要将默认值转换为数组\r\n                if (item.type == \"select\" && item.props.multiple && !item.defaultValue) {\r\n                    item.defaultValue = [];\r\n                }\r\n                this.fromRules[item.key] = item.rules || [];\r\n                if (item.defaultValue) {\r\n                    fromModel[item.key] = item.defaultValue;\r\n                }\r\n                if (item.type != 'switch') {\r\n                    fromModel[item.key] = fromModel[item.key] ? fromModel[item.key] : item.defaultValue || \"\";\r\n                } else {\r\n                    fromModel[item.key] = fromModel[item.key] ? fromModel[item.key] : item.defaultValue;\r\n                }\r\n            });\r\n            fromModel = this.transformKeysToNestedObject(fromModel);\r\n            this.fromModel = { ...deepCopy(this.fromModel), ...deepCopy(fromModel) };\r\n        },\r\n\r\n        /**格式化值*/\r\n        transformKeysToNestedObject(obj) {\r\n            let result = {};\r\n\r\n            // 获取对象的所有键（避免在for-in循环中检查hasOwnProperty）  \r\n            const keys = Object.keys(obj);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const keyPath = keys[i].split('.');\r\n                const value = obj[keys[i]];\r\n                let currentNode = result;\r\n\r\n                // 遍历嵌套键数组，除了最后一个键  \r\n                for (let j = 0; j < keyPath.length - 1; j++) {\r\n                    const currentKey = keyPath[j];\r\n\r\n                    // 使用逻辑或运算符来避免额外的检查  \r\n                    currentNode = currentNode[currentKey] || (currentNode[currentKey] = {});\r\n                }\r\n\r\n                // 将最后一个键和值赋给当前节点  \r\n                currentNode[keyPath[keyPath.length - 1]] = value;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**清空表单数据*/\r\n        clearForm() {\r\n            this.$refs[\"dzsForm\"].resetFields();\r\n            this.initModel(this.options);\r\n            this.$emit(\"update:value\", this.fromModel);\r\n        },\r\n\r\n        /**调用饿了么表单的原生方法*/\r\n        getFormMethod() {\r\n            return this.$refs[\"dzsForm\"];\r\n        },\r\n\r\n        /**赋值*/\r\n        setFormData(data) {\r\n            if(JSON.stringify(data) == '{}' || !data) return ;\r\n            this.fromModel = { ...deepCopy(data) };\r\n            // 避免数据未加载完毕时，数据未赋值\r\n            setTimeout(() => {\r\n                this.fromModel = { ...deepCopy(data) };\r\n            }, 100)\r\n        },\r\n        /**监听form-box宽度变化*/\r\n        listenFormBoxWidth() {\r\n            const resizeObserver = new ResizeObserver(entries => {\r\n                let spanCount = 0;\r\n                for (let entry of entries) {\r\n                    const { width } = entry.contentRect;\r\n                    this.formBoxWidth = width;\r\n                    this.formItem = deepCopy(this.options.formItem);\r\n                    if (!this.formItem) return;\r\n                    this.formItem.forEach((item) => {\r\n                        // 兼容手机端\r\n                        item.span = width <= 768 ? 24 : item.span || 6;\r\n                        spanCount += item.span;\r\n                        spanCount > 18 ? item.isShow = false : item.isShow = true;\r\n                        this.openItems ? item.isShow = true : null;\r\n                        this.retractItems && spanCount > 18 ? item.isShow = false : null;\r\n                        width < 768 ? item.isShow = true : null;\r\n                    })\r\n                    width < 768 ? spanCount = 0 : null;\r\n                    this.btnSpan = width <= 765 ? 24 : 6;\r\n                    this.spanCount = spanCount;\r\n                }\r\n            })\r\n            resizeObserver.observe(document.querySelector(`#${this.fromId}`));\r\n        },\r\n        /**清空表单数据*/\r\n        Reset() {\r\n            this.clearForm();\r\n            this.$emit('onReset', this.fromModel)\r\n        },\r\n        /**展开formItem*/\r\n        openItem() {\r\n            this.openItems = true;\r\n            this.formItem.forEach((item) => {\r\n                item.isShow = true\r\n            })\r\n        },\r\n        /**收起formItem*/\r\n        retractItem() {\r\n            let spanCount = 0;\r\n            this.formItem.forEach((item) => {\r\n                spanCount += item.span;\r\n                spanCount > 18 ? item.isShow = false : item.isShow = true;\r\n            })\r\n            this.retractItems = true;\r\n            this.openItems = false;\r\n            setTimeout(() => {\r\n                this.retractItems = false;\r\n            }, 200)\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.ruleForm {\r\n    min-width: 650px;\r\n\r\n    .items {\r\n        padding-right: 10px;\r\n    }\r\n\r\n    .from-item-tips {\r\n        font-size: 12px;\r\n        color: #ccc;\r\n        padding-top: 3px;\r\n        line-height: 14px;\r\n    }\r\n    .el-date-editor{\r\n        max-width: 100%;\r\n    }\r\n}\r\n\r\n.phone-form {\r\n    min-width: 98%;\r\n    width: 98%;\r\n}\r\n\r\n.form-box {\r\n    .form-sbumit-box {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .form-sbumit-box-phone {\r\n        justify-content: center;\r\n    }\r\n\r\n    .el-row {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .el-date-editor.el-input {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n[class*=el-col-] {\r\n    float: none;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .ruleForm {\r\n        width: 100%;\r\n        min-width: 100%;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=615855ff&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=615855ff&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"615855ff\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"page\">\r\n            <h2>基础用法</h2>\r\n            <div class=\"item\">\r\n                <dzs-search-form :options=\"formOptions\">\r\n                    <template #mySlot>\r\n                        <el-form-item label=\"自定义组件\" prop=\"mySlot\">\r\n                            <el-button>button</el-button>\r\n                        </el-form-item>\r\n                    </template>\r\n                </dzs-search-form>\r\n            </div>\r\n            <h2>手机端</h2>\r\n            <div class=\"item\">\r\n                <div class=\"is-phone-public\">\r\n                    <div class=\"phone-box\">\r\n                        <dzs-search-form :options=\"formOptions\">\r\n                            <template #mySlot>\r\n                                <el-form-item label=\"自定义组件\" prop=\"mySlot\">\r\n                                    <el-button>button</el-button>\r\n                                </el-form-item>\r\n                            </template>\r\n                        </dzs-search-form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h2>代码示例</h2>\r\n            <div class=\"item\">\r\n                <dzs-code title=\"代码示例\" :value=\"code1\"></dzs-code>\r\n            </div>\r\n            <h2>参数说明</h2>\r\n            <div class=\"item\">\r\n                <dzs-table :tableHeader=\"descHeader\" :list=\"descData\" :showOperation=\"false\"\r\n                    :tableOptions=\"descTableOptions\">\r\n                </dzs-table>\r\n            </div>\r\n            <h2>组件源代码下载</h2>\r\n            <div class=\"item\">\r\n                <a target=\"_blank\"\r\n                    href=\"https://github.com/zsduan/zsduan-summary/blob/master/src/components/dzs-search-form/index.vue\">横向表单组件下载地址</a>\r\n            </div>\r\n        </div>\r\n        <el-backtop :visibility-height=\"20\" ></el-backtop>\r\n    </div>\r\n</template>\r\n<script>\r\nimport dzsSearchForm from \"../../components/dzs-search-form/index.vue\";\r\nimport { code1 } from \"./config\"\r\nimport { descHeader, descData, descTableOptions } from \"./desc\";\r\nexport default {\r\n    components: {\r\n        dzsSearchForm\r\n    },\r\n    computed: {\r\n        formOptions() {\r\n            return {\r\n                formProps: {\r\n                    \"label-width\": \"100px\",\r\n                },\r\n                formItem: [\r\n                    {\r\n                        label: \"输入框\",\r\n                        key: \"input\",\r\n                        type: \"input\",\r\n                        rules: [\r\n                            { required: true, message: '请输入输入框名称', trigger: 'blur' },\r\n                        ],\r\n                        props: {\r\n                            placeholder: \"请输入输入框\",\r\n                            tips: \"这个是一个输入框\"\r\n                        },\r\n                        defaultValue: \"我是一个默认值\",\r\n                        span: 6\r\n                    },\r\n                    {\r\n                        label: \"下拉框\",\r\n                        key: \"select\",\r\n                        type: \"select\",\r\n                        rules: [\r\n                            { required: true, message: '请选择下拉框', trigger: 'change' },\r\n                        ],\r\n                        props: {\r\n                            placeholder: \"请选择下拉框\",\r\n                            clearable: true\r\n                        },\r\n                        children: [\r\n                            {\r\n                                label: \"参数1\",\r\n                                value: 1\r\n                            },\r\n                            {\r\n                                label: \"参数2\",\r\n                                value: 2\r\n                            },\r\n                        ],\r\n                        span: 6\r\n                    },\r\n                    {\r\n                        label: \"日期\",\r\n                        key: \"date\",\r\n                        type: \"date\",\r\n                        span: 6\r\n                    },\r\n                    {\r\n                        label: \"开关\",\r\n                        key: \"switch\",\r\n                        type: \"switch\",\r\n                        span: 6\r\n                    },\r\n                    {\r\n                        label: \"多选框\",\r\n                        key: \"checkbox\",\r\n                        type: \"checkbox\",\r\n                        rules: [],\r\n                        props: {},\r\n                        children: [\r\n                            {\r\n                                label: \"选项1\",\r\n                                value: 1\r\n                            },\r\n                            {\r\n                                label: \"选项2\",\r\n                                value: 2\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: \"自定义组件\",\r\n                        key: \"mySlot\",\r\n                        type: \"input\",\r\n                        isSlot: true,\r\n                        span: 6\r\n                    },\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            code1: code1,\r\n            descHeader: descHeader,\r\n            descData: descData,\r\n            descTableOptions: descTableOptions\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formWidth.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./formWidth.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./formWidth.vue?vue&type=template&id=75149da8&scoped=true&\"\nimport script from \"./formWidth.vue?vue&type=script&lang=js&\"\nexport * from \"./formWidth.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"75149da8\",\n  null\n  \n)\n\nexport default component.exports","export const descHeader = [\r\n    {\r\n        key: 'key',\r\n        label: '名称',\r\n    },\r\n    {\r\n        key: 'type',\r\n        label: '类型',\r\n        width: '120px'\r\n    },\r\n    {\r\n        key: 'parameterType',\r\n        label: '参数类型',\r\n        width: '120px'\r\n    },\r\n    {\r\n        label: \"说明\",\r\n        key: \"desc\",\r\n    },\r\n    {\r\n        label: \"备注\",\r\n        key: \"remark\",\r\n    }\r\n]\r\n\r\nexport const descTableOptions = {\r\n    'row-key': \"key\",\r\n    'default-expand-all': false,\r\n    border: true,\r\n    'tree-props': {\r\n        children: 'children',\r\n        hasChildren: 'hasChildren'\r\n    }\r\n}\r\n\r\nexport const descData = [\r\n    {\r\n        key: \"options\",\r\n        type: \"props\",\r\n        parameterType: \"Object\",\r\n        desc: \"配置项\",\r\n        remark: \"\",\r\n        children: [\r\n            {\r\n                key: \"formProps\",\r\n                type: \"props\",\r\n                parameterType: \"Object\",\r\n                desc: \"form配置项\",\r\n                remark: \"和el-form一致\",\r\n            },\r\n            {\r\n                key: \"formItem\",\r\n                type: \"props\",\r\n                parameterType: \"Array\",\r\n                desc: \"表单项配置\",\r\n                remark: \"这一项是一个数组，数组中的每一项是一个对象\",\r\n                children: [\r\n                    {\r\n                        key: \"label\",\r\n                        type: \"props\",\r\n                        parameterType: \"String\",\r\n                        desc: \"label名称 formItem的label\",\r\n                        remark: \"非必填\"\r\n                    },\r\n                    {\r\n                        key: \"key(防止更新失败)\",\r\n                        type: \"props\",\r\n                        parameterType: \"String\",\r\n                        desc: \"需要组合的字段 通过key来获取对应的值\",\r\n                        remark: \"支持xx.xx的参数理论可以支持无限\"\r\n                    },\r\n                    {\r\n                        key: \"type\",\r\n                        type: \"props\",\r\n                        parameterType: \"String\",\r\n                        desc: \"类型\",\r\n                        remark: \"input | select | checkbox | date | time | switch\"\r\n                    },\r\n                    {\r\n                        key: \"span\",\r\n                        type: \"props\",\r\n                        parameterType: \"Number\",\r\n                        desc: \"el-col的span\",\r\n                        remark: \"默认6\"\r\n                    },\r\n                    {\r\n                        key: \"children\",\r\n                        type: \"props\",\r\n                        parameterType: \"String\",\r\n                        desc: \"当type为select | radio | checkbox时，需要传入的数据\",\r\n                        remark: \"\"\r\n                    },\r\n                    {\r\n                        key: \"defaultValue\",\r\n                        type: \"props\",\r\n                        parameterType: \"String\",\r\n                        desc: \"默认值\",\r\n                        remark: \"优先级低于v-model / v-bind:value\"\r\n                    },\r\n                    {\r\n                        key: \"isHidden\",\r\n                        type: \"props\",\r\n                        parameterType: \"Boolean\",\r\n                        desc: \"是否隐藏\",\r\n                        remark: \"\"\r\n                    },\r\n                    {\r\n                        key: \"props\",\r\n                        type: \"props\",\r\n                        parameterType: \"Object\",\r\n                        desc: \"更多配置项\",\r\n                        remark: \"原生的el-form-item的props直接写在这里\",\r\n                        children : [\r\n                            {\r\n                                key: \"isSlot\",\r\n                                type: \"props\",\r\n                                parameterType: \"Boolean\",\r\n                                desc: \"是否为el-form-item的slot\",\r\n                                remark: \"\"\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        key: \"slots\",\r\n                        type: \"props\",\r\n                        parameterType: \"Object\",\r\n                        desc: \"内部组件的插槽\",\r\n                        remark: \"目前只支持 input类型\",\r\n                        children : [\r\n                            {\r\n                                key: \"name\",\r\n                                type: \"props\",\r\n                                parameterType: \"String\",\r\n                                desc: \"插槽名称\",\r\n                                remark: \"\"\r\n                            },\r\n                            {\r\n                                key: \"text\",\r\n                                type: \"props\",\r\n                                parameterType: \"String\",\r\n                                desc: \"插槽的名称\",\r\n                                remark: \"\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        key: \"rules\",\r\n                        type: \"props\",\r\n                        parameterType: \"Array | Object\",\r\n                        desc: \"规则配置和el-form相同\",\r\n                        remark: \"\"\r\n                    },\r\n                    {\r\n                        key: \"isNull\",\r\n                        type: \"props\",\r\n                        parameterType: \"Boolean\",\r\n                        desc: \"在提交时不需要把数据返回的key\",\r\n                        remark: \"\"\r\n                    },\r\n                    {\r\n                        key: \"isSlot(防止更新失败)\",\r\n                        type: \"props\",\r\n                        parameterType: \"Boolean\",\r\n                        desc: \"是否为自定义组件\",\r\n                        remark: \"el-form-item全部替换掉\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        key: \"value / v-model\",\r\n        type: \"props\",\r\n        parameterType: \"Object\",\r\n        desc: \"表单的原始数据/修改时的数据\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"submit-text\",\r\n        type: \"props\",\r\n        parameterType: \"String\",\r\n        desc: \"提交按钮文字\",\r\n        remark: \"默认提交\"\r\n    },\r\n    {\r\n        key: \"reset-text\",\r\n        type: \"props\",\r\n        parameterType: \"String\",\r\n        desc: \"重置按钮文字\",\r\n        remark: \"默认重置\"\r\n    },\r\n    {\r\n        key: \"showBtn\",\r\n        type: \"props\",\r\n        parameterType: \"Boolean\",\r\n        desc: \"是否显示底部按钮\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"antiShakeTime\",\r\n        type: \"props\",\r\n        parameterType: \"Number\",\r\n        desc: \"防抖时间\",\r\n        remark: \"默认 1000\"\r\n    },\r\n    {\r\n        key: \"btnIcon\",\r\n        type: \"props\",\r\n        parameterType: \"String\",\r\n        desc: \"搜索按钮的icon\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"isFormData\",\r\n        type: \"props\",\r\n        parameterType: \"Boolean\",\r\n        desc: \"是否以FormData的形式提交\",\r\n        remark: \"默认false\"\r\n    },\r\n    {\r\n        key: \"@search\",\r\n        type: \"methods\",\r\n        parameterType: \"\",\r\n        desc: \"提交事件 返回一个promise\",\r\n        remark: \"注意 isFormData为true时 返回的是一个FormData对象 否则返回一个对象\"\r\n    },\r\n    {\r\n        key: \"@onReset\",\r\n        type: \"methods\",\r\n        parameterType: \"\",\r\n        desc: \"重置事件\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"@change\",\r\n        type: \"methods\",\r\n        parameterType: \"\",\r\n        desc: \"改变事件\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"getFormMethod()\",\r\n        type: \"ref methods\",\r\n        parameterType: \"\",\r\n        desc: \"获取el-form的方法\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"clearForm()\",\r\n        type: \"ref methods\",\r\n        parameterType: \"\",\r\n        desc: \"将表单重置为初始值\",\r\n        remark: \"\"\r\n    },\r\n    {\r\n        key: \"setFormData(data)\",\r\n        type: \"ref methods\",\r\n        parameterType: \"\",\r\n        desc: \"设置表单数据\",\r\n        remark: \"参数为一个对象 某些时候v-model失败时可以使用\"\r\n    }\r\n]","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=615855ff&prod&lang=less&scoped=true&\"","export const code1 = `\r\ncomputed: {\r\n    formOptions() {\r\n        return {\r\n            formProps: {\r\n                \"label-width\": \"100px\",\r\n            },\r\n            formItem: [\r\n                {\r\n                    label: \"输入框\",\r\n                    key: \"input\",\r\n                    type: \"input\",\r\n                    rules: [\r\n                        { required: true, message: '请输入输入框名称', trigger: 'blur' },\r\n                    ],\r\n                    props: {\r\n                        placeholder: \"请输入输入框\",\r\n                        tips: \"这个是一个输入框\"\r\n                    },\r\n                    defaultValue: \"我是一个默认值\",\r\n                    span: 6\r\n                },\r\n                {\r\n                    label: \"下拉框\",\r\n                    key: \"select\",\r\n                    type: \"select\",\r\n                    rules: [\r\n                        { required: true, message: '请选择下拉框', trigger: 'change' },\r\n                    ],\r\n                    props: {\r\n                        placeholder: \"请选择下拉框\",\r\n                        clearable: true\r\n                    },\r\n                    children: [\r\n                        {\r\n                            label: \"参数1\",\r\n                            value: 1\r\n                        },\r\n                        {\r\n                            label: \"参数2\",\r\n                            value: 2\r\n                        },\r\n                    ],\r\n                    span: 6\r\n                },\r\n                {\r\n                    label: \"日期\",\r\n                    key: \"date\",\r\n                    type: \"date\",\r\n                    span: 6\r\n                },\r\n                {\r\n                    label: \"开关\",\r\n                    key: \"switch\",\r\n                    type: \"switch\",\r\n                    span: 6\r\n                },\r\n                {\r\n                    label: \"多选框\",\r\n                    key: \"checkbox\",\r\n                    type: \"checkbox\",\r\n                    rules: [],\r\n                    props: {},\r\n                    children: [\r\n                        {\r\n                            label: \"选项1\",\r\n                            value: 1\r\n                        },\r\n                        {\r\n                            label: \"选项2\",\r\n                            value: 2\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    label: \"自定义组件\",\r\n                    key: \"mySlot\",\r\n                    type: \"input\",\r\n                    isSlot: true,\r\n                    span: 6\r\n                },\r\n            ]\r\n        }\r\n    }\r\n},\r\n`"],"sourceRoot":""}