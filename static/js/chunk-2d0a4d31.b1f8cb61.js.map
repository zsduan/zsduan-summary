{"version":3,"sources":["webpack:///./src/views/drag/config.js"],"names":["code1"],"mappings":"kHAAA,6CAQO,MAAMA,EAAS","file":"static/js/chunk-2d0a4d31.b1f8cb61.js","sourcesContent":["/*\r\n * @Author: zs.duan\r\n * @Date: 2022-11-29 17:33:01\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-11-29 17:34:06\r\n * @FilePath: \\vue2+elui+template\\src\\views\\drag\\config.js\r\n */\r\n\r\nexport const code1 = `\r\n// html\r\n<ul class=\"my-list\" ref=\"myList\">\r\n    <li\r\n        @dragover=\"Mydragover($event)\"\r\n        @dragenter=\"Mydragenter($event , index)\"\r\n        @dragstart=\"MyDragstart($event , index)\"\r\n        @dragend=\"Mydragend\"\r\n        draggable=\"true\"\r\n        :class=\"item.active ? 'moving' :''\"\r\n        class=\"list-item\"\r\n        v-for=\"(item , index) in list\"\r\n        :key=\"index\"\r\n        >{{index + 1}} {{item.name}}</li>\r\n    </ul>\r\n// data\r\nlist: [\r\n    {\r\n        name: \"张珊\",\r\n        active: false,\r\n    },\r\n    {\r\n        name: \"张三\",\r\n        active: false,\r\n    },\r\n    {\r\n        name: \"李四\",\r\n        active: false,\r\n    },\r\n    {\r\n        name: \"王五\",\r\n        active: false,\r\n    },\r\n    {\r\n        name: \"李二狗\",\r\n        active: false,\r\n    },\r\n    {\r\n        name: \"王麻子\",\r\n        active: false,\r\n    },\r\n],\r\nsourceNode: null, //当前正在拖动的元素\r\nnewList: [],\r\n// js\r\nMyDragstart(e, index) {\r\n    setTimeout(() => {\r\n        this.list[index].active = true;\r\n    }, 10);\r\n    this.sourceNode = e.target;\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    if (!this.newList.length) {\r\n        this.newList = JSON.parse(JSON.stringify(this.list));\r\n    }\r\n},\r\nMydragend() {\r\n    this.list.forEach((v) => {\r\n        v.active = false;\r\n    });\r\n},\r\nMydragenter(e, index) {\r\n    e.preventDefault();\r\n    if (e.target == this.sourceNode) {\r\n        return;\r\n    }\r\n    const listNode = this.$refs.myList;\r\n    const children = Array.from(this.$refs.myList.children);\r\n    const sourceIndex = children.indexOf(this.sourceNode);\r\n    const targetIndex = children.indexOf(e.target);\r\n    const move = JSON.parse(JSON.stringify(this.list[sourceIndex]));\r\n    const target = JSON.parse(JSON.stringify(this.list[targetIndex]));\r\n    this.newList[targetIndex] = move;\r\n    this.newList[sourceIndex] = target;\r\n    if (sourceIndex < targetIndex) {\r\n        listNode.insertBefore(\r\n            this.sourceNode,\r\n            e.target.nextElementSibling\r\n        );\r\n    } else {\r\n        listNode.insertBefore(this.sourceNode, e.target);\r\n    }\r\n},\r\nMydragover(e) {\r\n    e.preventDefault();\r\n},\r\n`;"],"sourceRoot":""}