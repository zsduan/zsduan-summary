{"version":3,"sources":["webpack:///./src/views/file-slice-and-merge/config.js"],"names":["code1","code2"],"mappings":"gHAAA,mFAOO,MAAMA,EAAS,03CAqDTC,EAAS","file":"static/js/chunk-2d20ec53.6d58b874.js","sourcesContent":["/*\r\n * @Author: zs.duan\r\n * @Date: 2022-11-25 18:27:44\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-11-25 19:29:14\r\n * @FilePath: \\vue2+elui+template\\src\\views\\file-slice-and-merge\\config.js\r\n */\r\nexport const code1 = `\r\n/**\r\n * 文件切片与合并 支持Promise\r\n * @param {Object } options 配置对象\r\n * @param {File | string | object | Array} options.file 文件(文件列表) 可选 fileId/file/refs/fileList 任选其一\r\n * @param {any} options.Vue vue本身也就是this\r\n * @param {'slice' | 'merge'} options.type 切片还是合并 默认切片 \r\n * @param {boolean} options.md5 是否需要md5值 默认不需要 true 需要 false 不需要 md5会影响分片速度\r\n * @param {number} options.chunkSize 切片大小 默认 5M\r\n * @param {string} options.fileName 合并的文件名称\r\n * @param {boolean} options.sort 合并进行排序 默认true 合并文件较多建议开启\r\n * @param {Function} options.success 成功返回 \r\n * @param {Function} options.fail 错误返回\r\n * @returns Promise\r\n * @description 分片返回数据\r\n * @returns \r\n * { \r\n *    code : 200,\r\n *    list : [\r\n *      {\r\n            sort : number, //排序\r\n            file : file, //分片文件bold\r\n            filename : string ,//文件名称 name-1 name-2\r\n            md5 : string //分片文件的md5值\r\n        }\r\n *    ], //文件分片的list数据\r\n *    filename : string, //文件原始名称\r\n *    file : file, //原始文件 blod数据\r\n *    md5 : string //原始文件的md5值\r\n * }\r\n * @description 合并返回数据\r\n * @returns\r\n * {\r\n *     code : 200,\r\n *     file : file, //文件 blod数据\r\n *     filename : string //文件名称\r\n * }\r\n * \r\n * */\r\n//使用\r\nimport {fileSliceMerge} from \"@/utils/file-slice-and-merge\"\r\n// 切片\r\nfileSliceMerge({\r\n    file : \"myfile\",\r\n    Vue : this,\r\n    chunkSize :1024 * 1024 * 5,\r\n    md5 : true,\r\n    success : (res)=>{\r\n        console.log(\"分片文件返回 ==>\" ,res);\r\n    }\r\n})\r\n`\r\n\r\nexport const code2 = `\r\n// 合并\r\nfileSliceMerge({\r\n    file : \"myfile1\",\r\n    Vue : this,\r\n    type : \"merge\",\r\n    success : (res)=>{\r\n        console.log(\"合并文件返回 ==>\" ,res);\r\n    }\r\n})\r\n`"],"sourceRoot":""}