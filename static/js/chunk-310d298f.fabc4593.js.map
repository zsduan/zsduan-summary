{"version":3,"sources":["webpack:///./src/components/dzs-upload-file/dzs-upload-file.vue","webpack:///src/components/dzs-upload-file/dzs-upload-file.vue","webpack:///./src/components/dzs-upload-file/dzs-upload-file.vue?0bea","webpack:///./src/components/dzs-upload-file/dzs-upload-file.vue?b86b","webpack:///./src/components/dzs-form/index.vue?f805","webpack:///./src/components/dzs-upload-img/dzs-upload-img.vue?f786","webpack:///./src/components/dzs-form/index.vue","webpack:///./src/components/dzs-form/config.js","webpack:///./src/components/dzs-upload-img/dzs-upload-img.vue","webpack:///src/components/dzs-upload-img/dzs-upload-img.vue","webpack:///./src/components/dzs-upload-img/dzs-upload-img.vue?d5b3","webpack:///./src/components/dzs-upload-img/dzs-upload-img.vue?92e3","webpack:///./src/components/dzs-form/deepCopy.js","webpack:///src/components/dzs-form/index.vue","webpack:///./src/components/dzs-form/index.vue?91ba","webpack:///./src/components/dzs-form/index.vue?107b","webpack:///./src/components/dzs-upload-file/dzs-upload-file.vue?0215"],"names":["render","_vm","this","_c","_self","class","isPhone","attrs","action","multiple","fileList","limit","beforeUpload","handleSuccess","handleExceed","autoUpload","changeFile","staticClass","_v","slot","_s","maxSize","fileType","join","_e","staticRenderFns","model","prop","event","props","type","String","default","Number","Array","value","Boolean","data","watch","handler","val","immediate","length","map","item","name","url","uid","status","methods","file","split","indexOf","$message","error","size","res","fileInfo","path","uploadUrl","formItem","push","$emit","files","fromItem","raw","warning","component","fromId","_b","directives","rawName","loading","expression","ref","ruleForm","noScroll","formBoxWidth","isScroll","style","height","loadingText","fromModel","fromRules","labelPosition","formProps","gutter","_l","index","key","isHidden","span","isSlot","_t","label","getFromModelValue","getPlaceholder","on","$event","changeVaule","slots","text","children","option","idx","toString","staticStyle","toolbar","getTips","tips","icon","showBtn","buttonFlex","stopPropagation","cancel","apply","arguments","cancelText","submit","submitText","pickerOptions","shortcuts","onClick","picker","end","Date","start","setTime","getTime","imgStyle","handlePictureCardPreview","handleRemove","upFile","dialogVisible","dialogImageUrl","imgType","deep","imgTypes","isLt2M","splice","deepCopy","obj","copy","isArray","hasOwnProperty","components","dzsUploadImg","dzsEditors","dzsUploadFile","options","Object","antiShakeTime","isFormData","timer","newValue","oldValue","initModel","setFormData","created","mounted","listenFormBoxWidth","fisrtText","placeholder","keyPath","keyList","i","formName","setTimeout","clearTimeout","Promise","resolve","reject","$refs","validate","valid","code","message","sendFormData","sendList","forEach","urlList","isNull","transformKeysToNestedObject","FormData","Error","append","delete","clearForm","defaultValue","rules","result","keys","currentNode","j","currentKey","resetFields","getFormMethod","JSON","stringify","phoneToolbar","resizeObserver","ResizeObserver","entries","entry","width","contentRect","observe","document","querySelector"],"mappings":"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","file":"static/js/chunk-310d298f.fabc4593.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-upload',{class:{'upload-dzs' : true , 'upload-dzs-phone' : _vm.isPhone},attrs:{\"drag\":\"\",\"action\":_vm.action,\"multiple\":_vm.multiple,\"file-list\":_vm.fileList,\"limit\":_vm.limit,\"before-upload\":_vm.beforeUpload,\"on-success\":_vm.handleSuccess,\"on-exceed\":_vm.handleExceed,\"auto-upload\":_vm.autoUpload,\"on-change\":_vm.changeFile,\"show-file-list\":true}},[_c('i',{staticClass:\"el-icon-upload\"}),(!_vm.isPhone)?_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]):_c('div',{staticClass:\"el-upload__text\"},[_c('em',[_vm._v(\"点击上传文件\")])]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_c('div',[_vm._v(\"只能上传不超过 \"+_vm._s(_vm.maxSize / 1024 / 1024)+\"M 的\"+_vm._s(_vm.fileType.join(\"、\"))+\"文件\")]),(_vm.limit > 1)?_c('div',[_vm._v(\"最多上传 \"+_vm._s(_vm.limit)+\" 个文件\")]):_vm._e()])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <el-upload :class=\"{'upload-dzs' : true , 'upload-dzs-phone' : isPhone}\" drag :action=\"action\" :multiple=\"multiple\" :file-list=\"fileList\" :limit=\"limit\"\r\n            :before-upload=\"beforeUpload\" :on-success=\"handleSuccess\" :on-exceed=\"handleExceed\"\r\n            :auto-upload=\"autoUpload\" :on-change=\"changeFile\" :show-file-list=\"true\">\r\n            <i class=\"el-icon-upload\"></i>\r\n            <div class=\"el-upload__text\" v-if=\"!isPhone\">将文件拖到此处，或<em>点击上传</em></div>\r\n            <div class=\"el-upload__text\" v-else><em>点击上传文件</em></div>\r\n            <div class=\"el-upload__tip\" slot=\"tip\">\r\n                <div>只能上传不超过 {{ maxSize / 1024 / 1024 }}M 的{{ fileType.join(\"、\") }}文件</div>\r\n                <div v-if=\"limit > 1\">最多上传 {{ limit }} 个文件</div>\r\n            </div>\r\n        </el-upload>\r\n    </div>\r\n</template>\r\n<script>\r\n/**\r\n * 文件上传组件\r\n * @props : action 上传地址 string\r\n * @props : limit 上传数量 number 默认1\r\n * @props : maxSize 最大上传大小 默认5M number\r\n * @props : fileType 文件类型 array 默认[\"doc\", \"docx\", \"ppt\", \"pptx\", \"zip\", \"rar\", \"pdf\", \"xls\", \"xlsx\", \"txt\", \"jpg\", \"png\", \"jpeg\"]\r\n * @props : value/v-model 值 array\r\n * @props : autoUpload 是否自动上传 默认true\r\n * \r\n * @methods : change 改变 function 返回所以文件list array\r\n * */\r\nexport default {\r\n    model: {\r\n        prop: \"value\",\r\n        event: \"update:value\"\r\n    },\r\n    props: {\r\n        action: {\r\n            type: String,\r\n            default: () => {\r\n                return \"#\"\r\n            }\r\n        },\r\n        /**最多上传文件*/\r\n        limit: {\r\n            type: Number,\r\n            default: () => {\r\n                return 1\r\n            }\r\n        },\r\n        /**最大上传大小*/\r\n        maxSize: {\r\n            type: Number,\r\n            default: () => {\r\n                return 5 * 1024 * 1024\r\n            }\r\n        },\r\n        /**上传文件类型*/\r\n        fileType: {\r\n            type: Array,\r\n            default: () => {\r\n                return [\"doc\", \"docx\", \"ppt\", \"pptx\", \"zip\", \"rar\", \"pdf\", \"xls\", \"xlsx\", \"txt\", \"jpg\", \"png\", \"jpeg\"]\r\n            }\r\n        },\r\n        /**原始文件列表*/\r\n        value: {\r\n            type: Array,\r\n            default: () => {\r\n                return []\r\n            }\r\n        },\r\n        /**是否自动上传*/\r\n        autoUpload: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return true\r\n            }\r\n        },\r\n        /**是否手机端*/\r\n        isPhone: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            multiple: false,\r\n            fileList: []\r\n        }\r\n    },\r\n    watch: {\r\n        limit: {\r\n            handler(val) {\r\n                if (val == 1) {\r\n                    this.multiple = false\r\n                } else {\r\n                    this.multiple = true\r\n                }\r\n            },\r\n            immediate: true,\r\n        },\r\n        /**处理原始文件*/\r\n        value: {\r\n            handler(val) {\r\n                if (val.length > 0) {\r\n                    this.fileList = val.map((item) => {\r\n                        return {\r\n                            name: item.name,\r\n                            url: item.url,\r\n                            uid: item.uid,\r\n                            status: \"success\"\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            immediate: true,\r\n        }\r\n    },\r\n    methods: {\r\n        /**上传之前*/\r\n        beforeUpload(file) {\r\n            let fileType = file.name.split(\".\")[1];\r\n            if (this.fileType.indexOf(fileType) == -1) {\r\n                this.$message.error(`上传文件格式不正确`);\r\n                return false;\r\n            }\r\n            if (file.size > this.maxSize) {\r\n                this.$message.error(`上传文件大小不能超过 ${this.maxSize / 1024 / 1024}MB!`);\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        /**上传成功*/\r\n        handleSuccess(res, file) {\r\n            let fileInfo = {\r\n                name: file.name,\r\n                path: res.path ? res.path : \"\",\r\n                uploadUrl: res.url ? res.url : \"\",\r\n                uid: file.uid,\r\n                type: file.type,\r\n                formItem: \"upload-file\",\r\n                status: \"success\",\r\n            };\r\n            this.fileList.push(fileInfo);\r\n            this.$emit(\"update:value\", this.fileList);\r\n            this.$emit(\"change\", this.fileList);\r\n        },\r\n        /**文件改变*/\r\n        changeFile(files) {\r\n            if (!this.autoUpload) {\r\n                let fileInfo = {\r\n                    name: files.name,\r\n                    path: files.url,\r\n                    uploadUrl: files.url,\r\n                    uid: files.uid,\r\n                    type: files.type,\r\n                    status: \"success\",\r\n                    fromItem: \"upload-file\",\r\n                    file: files.raw\r\n                };\r\n                this.fileList.push(fileInfo);\r\n                this.$emit(\"update:value\", this.fileList);\r\n                this.$emit(\"change\", this.fileList);\r\n            }\r\n        },\r\n        /**超出文件个数限制时的钩子*/\r\n        handleExceed(files, fileList) {\r\n            this.$message.warning(`当前限制选择 ${this.limit} 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.upload-dzs-phone{\r\n    width: 100%;\r\n    :deep(.el-upload) {\r\n        width: 100%;\r\n\r\n        .el-upload-dragger {\r\n            width: 100%;\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dzs-upload-file.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dzs-upload-file.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dzs-upload-file.vue?vue&type=template&id=2e9b139b&scoped=true&\"\nimport script from \"./dzs-upload-file.vue?vue&type=script&lang=js&\"\nexport * from \"./dzs-upload-file.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dzs-upload-file.vue?vue&type=style&index=0&id=2e9b139b&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e9b139b\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=b186ba9e&prod&lang=less&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dzs-upload-img.vue?vue&type=style&index=0&id=96c2739c&prod&lang=less&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"form-box\",attrs:{\"id\":_vm.fromId}},[_c('el-form',_vm._b({directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"dzsForm\",class:{ ruleForm: true, noScroll: _vm.loading, 'phone-form': _vm.formBoxWidth <= 768, 'form-box-scroll': _vm.isScroll },style:({ height: _vm.isScroll ? _vm.height : '100%' }),attrs:{\"element-loading-text\":_vm.loadingText,\"model\":_vm.fromModel,\"rules\":_vm.fromRules,\"label-position\":_vm.labelPosition}},'el-form',{ ..._vm.formProps },false),[_c('el-row',{attrs:{\"gutter\":_vm.gutter}},_vm._l((_vm.formItem),function(item,index){return _c('div',{key:index},[(!item.isHidden)?_c('el-col',{attrs:{\"span\":item.span ? item.span : 24}},[(item.isSlot)?[_vm._t(item.key)]:_vm._e(),(!item.isSlot)?[_c('el-form-item',{attrs:{\"label\":item.label,\"prop\":item.key}},[_c('div',{staticClass:\"dzs-form-item\"},[_vm._t(`${item.key}Before`),(item.props && item.props.isSlot)?[_vm._t(`${item.key}`)]:_vm._e(),(item.type == 'input')?[_c('el-input',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-input',{ ...item.props },false),[(item.slots)?_c('template',{slot:item.slots.name},[_vm._v(\" \"+_vm._s(item.slots.text)+\" \")]):_vm._e()],2)]:_vm._e(),(item.type == 'number')?[_c('el-input-number',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-input-number',{ ...item.props },false))]:_vm._e(),(item.type == 'select')?[_c('el-select',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item, 'select')},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-select',{ ...item.props },false),_vm._l((item.children),function(option,idx){return _c('el-option',{key:option.value + (idx).toString(),staticStyle:{\"padding\":\"0 6px\"},attrs:{\"label\":option.label,\"value\":option.value}})}),1)]:_vm._e(),(item.type == 'date')?[_c('el-date-picker',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item, 'select')},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-date-picker',{ ...item.props },false))]:_vm._e(),(item.type == 'time')?[_c('el-time-picker',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key),\"placeholder\":_vm.getPlaceholder(item, 'select')},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-time-picker',{ ...item.props },false))]:_vm._e(),(item.type == 'color')?[_c('el-color-picker',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-color-picker',{ ...item.props },false))]:_vm._e(),(item.type == 'switch')?[_c('el-switch',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-switch',{ ...item.props },false))]:_vm._e(),(item.type == 'checkbox')?[_c('el-checkbox-group',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-checkbox-group',{ ...item.props },false),_vm._l((item.children),function(option,idx){return _c('el-checkbox',_vm._b({key:option.value + idx,staticClass:\"items\",attrs:{\"label\":option.value}},'el-checkbox',{ ...option.props },false),[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),1)]:_vm._e(),(item.type == 'radio')?[_c('el-radio-group',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"input\":function($event){return _vm.changeVaule($event, item.key)}}},'el-radio-group',{ ...item.props },false),_vm._l((item.children),function(option,idx){return _c('el-radio',_vm._b({key:option.value + idx,staticClass:\"items\",attrs:{\"label\":option.value}},'el-radio',{ ...option.props },false),[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),1)]:_vm._e(),(item.type == 'uploadImg')?[_c('dzs-upload-img',_vm._b({attrs:{\"value\":_vm.getFromModelValue(item.key)},on:{\"change\":function($event){return _vm.changeVaule($event, item.key)}}},'dzs-upload-img',{ ...item.props },false))]:_vm._e(),(item.type == 'uploadFile')?[_c('dzs-upload-file',_vm._b({attrs:{\"isPhone\":_vm.formBoxWidth <= 768,\"value\":_vm.getFromModelValue(item.key)},on:{\"change\":function($event){return _vm.changeVaule($event, item.key)}}},'dzs-upload-file',{ ...item.props },false))]:_vm._e(),(item.type == 'editor')?[_c('dzs-editors',_vm._b({attrs:{\"toolbar\":_vm.toolbar,\"show_save\":false,\"value\":_vm.getFromModelValue(item.key)},on:{\"save\":function($event){return _vm.changeVaule($event, item.key)}}},'dzs-editors',{ ...item.props },false))]:_vm._e(),_vm._t(`${item.key}After`)],2),(_vm.getTips(item) && item.type != 'divider')?_c('div',{staticClass:\"from-item-tips\"},[_vm._v(\" \"+_vm._s(_vm.getTips(item))+\" \")]):_vm._e()]),(item.type == 'divider')?[_c('el-divider',_vm._b({},'el-divider',{ ...item.props },false),[(item.props && item.props.tips)?_c('span',[_vm._v(_vm._s(item.props.tips))]):_vm._e(),(item.props && item.props.icon)?_c('i',{class:item.props.icon}):_vm._e()])]:_vm._e()]:_vm._e()],2):_vm._e()],1)}),0)],1),(_vm.showBtn)?_c('div',{class:['form-sbumit-box' , _vm.buttonFlex]},[_c('el-button',{staticClass:\"btn cancel\",attrs:{\"type\":\"info\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.cancel.apply(null, arguments)}}},[_vm._v(_vm._s(_vm.cancelText))]),_vm._t(\"footerBtn\"),_c('el-button',{staticClass:\"btn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.submit('dzsForm')}}},[_vm._v(_vm._s(_vm.submitText))])],2):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: zs.duan\r\n * @Date: 2021-12-22 09:31:48\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2021-12-22 09:31:49\r\n * @FilePath: \\templatef:\\我的博客\\adminBlog\\src\\components\\from\\cinfig.js\r\n */\r\n\r\nexport const pickerOptions = {\r\n\tshortcuts: [{\r\n\t\ttext: '最近一周',\r\n\t\tonClick(picker) {\r\n\t\t\tconst end = new Date();\r\n\t\t\tconst start = new Date();\r\n\t\t\tstart.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n\t\t\tpicker.$emit('pick', [start, end]);\r\n\t\t}\r\n\t}, {\r\n\t\ttext: '最近一个月',\r\n\t\tonClick(picker) {\r\n\t\t\tconst end = new Date();\r\n\t\t\tconst start = new Date();\r\n\t\t\tstart.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n\t\t\tpicker.$emit('pick', [start, end]);\r\n\t\t}\r\n\t}, {\r\n\t\ttext: '最近三个月',\r\n\t\tonClick(picker) {\r\n\t\t\tconst end = new Date();\r\n\t\t\tconst start = new Date();\r\n\t\t\tstart.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n\t\t\tpicker.$emit('pick', [start, end]);\r\n\t\t}\r\n\t}]\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"upload-img-box\"},[(_vm.fileList.length)?_c('div',{staticClass:\"show-img-box\",style:(_vm.imgStyle)},_vm._l((_vm.fileList),function(item,index){return _c('div',{key:index},[_c('img',{staticClass:\"el-upload-list__item-thumbnail\",style:(_vm.imgStyle),attrs:{\"src\":item.url,\"alt\":\"\"}}),_c('div',{staticClass:\"el-upload-list__item-actions\",style:(_vm.imgStyle)},[_c('div',{staticClass:\"el-upload-actions\"},[_c('i',{staticClass:\"el-icon-zoom-in\",on:{\"click\":function($event){return _vm.handlePictureCardPreview(item)}}}),_c('i',{staticClass:\"el-icon-delete\",on:{\"click\":function($event){return _vm.handleRemove(index)}}})])])])}),0):_vm._e(),_c('div',{style:(_vm.imgStyle)},[_c('el-upload',{staticClass:\"avatar-uploader\",attrs:{\"action\":_vm.upFile,\"show-file-list\":false,\"list-type\":\"picture-card\",\"file-list\":_vm.fileList,\"limit\":_vm.limit,\"before-upload\":_vm.beforeUpload,\"on-success\":_vm.handleSuccess,\"on-exceed\":_vm.handleExceed,\"auto-upload\":_vm.autoUpload,\"on-change\":_vm.changeFile}},[_c('i',{staticClass:\"el-icon-plus avatar-uploader-icon\"})])],1),_c('el-dialog',{attrs:{\"visible\":_vm.dialogVisible,\"append-to-body\":true},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('img',{attrs:{\"width\":\"100%\",\"src\":_vm.dialogImageUrl,\"alt\":\"\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: zs.duan\r\n * @Date: 2022-09-27 13:52:43\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-12-26 16:38:49\r\n * @FilePath: \\vue2+js+eui+template\\src\\components\\dzs-upload-img\\dzs-upload-img.vue\r\n-->\r\n<template>\r\n    <div class=\"upload-img-box\">\r\n        <div class=\"show-img-box\" v-if=\"fileList.length\" :style=\"imgStyle\">\r\n            <div v-for=\"(item,index) in fileList\" :key=\"index\">\r\n                <img class=\"el-upload-list__item-thumbnail\" :src=\"item.url\" alt :style=\"imgStyle\" />\r\n                <div class=\"el-upload-list__item-actions\" :style=\"imgStyle\">\r\n                    <div class=\"el-upload-actions\">\r\n                        <i class=\"el-icon-zoom-in\" @click=\"handlePictureCardPreview(item)\"></i>\r\n                        <i class=\"el-icon-delete\"  @click=\"handleRemove(index)\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div :style=\"imgStyle\">\r\n            <el-upload\r\n                class=\"avatar-uploader\"\r\n                :action=\"upFile\"\r\n                :show-file-list=\"false\"\r\n                list-type=\"picture-card\"\r\n                :file-list=\"fileList\"\r\n                :limit=\"limit\"\r\n                :before-upload=\"beforeUpload\"\r\n                :on-success=\"handleSuccess\"\r\n                :on-exceed=\"handleExceed\"\r\n                :auto-upload=\"autoUpload\"\r\n                :on-change=\"changeFile\"\r\n            >\r\n                <i class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n            </el-upload>\r\n        </div>\r\n        <!-- 预览 -->\r\n        <el-dialog :visible.sync=\"dialogVisible\" :append-to-body=\"true\">\r\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt />\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n/*\r\n *\r\n *@props : upFile 上传地址 string\r\n *@props : limit 上传数量 number 默认1\r\n *@props : value/v-model 值 array\r\n *@props : imgStyle 图片样式 string 默认'width: 80px;height: 80px;'\r\n *@props : maxSize 最大上传大小 默认3M number\r\n *@props : imgType 图片类型 string 以逗号分隔\r\n * \r\n *\r\n * @methods : change 改变 function 返回所以图片list array\r\n * @methods : upload-success 上传成功 function 返回当前图片信息 object\r\n * @methods : upload-remove 删除 function 返回所以图片list array\r\n * \r\n * \r\n*/ \r\nexport default {\r\n    name: \"dzs-upload-img\",\r\n    model: {\r\n        prop: \"value\",\r\n        event: \"update:value\",\r\n    },\r\n    props: {\r\n        upFile: {\r\n            type: String,\r\n            default: () => {\r\n                return \"#\";\r\n            },\r\n        },\r\n        value: {\r\n            type: Array | String,\r\n            default: () => {\r\n                return [];\r\n            },\r\n        },\r\n        imgStyle: {\r\n            type: String,\r\n            default: () => {\r\n                return \"width:80px;height:80px;\";\r\n            },\r\n        },\r\n        // 最大上传张数\r\n        limit: {\r\n            type: Number,\r\n            default: () => {\r\n                return 1;\r\n            },\r\n        },\r\n        // 最大上传大小\r\n        maxSize: {\r\n            type: Number,\r\n            default: () => {\r\n                return 3;\r\n            },\r\n        },\r\n        // 文件类型\r\n        imgType: {\r\n            type: String,\r\n            default: () => {\r\n                return \"image/jpeg,image/png,image/gif\";\r\n            },\r\n        },\r\n        autoUpload : {\r\n            type : Boolean,\r\n            default : ()=>{\r\n                return true\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            fileList: [],\r\n            dialogImageUrl: \"\",\r\n            dialogVisible: false,\r\n        };\r\n    },\r\n    watch: {\r\n        value:{\r\n            handler(val){\r\n                if(typeof val == \"string\"){\r\n                    this.fileList = val ? {\r\n                        uid : new Date().getTime(),\r\n                        url : val,\r\n                        status : \"success\",\r\n                        fromItem : \"upload-img\",\r\n                    } : [];\r\n                }else{\r\n                    this.fileList = val;\r\n                }\r\n            },\r\n            deep:true,\r\n            immediate:true,\r\n        }\r\n    },\r\n    methods: {\r\n        beforeUpload(file) {\r\n            let imgTypes = this.imgType.split(\",\");\r\n            let index = imgTypes.indexOf(file.type);\r\n            const isLt2M = file.size / 1024 / 1024 < this.maxSize;\r\n            if (index == -1) {\r\n                this.$message.error(\"请上传正确的图片格式\");\r\n            }\r\n            if (!isLt2M) {\r\n                this.$message.error(`上传图片大小不能超过 ${this.maxSize}MB!`);\r\n            }\r\n            return index != -1 && isLt2M;\r\n        },\r\n        // 上传成功\r\n        handleSuccess(res, file) {\r\n            let fileInfo = {\r\n                name: file.name,\r\n                path: res.path ? res.path : \"\",\r\n                uploadUrl: res.url ? res.url : \"\",\r\n                uid: file.uid,\r\n                url: file.url,\r\n                status: \"success\",\r\n                fromItem: \"upload-img\",\r\n                data : res,\r\n                file : file,\r\n            };\r\n            this.fileList.push(fileInfo);\r\n            this.$emit(\"update:value\", this.fileList);\r\n            this.$emit(\"upload-success\", fileInfo);\r\n            this.$emit(\"change\", this.fileList);\r\n        },\r\n        // 文件改变\r\n        changeFile(files){\r\n            if(!this.autoUpload){\r\n                let fileInfo = {\r\n                    name: files.name,\r\n                    path: files.url,\r\n                    uploadUrl: files.url,\r\n                    uid: files.uid,\r\n                    url: files.url,\r\n                    status: \"success\",\r\n                    fromItem: \"upload-img\",\r\n                    data : files.raw,\r\n                    file : files.raw,\r\n                };\r\n                this.fileList.push(fileInfo);\r\n                this.$emit(\"update:value\", this.fileList);\r\n                this.$emit(\"upload-success\", fileInfo);\r\n                this.$emit(\"change\", this.fileList);\r\n            }\r\n        },\r\n        // 超出限制\r\n        handleExceed(files, fileList) {\r\n            this.$message.warning(`当前上传图片数量已达上限${this.limit}张`);\r\n        },\r\n        // 预览\r\n        handlePictureCardPreview(file) {\r\n            this.dialogImageUrl = file.url;\r\n            this.dialogVisible = true;\r\n        },\r\n        // 删除\r\n        handleRemove(index) {\r\n            this.fileList.splice(index, 1);\r\n            this.$emit(\"change\",this.fileList);\r\n            this.$emit(\"update:value\", this.fileList);\r\n            this.$emit(\"upload-remove\", this.fileList);\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n.upload-img-box {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    .show-img-box{\r\n        margin-right: 10px;\r\n        border: 1px dashed #c0ccda;\r\n        border-radius: 6px;\r\n        overflow: hidden;\r\n        position: relative;\r\n        .el-upload-list__item-actions{\r\n            position: absolute;\r\n            display: block;\r\n            width: 100%;\r\n            height: 100%;\r\n            top: 0;\r\n            left: 0;\r\n            text-align: center;\r\n            color: #fff;\r\n            opacity: 0;\r\n            background-color: rgba(0,0,0,.5);\r\n            transition: opacity .3s;\r\n            font-size: 24px;\r\n            \r\n            .el-upload-actions{\r\n                display: flex;\r\n                justify-content: center;\r\n                align-content: center;\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                i{\r\n                    cursor: pointer;\r\n                    display: inline-block;\r\n                    margin-right: 5px;\r\n                    &:last-child{\r\n                        margin-right: 0;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            &:hover{\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n    .avatar-uploader {\r\n        height: 100%;\r\n        :deep(.el-upload--picture-card) {\r\n            width: 100%;\r\n            height: 100%;\r\n            position: relative;\r\n            i {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n            }\r\n        }\r\n        /deep/.el-upload--picture-card{\r\n            width: 100%;\r\n            height: 100%;\r\n            position: relative;\r\n            i {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dzs-upload-img.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dzs-upload-img.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dzs-upload-img.vue?vue&type=template&id=96c2739c&scoped=true&\"\nimport script from \"./dzs-upload-img.vue?vue&type=script&lang=js&\"\nexport * from \"./dzs-upload-img.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dzs-upload-img.vue?vue&type=style&index=0&id=96c2739c&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"96c2739c\",\n  null\n  \n)\n\nexport default component.exports","const deepCopy = (obj) => {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return obj;\r\n    }\r\n    let copy = Array.isArray(obj) ? [] : {};\r\n    for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            copy[key] = deepCopy(obj[key]);\r\n        }\r\n    }\r\n    return copy;\r\n}\r\n\r\nexport default deepCopy;","<template>\r\n    <div :id=\"fromId\" class=\"form-box\">\r\n        <el-form v-loading=\"loading\" :element-loading-text=\"loadingText\" v-bind=\"{ ...formProps }\" :model=\"fromModel\"\r\n            :rules=\"fromRules\" :label-position=\"labelPosition\" ref=\"dzsForm\"\r\n            :class=\"{ ruleForm: true, noScroll: loading, 'phone-form': formBoxWidth <= 768, 'form-box-scroll': isScroll }\"\r\n            :style=\"{ height: isScroll ? height : '100%' }\">\r\n            <!-- 自定义头部 -->\r\n            <el-row :gutter=\"gutter\">\r\n                <div v-for=\"(item, index) in formItem\" :key=\"index\">\r\n                    <el-col :span=\"item.span ? item.span : 24\" v-if=\"!item.isHidden\">\r\n                        <!-- 自定义组件 -->\r\n                        <template v-if=\"item.isSlot\">\r\n                            <slot :name=\"item.key\"></slot>\r\n                        </template>\r\n                        <template v-if=\"!item.isSlot\">\r\n                            <el-form-item :label=\"item.label\" :prop=\"item.key\">\r\n                                <div class=\"dzs-form-item\">\r\n                                    <slot :name=\"`${item.key}Before`\"></slot>\r\n                                    <!-- 自定义组件 -->\r\n                                    <template v-if=\"item.props && item.props.isSlot\">\r\n                                        <slot :name=\"`${item.key}`\"></slot>\r\n                                    </template>\r\n\r\n                                    <!-- 输入框 -->\r\n                                    <template v-if=\"item.type == 'input'\">\r\n                                        <el-input :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\" :placeholder=\"getPlaceholder(item)\">\r\n                                            <template v-if=\"item.slots\" :slot=\"item.slots.name\">\r\n                                                {{ item.slots.text }}\r\n                                            </template>\r\n                                        </el-input>\r\n                                    </template>\r\n\r\n                                    <!-- 数字输入框 -->\r\n                                    <template v-if=\"item.type == 'number'\">\r\n                                        <el-input-number :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\"\r\n                                            :placeholder=\"getPlaceholder(item)\"></el-input-number>\r\n                                    </template>\r\n\r\n                                    <!-- 选择框 -->\r\n                                    <template v-if=\"item.type == 'select'\">\r\n                                        <el-select :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\"\r\n                                            :placeholder=\"getPlaceholder(item, 'select')\">\r\n                                            <el-option style=\"padding : 0 6px;\" v-for=\"(option, idx) in item.children\"\r\n                                                :key=\"option.value + (idx).toString()\" :label=\"option.label\"\r\n                                                :value=\"option.value\"></el-option>\r\n                                        </el-select>\r\n                                    </template>\r\n\r\n                                    <!-- 日期选择器 -->\r\n                                    <template v-if=\"item.type == 'date'\">\r\n                                        <el-date-picker :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\"\r\n                                            :placeholder=\"getPlaceholder(item, 'select')\"></el-date-picker>\r\n                                    </template>\r\n\r\n                                    <!-- 时间选择器 -->\r\n                                    <template v-if=\"item.type == 'time'\">\r\n                                        <el-time-picker :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\"\r\n                                            :placeholder=\"getPlaceholder(item, 'select')\"></el-time-picker>\r\n                                    </template>\r\n\r\n                                    <!-- 颜色选择器 -->\r\n                                    <template v-if=\"item.type == 'color'\">\r\n                                        <el-color-picker :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\"></el-color-picker>\r\n                                    </template>\r\n\r\n                                    <!-- 开关 -->\r\n                                    <template v-if=\"item.type == 'switch'\">\r\n                                        <el-switch :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\"></el-switch>\r\n                                    </template>\r\n\r\n                                    <!-- 多选框 -->\r\n                                    <template v-if=\"item.type == 'checkbox'\">\r\n                                        <el-checkbox-group :value=\"getFromModelValue(item.key)\"\r\n                                            v-bind=\"{ ...item.props }\" @input=\"changeVaule($event, item.key)\">\r\n                                            <el-checkbox class=\"items\" v-for=\"(option, idx) in item.children\"\r\n                                                v-bind=\"{ ...option.props }\" :key=\"option.value + idx\"\r\n                                                :label=\"option.value\">\r\n                                                {{ option.label }}\r\n                                            </el-checkbox>\r\n                                        </el-checkbox-group>\r\n                                    </template>\r\n\r\n                                    <!-- 单选框 -->\r\n                                    <template v-if=\"item.type == 'radio'\">\r\n                                        <el-radio-group :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @input=\"changeVaule($event, item.key)\">\r\n                                            <el-radio class=\"items\" v-for=\"(option, idx) in item.children\"\r\n                                                v-bind=\"{ ...option.props }\" :key=\"option.value + idx\"\r\n                                                :label=\"option.value\">\r\n                                                {{ option.label }}\r\n                                            </el-radio>\r\n                                        </el-radio-group>\r\n                                    </template>\r\n\r\n                                    <!-- 上传图片 -->\r\n                                    <template v-if=\"item.type == 'uploadImg'\">\r\n                                        <dzs-upload-img :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @change=\"changeVaule($event, item.key)\"></dzs-upload-img>\r\n                                    </template>\r\n\r\n                                    <!-- 上传文件 -->\r\n                                    <template v-if=\"item.type == 'uploadFile'\">\r\n                                        <dzs-upload-file :isPhone=\"formBoxWidth <= 768\"\r\n                                            :value=\"getFromModelValue(item.key)\" v-bind=\"{ ...item.props }\"\r\n                                            @change=\"changeVaule($event, item.key)\"></dzs-upload-file>\r\n                                    </template>\r\n\r\n                                    <!-- 富文本组件 -->\r\n                                    <template v-if=\"item.type == 'editor'\">\r\n                                        <dzs-editors :toolbar=\"toolbar\" @save=\"changeVaule($event, item.key)\"\r\n                                            :show_save=\"false\" v-bind=\"{ ...item.props }\"\r\n                                            :value=\"getFromModelValue(item.key)\">\r\n                                        </dzs-editors>\r\n                                    </template>\r\n\r\n                                    <slot :name=\"`${item.key}After`\"></slot>\r\n                                </div>\r\n\r\n                                <div class=\"from-item-tips\" v-if=\"getTips(item) && item.type != 'divider'\">\r\n                                    {{ getTips(item) }}\r\n                                </div>\r\n                            </el-form-item>\r\n                            <!-- 分割线 -->\r\n                            <template v-if=\"item.type == 'divider'\">\r\n                                <el-divider v-bind=\"{ ...item.props }\">\r\n                                    <span v-if=\"item.props && item.props.tips\">{{ item.props.tips }}</span>\r\n                                    <i v-if=\"item.props && item.props.icon\" :class=\"item.props.icon\"></i>\r\n                                </el-divider>\r\n                            </template>\r\n                        </template>\r\n                    </el-col>\r\n                </div>\r\n            </el-row>\r\n        </el-form>\r\n        <div :class=\"['form-sbumit-box' , buttonFlex]\" v-if=\"showBtn\">\r\n            <el-button type=\"info\" @click.stop=\"cancel\" class=\"btn cancel\">{{ cancelText }}</el-button>\r\n            <slot name=\"footerBtn\"></slot>\r\n            <el-button class=\"btn\" type=\"primary\" @click.stop=\"submit('dzsForm')\">{{ submitText }}</el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n/*\r\n *@props options = {\r\n    formProps : {} , //from表单属性 和饿了吗表单属性一样\r\n    formItem : [\r\n            {\r\n                label: \"\", //输入框名称 非必填\r\n                key: \"\", //输入框key 必填\r\n                type : \"\", //类型 非必填 默认input 输入框 input select date time switch checkbox radio uploadImg edit divider uploadFile \r\n                children : [] , //列表数据 非必填\r\n                defaultValue : \"\" , //默认值 非必填\r\n                isHidden : false , //是否隐藏 非必填\r\n                span : 24 , //宽度 el-col span 非必填\r\n                props:{\r\n                    ...defalut , //内部参数 饿了吗ui相同 type == uploadImg | uploadFile 参数见组件\r\n                    tips : \"\" , //提示文字信息\r\n                    isSlot : false , //是否在 from-item里面添加新的 slot 具名插槽:key+Children\r\n                },\r\n                slots : { //插槽 非必填\r\n                    name : \"\" , //插槽名称\r\n                    text : \"\" , //插槽文字\r\n                },\r\n                rules：[] || { } ,// 规则 饿了吗ui相同 非必填\r\n                isNull : false , //是否不需要添加到提交表单中  非必填\r\n                isSlot : false , //非必填 是否为自定义组件\r\n            }\r\n        ] \r\n    }\r\n * @props submit-text 提交按钮文字 非必填\r\n * @props cancel-text 取消按钮文字 非必填\r\n * @props showBtn 是否显示按钮 非必填\r\n * @props value / v-model 返回值 表单数据\r\n * @props antiShakeTime 防抖时间 非必填\r\n * @props loadingText loading文字 非必填\r\n * @props loading 是否显示loading 非必填\r\n * @props isFormData 是否为formData 非必填\r\n * @props gutter el-row 配置 非必填\r\n * @props isScroll 是否开启超出滚动 非必填\r\n * @props height form表单高度 非必填\r\n * \r\n * @methods onSubmit 提交事件 返回当前表单数据\r\n * @methods onCancel 取消事件\r\n * @methods change 输入框改变事件 返回当前输入框的值和key\r\n * @methods getFormMethod 获取饿了吗表单的原生方法\r\n * @methods clearForm 清空表单数据\r\n * @methods setFormData 设置表单数据\r\n * \r\n*/\r\nimport { pickerOptions } from \"./config.js\";\r\nimport dzsUploadImg from \"../dzs-upload-img/dzs-upload-img.vue\";\r\nimport dzsEditors from \"../dzs-editor/index.vue\";\r\nimport dzsUploadFile from \"../dzs-upload-file/dzs-upload-file.vue\";\r\nimport deepCopy from \"./deepCopy.js\";\r\nexport default {\r\n    name: \"From\",\r\n    components: {\r\n        dzsUploadImg,\r\n        dzsEditors,\r\n        dzsUploadFile\r\n    },\r\n    model: {\r\n        prop: \"value\",\r\n        event: \"update:value\",\r\n    },\r\n    props: {\r\n        options: {\r\n            type: Object,\r\n            default: () => {\r\n                return {};\r\n            },\r\n        },\r\n        submitText: {\r\n            type: String,\r\n            default: () => {\r\n                return \"提交\";\r\n            },\r\n        },\r\n        cancelText: {\r\n            type: String,\r\n            default: () => {\r\n                return \"取消\";\r\n            },\r\n        },\r\n        showBtn: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return true;\r\n            },\r\n        },\r\n        value: {\r\n            type: Object,\r\n            default: () => {\r\n                return {};\r\n            },\r\n        },\r\n        /**防抖时间*/\r\n        antiShakeTime: {\r\n            type: Number,\r\n            default: () => {\r\n                return 1000\r\n            }\r\n        },\r\n        loadingText: {\r\n            type: String,\r\n            default: () => {\r\n                return \"\"\r\n            }\r\n        },\r\n        /**是否显示loading*/\r\n        loading: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return false\r\n            }\r\n        },\r\n        /**是否为formData*/\r\n        isFormData: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return false\r\n            }\r\n        },\r\n        /**el-row 配置*/\r\n        gutter: {\r\n            type: Number,\r\n            default: () => {\r\n                return 10\r\n            }\r\n        },\r\n        /**是否开启超出滚动*/\r\n        isScroll: {\r\n            type: Boolean,\r\n            default: () => {\r\n                return true\r\n            }\r\n        },\r\n        /**form表单高度*/\r\n        height: {\r\n            type: String,\r\n            default: () => {\r\n                return \"100%\"\r\n            }\r\n        },\r\n        /**botton位置*/ \r\n        buttonFlex : {\r\n            type: String,\r\n            default: () => {\r\n                return \"right\"\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            fromModel: {},\r\n            fromRules: {},\r\n            formItem: [], //表单初始数据\r\n            formProps: {}, //表单配置\r\n            pickerOptions: pickerOptions,\r\n            formBoxWidth: 0, //form-box宽度\r\n            labelPosition: \"left\", //对其方式\r\n            timer: null, //定时器 防止重复提交\r\n            toolbar: [],\r\n            fromId: `dzsForm${new Date().getTime()}`\r\n        };\r\n    },\r\n    watch: {\r\n        options: {\r\n            handler(newValue, oldValue) {\r\n                if (!newValue.formItem || !newValue.formItem.length) return;\r\n                this.initModel(newValue);\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        value: {\r\n            handler(newValue, oldValue) {\r\n                if (!newValue) return;\r\n                this.setFormData(newValue);\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n        this.listenFormBoxWidth();\r\n    },\r\n    methods: {\r\n        /**\r\n         * 设置 placeholder\r\n         * @param {Object} item 需要处理的对象\r\n         * @param {String} [type] 什么类型  默认input 支持 input select\r\n         * */\r\n        getPlaceholder(item, type = 'input') {\r\n            let fisrtText = type == 'select' ? '请选择' : '请输入';\r\n            let placeholder = item.props ? item.props.placeholder ? item.props.placeholder : fisrtText + item.label : fisrtText + item.label\r\n            return placeholder\r\n        },\r\n        /**设置提示信息*/\r\n        getTips(item) {\r\n            if (item.props && item.props.tips) {\r\n                return item.props.tips\r\n            };\r\n            return \"\"\r\n        },\r\n        /**改变输入的值*/\r\n        changeVaule(value, keyPath) {\r\n            let keyList = keyPath.split('.');\r\n            let obj = this.fromModel;\r\n            for (let i = 0; i < keyList.length - 1; i++) {\r\n                obj = obj[keyList[i]];\r\n            }\r\n            obj[keyList[keyList.length - 1]] = value;\r\n            this.$emit(\"update:value\", this.fromModel);\r\n            this.$emit(\"change\", {\r\n                value: value,\r\n                key: keyPath,\r\n            });\r\n        },\r\n\r\n        /**获取FromModel的参数*/\r\n        getFromModelValue(keyPath) {\r\n            let keyList = keyPath.split('.');\r\n            let value = this.fromModel;\r\n            for (let i = 0; i < keyList.length; i++) {\r\n                value = value[keyList[i]];\r\n            }\r\n            return value;\r\n        },\r\n\r\n        /**提交*/\r\n        submit(formName = \"dzsForm\") {\r\n            if (this.timer) {\r\n                this.$message({\r\n                    message: `请勿重复提交,${this.antiShakeTime / 1000} 秒后再试`,\r\n                    type: \"warning\",\r\n                });\r\n                return;\r\n            }\r\n            this.timer = setTimeout(() => {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n            }, this.antiShakeTime);\r\n            return new Promise((resolve, reject) => {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (!valid) {\r\n                        this.$message.error(\"请填写完整信息\");\r\n                        reject({ code: -200, message: \"请填写完整的信息\" });\r\n                        return;\r\n                    }\r\n                    if (this.isFormData) {\r\n                        this.sendFormData(resolve);\r\n                        return;\r\n                    }\r\n                    let sendList = {};\r\n                    this.formItem.forEach(item => {\r\n                        let keyPath = item.key.split('.');\r\n                        let value = this.fromModel;\r\n                        for (let i = 0; i < keyPath.length; i++) {\r\n                            value = value[keyPath[i]];\r\n                        }\r\n                        switch (item.type) {\r\n                            case \"uploadImg\":\r\n                                let urlList = value;\r\n                                sendList[item.key] = urlList && urlList.length > 0 ? urlList.map(item => item.uploadUrl).join(\",\") : \"\";\r\n                                break;\r\n                            case \"switch\":\r\n                                sendList[item.key] = value || false;\r\n                                break;\r\n                            default:\r\n                                sendList[item.key] = value;\r\n                                break;\r\n                        }\r\n                        if (item.isNull) delete sendList[item.key];\r\n                        sendList = this.transformKeysToNestedObject(sendList);\r\n                    })\r\n                    this.$emit(\"onSubmit\", sendList);\r\n                    this.$emit(\"update:value\", sendList);\r\n                    resolve(sendList);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**formData 发送数据*/\r\n        sendFormData(resolve, reject) {\r\n            let sendList = new FormData();\r\n            this.formItem.forEach((item) => {\r\n                if (item.isNull) return;\r\n                let keyPath = item.key.split('.');\r\n                let value = this.fromModel;\r\n                for (let i = 0; i < keyPath.length; i++) {\r\n                    value = value[keyPath[i]];\r\n                }\r\n                let files = null;\r\n                switch (item.type) {\r\n                    case \"uploadImg\":\r\n                        let urlList = value;\r\n                        if (urlList && urlList.length > 1) {\r\n                            reject({ code: -200, message: \"formData 上传图片只能上传一张图片 请检查\" });\r\n                            throw new Error(`formData 上传图片只能上传一张图片 请检查`)\r\n                        }\r\n                        if (urlList && urlList.length > 0) {\r\n                            files = urlList[0].file;\r\n                        }\r\n                        if (!files && urlList) {\r\n                            files = urlList.file || null;\r\n                        }\r\n                        if (urlList && urlList.length > 0) {\r\n                            sendList.append(item.key, files);\r\n                        }\r\n                        break;\r\n                    case \"uploadFile\":\r\n                        let fileList = value;\r\n                        if (fileList && fileList.length > 1) {\r\n                            reject({ code: -200, message: \"formData 上传图片只能上传一个文件 请检查\" });\r\n                            throw new Error(`formData 上传图片只能上传一个文件 请检查`)\r\n                        }\r\n                        if (fileList && fileList.length > 0) {\r\n                            files = fileList[0].file;\r\n                        }\r\n                        if (!files && fileList) {\r\n                            files = fileList.file || null;\r\n                        }\r\n\r\n                        if (fileList && fileList.length > 0) {\r\n                            sendList.append(item.key, files);\r\n                        }\r\n                        break;\r\n                    case \"switch\":\r\n                        sendList.append(item.key, value ? 'true' : 'false');\r\n                        break;\r\n                    case \"checkbox\":\r\n                        sendList.append(item.key, value.join(','));\r\n                        break;\r\n                    case \"divider\":\r\n                        sendList.delete(item.key);\r\n                        break;\r\n                    default:\r\n                        sendList.append(item.key, value);\r\n                        break;\r\n                }\r\n            });\r\n            this.$emit(\"onSubmit\", sendList);\r\n            resolve(sendList);\r\n        },\r\n        cancel() {\r\n            this.clearForm();\r\n            this.$emit(\"onCancel\");\r\n        },\r\n\r\n        /**初始化数据*/\r\n        initModel(data) {\r\n            this.labelPosition = this.formBoxWidth <= 768 ? \"top\" : \"left\";\r\n            if (this.options && this.options.formProps) {\r\n                let labelPosition = this.options.formProps['label-position'] || this.options.formProps['labelPosition']\r\n                if (labelPosition) {\r\n                    this.labelPosition = labelPosition;\r\n                }\r\n            }\r\n            this.formProps = data.formProps || {};\r\n            this.formItem = deepCopy(data.formItem);\r\n            let fromModel = {};\r\n            this.formItem.forEach((item) => {\r\n                // 兼容手机端\r\n                item.span = this.formBoxWidth <= 768 ? 24 : item.span;\r\n                if (this.value[item.key]) item.defaultValue = this.value[item.key];\r\n                // 初始化选项框 和上传图片框\r\n                if (\r\n                    (item.type === \"checkbox\" || item.type === \"uploadImg\" || item.type == 'uploadFile') &&\r\n                    !item.defaultValue\r\n                ) {\r\n                    item.defaultValue = [];\r\n                }\r\n                // 初始化 开关\r\n                if (item.type == \"switch\" && !item.defaultValue) {\r\n                    item.defaultValue = false;\r\n                }\r\n                // input框 在饿了吗ui 中需要是 string类型\r\n                if (item.type == \"input\" && item.defaultValue) {\r\n                    item.defaultValue = item.defaultValue.toString();\r\n                }\r\n                if (!item.props) item.props = {};\r\n                // 当下拉框为多选时，需要将默认值转换为数组\r\n                if (item.type == \"select\" && item.props.multiple && !item.defaultValue) {\r\n                    item.defaultValue = [];\r\n                }\r\n                this.fromRules[item.key] = item.rules || [];\r\n                if (item.defaultValue) {\r\n                    fromModel[item.key] = item.defaultValue;\r\n                }\r\n                if (item.type != 'switch') {\r\n                    fromModel[item.key] = fromModel[item.key] ? fromModel[item.key] : item.defaultValue || \"\";\r\n                } else {\r\n                    fromModel[item.key] = fromModel[item.key] ? fromModel[item.key] : item.defaultValue;\r\n                }\r\n            });\r\n            fromModel = this.transformKeysToNestedObject(fromModel);\r\n            this.fromModel = { ...deepCopy(this.fromModel), ...deepCopy(fromModel) };\r\n        },\r\n\r\n        /**格式化值*/\r\n        transformKeysToNestedObject(obj) {\r\n            let result = {};\r\n\r\n            // 获取对象的所有键（避免在for-in循环中检查hasOwnProperty）  \r\n            const keys = Object.keys(obj);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const keyPath = keys[i].split('.');\r\n                const value = obj[keys[i]];\r\n                let currentNode = result;\r\n\r\n                // 遍历嵌套键数组，除了最后一个键  \r\n                for (let j = 0; j < keyPath.length - 1; j++) {\r\n                    const currentKey = keyPath[j];\r\n\r\n                    // 使用逻辑或运算符来避免额外的检查  \r\n                    currentNode = currentNode[currentKey] || (currentNode[currentKey] = {});\r\n                }\r\n\r\n                // 将最后一个键和值赋给当前节点  \r\n                currentNode[keyPath[keyPath.length - 1]] = value;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**清空表单数据*/\r\n        clearForm() {\r\n            this.$refs[\"dzsForm\"].resetFields();\r\n            this.initModel(this.options);\r\n            this.$emit(\"update:value\", this.fromModel);\r\n        },\r\n\r\n        /**调用饿了么表单的原生方法*/\r\n        getFormMethod() {\r\n            return this.$refs[\"dzsForm\"];\r\n        },\r\n\r\n        /**赋值*/\r\n        setFormData(data) {\r\n            if(JSON.stringify(data) == '{}' || !data) return ;\r\n            this.fromModel = { ...deepCopy(data) };\r\n            // 避免数据未加载完毕时，数据未赋值\r\n            setTimeout(() => {\r\n                this.fromModel = { ...deepCopy(data) };\r\n            }, 100)\r\n        },\r\n        /**监听form-box宽度变化*/\r\n        listenFormBoxWidth() {\r\n            let phoneToolbar = [\"undo redo save | importword autosave fullscreen print help\"];\r\n            let toolbar = [\"undo redo save| formatselect | fontsizeselect | fontselect | bold italic forecolor backcolor | alignleft aligncenter alignright alignjustify | lists image searchreplace | bullist numlist outdent indent |  media table insertdatetime | removeformat hr | importword autosave fullscreen print help\"];\r\n            const resizeObserver = new ResizeObserver(entries => {\r\n                for (let entry of entries) {\r\n                    const { width } = entry.contentRect;\r\n                    this.formBoxWidth = width;\r\n                    this.labelPosition = width <= 768 ? \"top\" : \"left\";\r\n                    if (this.options && this.options.formProps) {\r\n                        let labelPosition = this.options.formProps['label-position'] || this.options.formProps['labelPosition']\r\n                        if (labelPosition) {\r\n                            this.labelPosition = labelPosition;\r\n                        }\r\n                    }\r\n                    this.toolbar = width <= 768 ? phoneToolbar : toolbar;\r\n                    this.formItem = deepCopy(this.options.formItem);\r\n                    if (!this.formItem) return;\r\n                    this.formItem.forEach((item) => {\r\n                        // 兼容手机端\r\n                        item.span = width <= 768 ? 24 : item.span;\r\n                    })\r\n                }\r\n            })\r\n            resizeObserver.observe(document.querySelector(`#${this.fromId}`));\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.ruleForm {\r\n    .items {\r\n        padding-right: 10px;\r\n    }\r\n\r\n    .from-item-tips {\r\n        font-size: 12px;\r\n        color: #ccc;\r\n        padding-top: 3px;\r\n        line-height: 14px;\r\n    }\r\n}\r\n\r\n.form-box-scroll {\r\n    overflow-y: auto;\r\n    -ms-overflow-style: none;\r\n\r\n    /*IE10*/\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.phone-form {\r\n    min-width: 98%;\r\n    width: 98%;\r\n}\r\n\r\n.form-box {\r\n    .form-sbumit-box {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        padding: 10px 0;\r\n        &.right{\r\n            justify-content: flex-end;\r\n        }\r\n        &.left{\r\n            justify-content: flex-start;\r\n        }\r\n        &.center{\r\n            justify-content: center;\r\n        }\r\n\r\n        .cancel {\r\n            background-color: #fff;\r\n            border: 1px solid #bbb;\r\n            color: #666;\r\n        }\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .ruleForm {\r\n        width: 100%;\r\n        min-width: 100%;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=b186ba9e&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=b186ba9e&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b186ba9e\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dzs-upload-file.vue?vue&type=style&index=0&id=2e9b139b&prod&lang=less&scoped=true&\""],"sourceRoot":""}