(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1a3d6798","chunk-2d21f46e"],{"12da":function(e,n,t){"use strict";t.r(n);var s=function(){var e=this,n=e._self._c;return n("div",[e.newIndex?e._e():n("dzs-header",{attrs:{title:"好用的js片段"}}),n("div",{staticClass:"search-box"},[n("div",{staticClass:"left"}),n("div",{staticClass:"right"},[n("el-input",{staticClass:"ipt",attrs:{placeholder:"请输入你需要搜索的名称",clearable:""},on:{input:e.inputValue},model:{value:e.searchValue,callback:function(n){e.searchValue=n},expression:"searchValue"}}),n("el-button",{staticClass:"btn",attrs:{type:"primary",icon:"el-icon-search"}},[e._v("搜索")])],1)]),e.searchList.length?n("div",{staticClass:"page"},e._l(e.searchList,(function(t,s){return n("div",{key:s,staticClass:"item"},[n("h2",[e._v(e._s(t.name))]),n("dzs-code",{attrs:{title:"代码片段",value:t.code}})],1)})),0):n("div",{staticClass:"page"},e._l(e.list,(function(t,s){return n("div",{key:s,staticClass:"item"},[n("h2",[e._v(e._s(t.name))]),n("dzs-code",{attrs:{title:"代码片段",value:t.code}})],1)})),0),e.newIndex?e._e():n("el-backtop",{attrs:{"visibility-height":20}})],1)},r=[],a=t("d8ae"),i=t("4772"),c={props:{newIndex:{type:Boolean,default:()=>!1}},data(){return{list:[{name:"深拷贝",code:a["code1"]},{name:"在执行下一个操作之前等待指定的持续时间（以毫秒为单位）",code:a["code2"]},{name:"将多维数组拉平",code:a["code3"]},{name:"升序",code:a["code4"]},{name:"降序",code:a["code5"]},{name:"反转字符串",code:a["code6"]},{name:"是否为ie",code:a["code7"]},{name:"获取某个时间的前n天/后n天",code:a["code8"]}],searchList:[],searchValue:""}},mounted(){},methods:{inputValue(){Object(i["a"])({list:this.list,searValue:this.searchValue,key:"name",success:e=>{this.searchList=e}})}}},d=c,o=(t("ce34"),t("2877")),l=Object(o["a"])(d,s,r,!1,null,"25585338",null);n["default"]=l.exports},ce34:function(e,n,t){"use strict";t("faff")},d8ae:function(e,n,t){"use strict";t.r(n),t.d(n,"code1",(function(){return s})),t.d(n,"code2",(function(){return r})),t.d(n,"code3",(function(){return a})),t.d(n,"code4",(function(){return i})),t.d(n,"code5",(function(){return c})),t.d(n,"code6",(function(){return d})),t.d(n,"code7",(function(){return o})),t.d(n,"code8",(function(){return l}));const s="\n// 方法1\nconst newJson = JSON.parse(JSON.stringify(oldJson));\n// 方法2\nconst newJson = {...oldJson}\n",r="\n/**\n * 延时函数\n * @param {Number} [time] 延时时间 默认500ms\n * @param {Function} [fn] 回调函数\n * */ \nconst sleep = (time = 500 , fn) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (fn && typeof fn === 'function') {\n                resolve(fn())\n            }else{\n                resolve(true)\n            }\n        }, time)\n    })\n}\n\n// 使用\nawait sleep(1000);\n",a="\nconst flatten = list => list.reduce((prev, next) => ([\n    ...prev,\n    ...(Array.isArray(next) ? flatten(next) : [next])\n]), []);\n\n// 使用\n\nflatten([[1, 2, [3, 4], 5, [6, [7, 8]]]]); // = [1, 2, 3, 4, 5, 6, 7, 8]\n",i="\nconst ascending = (fn) => (a, b) => {\n    const valA = fn(a);\n    const valB = fn(b);\n    return valA < valB ? -1 : valA > valB ? 1 : 0;\n}\n\n// 使用\nconst byPrice = ascending(val => val.price);\n[{ price: 300 }, { price: 100 }, { price: 200 }].sort(byPrice); \n// = [{ price: 100 }, { price: 200 }, { price: 300 }]\n",c="\nconst descending = (fn) => (a, b) => {\n    const valA = fn(b);\n    const valB = fn(a);\n    return valA < valB ? -1 : valA > valB ? 1 : 0;\n}\n\n// 使用\nconst byPrice = descending(val => val.price);\n[{ price: 300 }, { price: 100 }, { price: 200 }].sort(byPrice); \n// = [{ price: 300 }, { price: 200 }, { price: 100 }]\n",d="\nconst reverseString = string => [...string].reverse().join('');\n// 使用\nreverseString('Medium'); // 'muideM'\n",o='\n// 是否已为IE浏览器\n    IEVersion() {\n        let userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\n        let isIE =\n            userAgent.indexOf("compatible") > -1 &&\n            userAgent.indexOf("MSIE") > -1; //判断是否IE<11浏览器\n        let isEdge = userAgent.indexOf("Edge") > -1 && !isIE; //判断是否IE的Edge浏览器\n        let isIE11 =\n            userAgent.indexOf("Trident") > -1 &&\n            userAgent.indexOf("rv:11.0") > -1;\n        if (isIE) {\n            let reIE = new RegExp("MSIE (\\d+\\.\\d+);");\n            reIE.test(userAgent);\n            let fIEVersion = parseFloat(RegExp["$1"]);\n            if (fIEVersion == 7) {\n                return 7;\n            } else if (fIEVersion == 8) {\n                return 8;\n            } else if (fIEVersion == 9) {\n                return 9;\n            } else if (fIEVersion == 10) {\n                return 10;\n            } else {\n                return 6; //IE版本<=7\n            }\n        } else if (isEdge) {\n            return "edge"; //edge\n        } else if (isIE11) {\n            return 11; //IE11\n        } else {\n            return -1; //不是ie浏览器\n        }\n    }\n',l='\n/**\n * 获取 当前天数的指定前后天数\n * @param {Date} [date] 当前日期\n * @param {Number} [day] 前后天数 -1：前一天 1：后一天\n * */\ngetNextDate(date, day) {\n    let dd = new Date(date);\n    dd.setDate(dd.getDate() + day);\n    let y = dd.getFullYear();\n    let m = dd.getMonth() + 1 < 10 ? "0" + (dd.getMonth() + 1) : dd.getMonth() + 1;\n    let d = dd.getDate() < 10 ? "0" + dd.getDate() : dd.getDate();\n    return y + "-" + m + "-" + d;\n},\n'},faff:function(e,n,t){}}]);
//# sourceMappingURL=chunk-1a3d6798.16cdf165.js.map