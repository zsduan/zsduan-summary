{"version":3,"sources":["webpack:///./src/views/setTime/config.js"],"names":["code1","code2"],"mappings":"kHAAA,mFAQO,MAAMA,EAAS,q6BAoCTC,EAAS","file":"static/js/chunk-2d0c51d8.9267e05e.js","sourcesContent":["/*\r\n * @Author: zs.duan\r\n * @Date: 2022-09-30 17:10:34\r\n * @LastEditors: zs.duan\r\n * @LastEditTime: 2022-09-30 17:18:51\r\n * @FilePath: \\vue2+js+eui+template\\src\\views\\setTime\\config.js\r\n */\r\n\r\nexport const code1 = `\r\n// 共有两个方法 formatTime 和 asyncFormatTime 其中 asyncFormatTime 返回一个Promise对象\r\nimport {formatTime , asyncFormatTime} from \"../../utils/format-time\";\r\n\r\n\r\n/**\r\n * @name 格式化时间 \r\n * @description options 建议使用对象传参 也可以使用字符串 | 时间戳 | 日期对象\r\n * @description 所有参数不传时 默认为当前时间\r\n * @param {Object | string | Date | number} [options] 配置对象 | 日期字符串 | 日期对象 | 时间戳\r\n * @param {String} options.format 格式化字符串 yyyy-MM-dd HH:mm:ss\r\n * @param {Date | string | number} [options.date] 日期对象 | 日期字符串 | 时间戳\r\n * @param {Function} [options.success] 成功返回\r\n * @param {Function} [options.fail] 失败返回\r\n * @param {Function} [options.complete] 完成返回\r\n * @returns {String} 格式化后的时间\r\n * */\r\n\r\nformatTime({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd HH:mm:ss\",\r\n    success : (res)=>{\r\n        this.time2 = res\r\n    },\r\n    fail : (err)=>{\r\n        console.log(err)\r\n    },\r\n})\r\n\r\n// 还可以\r\nlet time = formatTime({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd\",\r\n});\r\n`\r\n\r\nexport const code2 = `\r\nasyncFormatTime({\r\n    date : new Date(),\r\n    format : \"yyyy-MM-dd HH:mm:ss\",\r\n}).then((res)=>{\r\n    this.time3 = res\r\n}).catch((err)=>{\r\n    console.log(err)\r\n})\r\n`"],"sourceRoot":""}