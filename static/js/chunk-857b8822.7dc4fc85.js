(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-857b8822","chunk-2d0c51d8"],{"25fc":function(t,e,n){"use strict";n("3eec")},"3e5e":function(t,e,n){"use strict";n.r(e),n.d(e,"code1",(function(){return s})),n.d(e,"code2",(function(){return o})),n.d(e,"code3",(function(){return i})),n.d(e,"code4",(function(){return a}));const s="\n/**\n * 获取格式化时间\n * @param {Object} option 配置对象\n * @param {String} option.Format 格式化字符串 yyyy-MM-dd HH:mm:ss\n * @param {Date | string} [option.date] 日期对象\n * @param {Function} [option.success] 成功返回\n * @param {Function} [option.fail] 失败返回\n * @returns {String} 格式化后的时间\n * @example\n * getTime({\n * Format : 'yyyy-MM-dd HH:mm:ss',\n * date : new Date(),\n * success : (reslut)=>{},\n * }) // 2021-04-05 15:54:28\n * */\n\nsetTime({\n    date : Time,\n    success : (res)=>{\n        this.time = res\n    }\n})\n",o="\n/**\n * 获取格式化时间\n * @param {Object} option 配置对象\n * @param {String} option.Format 格式化字符串 yyyy-MM-dd HH:mm:ss\n * @param {Date | string} [option.date] 日期对象\n * @param {Function} [option.success] 成功返回\n * @param {Function} [option.fail] 失败返回\n * @returns {String} 格式化后的时间\n * @example\n * getTime({\n * Format : 'yyyy-MM-dd HH:mm:ss',\n * date : new Date(),\n * success : (reslut)=>{},\n * }) // 2021-04-05 15:54:28\n * */\n\nsetTime({\n    date : e.Time,\n    Format : \"yyyy-MM-dd\",\n    success : (res)=>{\n        this.time1 = res\n    }\n})\n",i='\n/**\n * @name 格式化时间 \n * @description options 建议使用对象传参 也可以使用字符串 | 时间戳 | 日期对象\n * @description 所有参数不传时 默认为当前时间\n * @param {Object | string | Date | number} [options] 配置对象 | 日期字符串 | 日期对象 | 时间戳\n * @param {String} options.format 格式化字符串 yyyy-MM-dd HH:mm:ss\n * @param {Date | string | number} [options.date] 日期对象 | 日期字符串 | 时间戳\n * @param {Function} [options.success] 成功返回\n * @param {Function} [options.fail] 失败返回\n * @param {Function} [options.complete] 完成返回\n * @returns {String} 格式化后的时间\n * @returns {Promise} 返回一个Promise对象\n * */\n\nimport formatTime from "../../utils/format-time";\n\nformatTime({\n    date : new Date(),\n    format : "yyyy-MM-dd HH:mm:ss",\n    success : (res)=>{\n        this.time2 = res\n    },\n    fail : (err)=>{\n        console.log(err)\n    },\n    complete : (reslut)=>{\n        console.log("成功" , {code : 200 , msg : "成功" , date : "xxx"})\n        console.log("失败" , {code : -1 , msg : "xxx"})\n    }\n})\n\n',a='\n/**\n * @name 格式化时间 \n * @description options 建议使用对象传参 也可以使用字符串 | 时间戳 | 日期对象\n * @description 所有参数不传时 默认为当前时间\n * @param {Object | string | Date | number} [options] 配置对象 | 日期字符串 | 日期对象 | 时间戳\n * @param {String} options.format 格式化字符串 yyyy-MM-dd HH:mm:ss\n * @param {Date | string | number} [options.date] 日期对象 | 日期字符串 | 时间戳\n * @param {Function} [options.success] 成功返回\n * @param {Function} [options.fail] 失败返回\n * @param {Function} [options.complete] 完成返回\n * @returns {String} 格式化后的时间\n * @returns {Promise} 返回一个Promise对象\n * */\n\nimport formatTime from "../../utils/format-time";\n\nformatTime({\n    date : new Date(),\n    format : "yyyy-MM-dd HH:mm:ss",\n}).then((res)=>{\n    this.time3 = res\n}).catch((err)=>{\n    console.log(err)\n})\n\n// 也可以全部都是空 使用 async await\nasync time = await formatTime()\n\n// 也可以直接传一个时间参数 使用 async await\nasync time = await formatTime(new Date())\n\n// 也可以直接传format参数直接格式化当前时间\nasync time = await formatTime({format : "yyyy-MM-dd HH:mm:ss"})\n'},"3eec":function(t,e,n){},"829f":function(t,e,n){n("d9e2");const s=function(t,e){let n=t.getFullYear(),s=t.getMonth()+1,o=t.getDate(),i=t.getHours(),a=t.getMinutes(),r=t.getSeconds(),m=t.getMilliseconds(),c={"M+":s,"d+":o,"H+":i,"m+":a,"s+":r,"S+":m};for(var d in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(n+"").substr(4-RegExp.$1.length))),c)new RegExp("("+d+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?c[d]:("00"+c[d]).substr(String(c[d]).length)));return e},o=function(t){if(t||(t={}),"string"!==typeof t&&"number"!==typeof t&&"[object Date]"!==Object.prototype.toString.call(t)||(t={date:t}),"object"!==typeof t)throw new Error("options must be an object or string or number or Date object");let e={format:"yyyy-MM-dd HH:mm:ss",date:new Date,success:function(t){},fail:function(t){},complete:function(t){}};t=Object.assign(e,t);let n=t.date,o=t.format;return o||(o="yyyy-MM-dd HH:mm:ss"),n||(n=new Date),new Promise((e,i)=>{if("string"!==typeof o)throw t.complete({code:-1,msg:"format 必须是字符串"}),t.fail("format 必须是字符串"),i("format 必须是字符串"),new Error("format 必须是字符串");try{n=new Date(n)}catch(r){throw t.complete({code:-1,msg:"时间格式错误"}),t.fail("时间格式错误"),i("时间格式错误"),new Error("时间格式错误")}let a=s(n,o);t.complete({code:200,msg:"success",data:a}),t.success(a),e(a)})};t.exports=o},"983c":function(t,e,n){"use strict";n.r(e);var s=function(){var t=this,e=t._self._c;return e("div",[t.newIndex?t._e():e("dzs-header",{attrs:{title:"处理时间"}}),e("div",{staticClass:"page"},[e("h2",[t._v("基础用法")]),e("div",{staticClass:"item"},[e("div",{staticClass:"tips-box"},[t._v("获取当前时间 并按照固定格式处理")]),e("dzs-form",{attrs:{options:t.formOptions},on:{onSubmit:t.onSubmit}}),e("div",{staticClass:"guid"},[t._v(t._s(t.time))]),e("dzs-code",{attrs:{title:"使用方法",value:t.code1}})],1),e("div",{staticClass:"item"},[e("div",{staticClass:"tips-box"},[t._v("自定义格式")]),e("dzs-form",{attrs:{options:t.formOptions},on:{onSubmit:t.onSubmit1}}),e("div",{staticClass:"guid"},[t._v(t._s(t.time1))]),e("dzs-code",{attrs:{title:"使用方法",value:t.code2}})],1),e("h2",[t._v("新版格式化")]),e("div",{staticClass:"item"},[e("div",{staticClass:"guid"},[t._v(t._s(t.time2))]),e("dzs-code",{attrs:{title:"使用方法",value:t.code3}})],1),e("h2",[t._v("新版格式化支持Promise")]),e("div",{staticClass:"item"},[e("div",{staticClass:"guid"},[t._v(t._s(t.time3))]),e("dzs-code",{attrs:{title:"使用方法",value:t.code4}})],1),e("h2",[t._v("源代码下载/查看")]),t._m(0)]),t.newIndex?t._e():e("el-backtop",{attrs:{"visibility-height":20}})],1)},o=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"item"},[e("a",{attrs:{target:"_blank",href:"https://github.com/zsduan/zsduan-summary/blob/master/src/utils/setTime.js"}},[t._v("下载/查看地址")])])}],i=n("ac93"),a=n("50ea"),r=n("3e5e"),m=n("829f"),c=n.n(m),d={props:{newIndex:{type:Boolean,default:()=>!1}},components:{dzsForm:i["a"]},computed:{formOptions(){return{formProps:{"label-width":"60px"},formItem:[{label:"时间",key:"Time",type:"date",span:24,rules:[],props:{type:"datetime","value-format":"yyyy-MM-dd HH:mm:ss",placeholder:"请选择时间"}}]}}},data(){return{time:Object(a["a"])(),code1:r["code1"],code2:r["code2"],code3:r["code3"],code4:r["code4"],time1:Object(a["a"])({format:"yyyy-MM-dd"}),time2:"",time3:""}},mounted(){this.setTime2(),this.setTime3()},methods:{onSubmit(t){Object(a["a"])({date:t.Time,success:t=>{this.time=t}})},onSubmit1(t){Object(a["a"])({date:t.Time,format:"yyyy-MM-dd",success:t=>{this.time1=t}})},setTime2(){c()({date:new Date,format:"yyyy-MM-dd HH:mm:ss",success:t=>{this.time2=t},fail:t=>{console.log(t)},complete:t=>{console.log("成功",{code:200,msg:"成功",date:"xxx"}),console.log("失败",{code:-1,msg:"xxx"})}})},setTime3(){c()({date:new Date,format:"yyyy-MM-dd HH:mm:ss"}).then(t=>{this.time3=t}).catch(t=>{console.log(t)})}}},u=d,p=(n("25fc"),n("2877")),l=Object(p["a"])(u,s,o,!1,null,"286f7ea0",null);e["default"]=l.exports}}]);
//# sourceMappingURL=chunk-857b8822.7dc4fc85.js.map